TimeQuest Timing Analyzer report for ALU_CTRL
Wed Jun 27 19:30:29 2018
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'estado.resultToW'
 12. Slow Model Setup: 'regOp[1]'
 13. Slow Model Setup: 'rst'
 14. Slow Model Setup: 'estado.moveToRegisters'
 15. Slow Model Setup: 'clk'
 16. Slow Model Hold: 'rst'
 17. Slow Model Hold: 'estado.resultToW'
 18. Slow Model Hold: 'clk'
 19. Slow Model Hold: 'regOp[1]'
 20. Slow Model Hold: 'estado.moveToRegisters'
 21. Slow Model Recovery: 'estado.resultToW'
 22. Slow Model Recovery: 'estado.moveToRegisters'
 23. Slow Model Recovery: 'clk'
 24. Slow Model Removal: 'estado.moveToRegisters'
 25. Slow Model Removal: 'estado.resultToW'
 26. Slow Model Removal: 'clk'
 27. Slow Model Minimum Pulse Width: 'clk'
 28. Slow Model Minimum Pulse Width: 'rst'
 29. Slow Model Minimum Pulse Width: 'estado.moveToRegisters'
 30. Slow Model Minimum Pulse Width: 'estado.resultToW'
 31. Slow Model Minimum Pulse Width: 'regOp[1]'
 32. Clock to Output Times
 33. Minimum Clock to Output Times
 34. Fast Model Setup Summary
 35. Fast Model Hold Summary
 36. Fast Model Recovery Summary
 37. Fast Model Removal Summary
 38. Fast Model Minimum Pulse Width Summary
 39. Fast Model Setup: 'regOp[1]'
 40. Fast Model Setup: 'estado.resultToW'
 41. Fast Model Setup: 'estado.moveToRegisters'
 42. Fast Model Setup: 'rst'
 43. Fast Model Setup: 'clk'
 44. Fast Model Hold: 'rst'
 45. Fast Model Hold: 'estado.resultToW'
 46. Fast Model Hold: 'clk'
 47. Fast Model Hold: 'regOp[1]'
 48. Fast Model Hold: 'estado.moveToRegisters'
 49. Fast Model Recovery: 'clk'
 50. Fast Model Recovery: 'estado.resultToW'
 51. Fast Model Recovery: 'estado.moveToRegisters'
 52. Fast Model Removal: 'estado.moveToRegisters'
 53. Fast Model Removal: 'estado.resultToW'
 54. Fast Model Removal: 'clk'
 55. Fast Model Minimum Pulse Width: 'clk'
 56. Fast Model Minimum Pulse Width: 'rst'
 57. Fast Model Minimum Pulse Width: 'estado.moveToRegisters'
 58. Fast Model Minimum Pulse Width: 'estado.resultToW'
 59. Fast Model Minimum Pulse Width: 'regOp[1]'
 60. Clock to Output Times
 61. Minimum Clock to Output Times
 62. Multicorner Timing Analysis Summary
 63. Clock to Output Times
 64. Minimum Clock to Output Times
 65. Setup Transfers
 66. Hold Transfers
 67. Recovery Transfers
 68. Removal Transfers
 69. Report TCCS
 70. Report RSKM
 71. Unconstrained Paths
 72. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; ALU_CTRL                                           ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C20F484C7                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                         ;
+------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------+
; Clock Name             ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                    ;
+------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------+
; clk                    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                    ;
; estado.moveToRegisters ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { estado.moveToRegisters } ;
; estado.resultToW       ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { estado.resultToW }       ;
; regOp[1]               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { regOp[1] }               ;
; rst                    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { rst }                    ;
+------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------+


+--------------------------------------------------------------+
; Slow Model Fmax Summary                                      ;
+------------+-----------------+------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name             ; Note ;
+------------+-----------------+------------------------+------+
; 128.7 MHz  ; 128.7 MHz       ; rst                    ;      ;
; 256.02 MHz ; 256.02 MHz      ; estado.moveToRegisters ;      ;
; 502.01 MHz ; 502.01 MHz      ; regOp[1]               ;      ;
+------------+-----------------+------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-------------------------------------------------+
; Slow Model Setup Summary                        ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.resultToW       ; -9.115 ; -80.732       ;
; regOp[1]               ; -7.850 ; -7.850        ;
; rst                    ; -6.770 ; -58.742       ;
; estado.moveToRegisters ; -5.242 ; -44.563       ;
; clk                    ; 0.514  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Hold Summary                         ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; rst                    ; -3.976 ; -46.555       ;
; estado.resultToW       ; -1.631 ; -6.505        ;
; clk                    ; -0.415 ; -0.415        ;
; regOp[1]               ; -0.148 ; -0.148        ;
; estado.moveToRegisters ; -0.030 ; -0.030        ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Recovery Summary                     ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.resultToW       ; -0.032 ; -0.032        ;
; estado.moveToRegisters ; 0.118  ; 0.000         ;
; clk                    ; 0.261  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Removal Summary                      ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.moveToRegisters ; -1.297 ; -4.895        ;
; estado.resultToW       ; -1.126 ; -7.738        ;
; clk                    ; -0.009 ; -0.027        ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Minimum Pulse Width Summary          ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; clk                    ; -1.469 ; -5.135        ;
; rst                    ; -1.469 ; -1.469        ;
; estado.moveToRegisters ; 0.500  ; 0.000         ;
; estado.resultToW       ; 0.500  ; 0.000         ;
; regOp[1]               ; 0.500  ; 0.000         ;
+------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'estado.resultToW'                                                                                 ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node    ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; -9.115 ; regW[0]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.174     ; 6.789      ;
; -9.052 ; regW[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.162     ; 6.738      ;
; -9.027 ; regW[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.190     ; 6.685      ;
; -9.014 ; regW[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.159     ; 6.703      ;
; -8.882 ; regB[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.184     ; 6.546      ;
; -8.835 ; regB[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.143     ; 6.540      ;
; -8.826 ; regOp[0]  ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.179     ; 6.495      ;
; -8.720 ; regW[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.185     ; 6.383      ;
; -8.602 ; regW[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.174     ; 6.276      ;
; -8.580 ; regW[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.681     ; 5.510      ;
; -8.580 ; regW[0]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.693     ; 5.498      ;
; -8.547 ; regB[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.185     ; 6.210      ;
; -8.497 ; regW[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.190     ; 6.155      ;
; -8.492 ; regW[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.709     ; 5.394      ;
; -8.459 ; regW[0]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.675     ; 5.382      ;
; -8.429 ; regW[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.663     ; 5.364      ;
; -8.390 ; regB[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.185     ; 6.053      ;
; -8.380 ; regW[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.460     ; 5.607      ;
; -8.361 ; regW[0]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.675     ; 5.568      ;
; -8.341 ; regB[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.179     ; 6.010      ;
; -8.316 ; regB[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.704     ; 5.223      ;
; -8.314 ; regOp[0]  ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.680     ; 5.232      ;
; -8.297 ; regW[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.663     ; 5.516      ;
; -8.275 ; regB[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -2.863     ; 5.142      ;
; -8.273 ; regW[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.691     ; 5.464      ;
; -8.260 ; regW[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.660     ; 5.482      ;
; -8.235 ; regW[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -2.841     ; 5.124      ;
; -8.224 ; regB[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.179     ; 5.893      ;
; -8.215 ; regW[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.457     ; 5.445      ;
; -8.213 ; regOp[0]  ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.698     ; 5.126      ;
; -8.207 ; regW[0]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.467     ; 5.431      ;
; -8.203 ; regW[0]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.691     ; 5.344      ;
; -8.194 ; regB[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.183     ; 5.859      ;
; -8.157 ; regB[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.662     ; 5.106      ;
; -8.146 ; regB[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.685     ; 5.059      ;
; -8.139 ; regW[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.679     ; 5.292      ;
; -8.128 ; regB[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.685     ; 5.325      ;
; -8.127 ; regW[0]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -2.853     ; 5.004      ;
; -8.126 ; regW[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.455     ; 5.362      ;
; -8.115 ; regW[2]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.707     ; 5.240      ;
; -8.099 ; regW[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.483     ; 5.307      ;
; -8.081 ; regB[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.644     ; 5.319      ;
; -8.067 ; regOp[0]  ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.680     ; 5.269      ;
; -8.064 ; regB[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.482     ; 5.269      ;
; -8.061 ; regW[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.678     ; 4.994      ;
; -8.058 ; regW[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.488     ; 5.257      ;
; -8.033 ; regW[0]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.472     ; 5.248      ;
; -8.021 ; regW[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.691     ; 4.928      ;
; -8.021 ; regOp[0]  ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.472     ; 5.240      ;
; -8.017 ; regB[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.441     ; 5.263      ;
; -7.958 ; regW[4]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.702     ; 5.088      ;
; -7.930 ; regW[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.472     ; 5.145      ;
; -7.915 ; regW[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.478     ; 5.128      ;
; -7.904 ; regW[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.158     ; 5.594      ;
; -7.893 ; regOp[0]  ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.696     ; 5.029      ;
; -7.875 ; regB[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.483     ; 5.079      ;
; -7.865 ; regW[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.452     ; 5.104      ;
; -7.821 ; regW[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.488     ; 5.020      ;
; -7.812 ; regW[5]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.707     ; 4.937      ;
; -7.787 ; regW[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.483     ; 4.991      ;
; -7.782 ; regB[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.703     ; 4.690      ;
; -7.766 ; regW[4]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.686     ; 4.962      ;
; -7.749 ; regW[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.691     ; 4.890      ;
; -7.748 ; regB[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.644     ; 4.702      ;
; -7.706 ; regW[3]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.676     ; 4.862      ;
; -7.669 ; regB[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.477     ; 4.879      ;
; -7.630 ; regB[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.686     ; 4.826      ;
; -7.607 ; regB[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.436     ; 4.862      ;
; -7.588 ; regB[4]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -2.686     ; 4.784      ;
; -7.574 ; regB[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.701     ; 4.705      ;
; -7.566 ; regB[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.483     ; 4.770      ;
; -7.552 ; regB[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.477     ; 4.762      ;
; -7.552 ; regOp[0]  ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -2.858     ; 4.424      ;
; -7.540 ; regOp[0]  ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.477     ; 4.750      ;
; -7.527 ; regB[2]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.660     ; 4.699      ;
; -7.522 ; regB[7]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.481     ; 4.728      ;
; -7.492 ; regOp[0]  ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -2.477     ; 4.711      ;
; -7.471 ; regB[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.478     ; 4.684      ;
; -7.443 ; regW[5]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.483     ; 4.651      ;
; -7.385 ; regB[4]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.702     ; 4.515      ;
; -7.334 ; regW[3]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -2.660     ; 4.272      ;
; -7.292 ; regW[0]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -2.472     ; 4.516      ;
; -7.232 ; regW[7]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -2.456     ; 4.463      ;
; -7.232 ; regB[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.477     ; 4.446      ;
; -7.171 ; regB[5]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.696     ; 4.307      ;
; -7.076 ; regB[3]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.702     ; 4.206      ;
; -7.029 ; regB[1]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -2.482     ; 4.243      ;
; -6.990 ; regB[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.478     ; 4.203      ;
; -6.976 ; regB[5]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.472     ; 4.195      ;
; -6.926 ; regW[7]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.675     ; 4.083      ;
; -6.892 ; regW[6]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -2.467     ; 4.116      ;
; -6.841 ; regW[2]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -2.869     ; 3.702      ;
; -6.779 ; regW[0]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.162      ; 6.789      ;
; -6.716 ; regW[1]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.174      ; 6.738      ;
; -6.713 ; regOp[3]  ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; 0.050      ; 6.611      ;
; -6.696 ; regW[1]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -2.460     ; 3.932      ;
; -6.691 ; regW[2]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.146      ; 6.685      ;
; -6.678 ; regW[3]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.177      ; 6.703      ;
; -6.635 ; regB[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -2.696     ; 3.771      ;
; -6.550 ; regOp[2]  ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; 0.050      ; 6.448      ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'regOp[1]'                                                                                            ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -7.850 ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.525     ; 3.681      ;
; -7.769 ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.513     ; 3.612      ;
; -7.742 ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.541     ; 3.557      ;
; -7.661 ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.525     ; 3.492      ;
; -7.558 ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.536     ; 3.378      ;
; -7.438 ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.541     ; 3.253      ;
; -7.295 ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.509     ; 3.142      ;
; -7.153 ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.510     ; 2.999      ;
; -6.676 ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -3.530     ; 2.502      ;
; -5.514 ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.189     ; 3.681      ;
; -5.433 ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.177     ; 3.612      ;
; -5.406 ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.205     ; 3.557      ;
; -5.325 ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.189     ; 3.492      ;
; -5.222 ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.200     ; 3.378      ;
; -5.102 ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.205     ; 3.253      ;
; -4.959 ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.173     ; 3.142      ;
; -4.817 ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.174     ; 2.999      ;
; -4.665 ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -1.301     ; 2.720      ;
; -4.340 ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.194     ; 2.502      ;
; -2.329 ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; 1.035      ; 2.720      ;
; -0.496 ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.500        ; 2.804      ; 2.656      ;
; 0.004  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 1.000        ; 2.804      ; 2.656      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'rst'                                                                                                                       ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -6.770 ; regW[0]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.171      ; 6.789      ;
; -6.707 ; regW[1]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.183      ; 6.738      ;
; -6.682 ; regW[2]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.155      ; 6.685      ;
; -6.669 ; regW[3]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.186      ; 6.703      ;
; -6.537 ; regB[1]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.161      ; 6.546      ;
; -6.490 ; regB[2]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.202      ; 6.540      ;
; -6.481 ; regOp[0]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.166      ; 6.495      ;
; -6.375 ; regW[4]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.160      ; 6.383      ;
; -6.257 ; regW[6]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.171      ; 6.276      ;
; -6.202 ; regB[4]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.160      ; 6.210      ;
; -6.152 ; regW[5]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.155      ; 6.155      ;
; -6.045 ; regB[3]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.160      ; 6.053      ;
; -5.996 ; regB[5]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.166      ; 6.010      ;
; -5.879 ; regB[6]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.166      ; 5.893      ;
; -5.849 ; regB[7]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.162      ; 5.859      ;
; -5.559 ; regW[7]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.187      ; 5.594      ;
; -4.434 ; regW[0]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.507      ; 6.789      ;
; -4.371 ; regW[1]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.519      ; 6.738      ;
; -4.368 ; regOp[3]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 2.395      ; 6.611      ;
; -4.346 ; regW[2]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.491      ; 6.685      ;
; -4.333 ; regW[3]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.522      ; 6.703      ;
; -4.205 ; regOp[2]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 2.395      ; 6.448      ;
; -4.201 ; regB[1]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.497      ; 6.546      ;
; -4.154 ; regB[2]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.538      ; 6.540      ;
; -4.145 ; regOp[0]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.502      ; 6.495      ;
; -4.056 ; regAddress[0]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.192     ; 3.829      ;
; -4.039 ; regW[4]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.496      ; 6.383      ;
; -4.020 ; regAddress[3]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.192     ; 3.793      ;
; -3.921 ; regW[6]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.507      ; 6.276      ;
; -3.883 ; regAddress[2]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.145     ; 3.734      ;
; -3.866 ; regB[4]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.496      ; 6.210      ;
; -3.844 ; regAddress[1]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.187     ; 3.856      ;
; -3.831 ; regAddress[2]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.147     ; 3.707      ;
; -3.826 ; regAddress[1]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.193     ; 3.598      ;
; -3.816 ; regW[5]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.491      ; 6.155      ;
; -3.756 ; regAddress[1]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.147     ; 3.605      ;
; -3.709 ; regB[3]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.496      ; 6.053      ;
; -3.705 ; regAddress[2]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.191     ; 3.479      ;
; -3.700 ; regAddress[1]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.149     ; 3.574      ;
; -3.689 ; regAddress[2]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.185     ; 3.703      ;
; -3.676 ; regAddress[2]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.144     ; 3.724      ;
; -3.667 ; regAddress[0]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.157     ; 3.698      ;
; -3.660 ; regB[5]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.502      ; 6.010      ;
; -3.650 ; regAddress[0]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.159     ; 3.444      ;
; -3.636 ; regAddress[0]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.158     ; 3.470      ;
; -3.630 ; regAddress[3]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.157     ; 3.661      ;
; -3.620 ; regAddress[2]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.144     ; 3.664      ;
; -3.606 ; regAddress[0]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.161     ; 3.400      ;
; -3.578 ; regAddress[1]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.146     ; 3.620      ;
; -3.575 ; regAddress[3]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.159     ; 3.369      ;
; -3.570 ; regAddress[3]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.161     ; 3.364      ;
; -3.560 ; regAddress[3]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.158     ; 3.394      ;
; -3.551 ; regAddress[1]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.146     ; 3.597      ;
; -3.543 ; regB[6]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.502      ; 5.893      ;
; -3.513 ; regB[7]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.498      ; 5.859      ;
; -3.451 ; regAddress[3]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.186     ; 3.464      ;
; -3.450 ; regAddress[1]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.160     ; 3.243      ;
; -3.439 ; regAddress[1]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.159     ; 3.272      ;
; -3.437 ; regAddress[1]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.158     ; 3.467      ;
; -3.435 ; regAddress[0]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.186     ; 3.448      ;
; -3.374 ; regAddress[1]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.162     ; 3.167      ;
; -3.335 ; regAddress[0]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.160     ; 3.168      ;
; -3.330 ; regAddress[2]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.158     ; 3.125      ;
; -3.315 ; regOp[0]           ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 0.020      ; 3.531      ;
; -3.312 ; regAddress[2]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.156     ; 3.344      ;
; -3.305 ; regAddress[2]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.157     ; 3.140      ;
; -3.293 ; regAddress[3]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.160     ; 3.126      ;
; -3.287 ; regAddress[0]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.146     ; 3.137      ;
; -3.254 ; regAddress[2]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.160     ; 3.049      ;
; -3.233 ; regAddress[0]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.148     ; 3.108      ;
; -3.223 ; regW[7]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.523      ; 5.594      ;
; -3.164 ; regAddress[0]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.145     ; 3.207      ;
; -3.137 ; regAddress[0]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.145     ; 3.184      ;
; -3.106 ; regW[0]            ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 0.025      ; 3.327      ;
; -3.104 ; regAddress[1]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.161     ; 2.936      ;
; -2.977 ; regAddress[3]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.146     ; 2.827      ;
; -2.974 ; regAddress[2]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.159     ; 2.808      ;
; -2.925 ; regAddress[3]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.148     ; 2.800      ;
; -2.906 ; regS[3]            ; regOp[3]                        ; rst                    ; rst         ; 1.000        ; -2.238     ; 0.479      ;
; -2.881 ; regS[2]            ; regOp[2]                        ; rst                    ; rst         ; 1.000        ; -2.237     ; 0.479      ;
; -2.799 ; regAddress[3]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.145     ; 2.842      ;
; -2.773 ; regAddress[3]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.145     ; 2.820      ;
; -2.508 ; regW[7]            ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 0.041      ; 2.745      ;
; -2.032 ; regOp[3]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 4.731      ; 6.611      ;
; -1.869 ; regOp[2]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 4.731      ; 6.448      ;
; -1.084 ; estado.progMemRead ; prox_estado.moveToRegisters_584 ; clk                    ; rst         ; 1.000        ; 0.428      ; 0.827      ;
; -0.979 ; regOp[0]           ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 1.000        ; 2.356      ; 3.531      ;
; -0.770 ; regW[0]            ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 1.000        ; 2.361      ; 3.327      ;
; -0.765 ; regOp[3]           ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 2.249      ; 3.210      ;
; -0.663 ; regOp[2]           ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 2.249      ; 3.108      ;
; -0.570 ; regS[3]            ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 1.000        ; 0.098      ; 0.479      ;
; -0.545 ; regS[2]            ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 1.000        ; 0.099      ; 0.479      ;
; -0.509 ; regS[0]            ; regOp[0]                        ; rst                    ; rst         ; 1.000        ; 0.178      ; 0.480      ;
; -0.473 ; regS[1]            ; regOp[1]                        ; rst                    ; rst         ; 1.000        ; 0.167      ; 0.486      ;
; -0.172 ; regW[7]            ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 1.000        ; 2.377      ; 2.745      ;
; 0.272  ; regOp[1]           ; Zout$latch                      ; regOp[1]               ; rst         ; 0.500        ; 6.500      ; 5.576      ;
; 0.377  ; PC[3]              ; regAddress[3]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 1.050      ; 0.473      ;
; 0.419  ; PC[2]              ; regAddress[2]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 1.050      ; 0.475      ;
; 0.494  ; IR[9]              ; regS[1]                         ; rst                    ; rst         ; 1.000        ; 1.730      ; 1.228      ;
; 0.512  ; PC[1]              ; regAddress[1]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 1.193      ; 0.475      ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'estado.moveToRegisters'                                                                                   ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -5.242 ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 1.000        ; -4.574     ; 0.479      ;
; -5.217 ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 1.000        ; -4.573     ; 0.479      ;
; -3.048 ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.050     ; 1.322      ;
; -2.906 ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -2.238     ; 0.479      ;
; -2.881 ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -2.237     ; 0.479      ;
; -2.862 ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.052     ; 1.134      ;
; -2.845 ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.158     ; 0.480      ;
; -2.817 ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.050     ; 1.355      ;
; -2.809 ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.169     ; 0.486      ;
; -2.766 ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.049     ; 1.305      ;
; -2.754 ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.193     ; 1.288      ;
; -2.706 ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.051     ; 0.979      ;
; -2.596 ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.192     ; 1.131      ;
; -2.588 ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.051     ; 1.125      ;
; -2.430 ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.050     ; 0.968      ;
; -2.334 ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.194     ; 1.115      ;
; -1.842 ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.606     ; 1.228      ;
; -1.287 ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.400     ; 1.088      ;
; -1.252 ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.615     ; 0.633      ;
; -1.146 ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.136      ; 1.078      ;
; -1.108 ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.440     ; 0.868      ;
; -1.090 ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.444     ; 0.480      ;
; -1.089 ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.428     ; 0.489      ;
; -1.086 ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.428     ; 0.489      ;
; -1.084 ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.440     ; 0.485      ;
; -1.078 ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.436     ; 0.484      ;
; -1.060 ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.435     ; 0.479      ;
; -1.057 ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.438     ; 0.473      ;
; -0.926 ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.350      ; 1.076      ;
; -0.718 ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.147      ; 0.478      ;
; -0.533 ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.120      ; 0.488      ;
; -0.509 ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.178      ; 0.480      ;
; -0.473 ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.167      ; 0.486      ;
; -0.355 ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.355      ; 0.493      ;
; -0.330 ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.342      ; 0.475      ;
; -0.293 ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.355      ; 0.491      ;
; -0.163 ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.505      ; 0.475      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.514 ; prox_estado.moveToRegisters_584 ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; -0.428     ; 0.096      ;
; 0.678 ; prox_estado.progMemRead_590     ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 0.216      ; 0.576      ;
; 1.167 ; prox_estado.resultToW_578       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; 0.225      ; 0.096      ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'rst'                                                                                                                            ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -3.976 ; regOp[1]               ; carryOut$latch                  ; regOp[1]               ; rst         ; 0.000        ; 6.354      ; 2.378      ;
; -3.476 ; regOp[1]               ; carryOut$latch                  ; regOp[1]               ; rst         ; -0.500       ; 6.354      ; 2.378      ;
; -2.656 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; 0.000        ; 6.500      ; 3.844      ;
; -2.366 ; W[1]                   ; regW[1]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.841      ; 0.475      ;
; -2.203 ; W[3]                   ; regW[3]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.678      ; 0.475      ;
; -2.200 ; W[2]                   ; regW[2]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.691      ; 0.491      ;
; -2.198 ; W[6]                   ; regW[6]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.691      ; 0.493      ;
; -2.156 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; -0.500       ; 6.500      ; 3.844      ;
; -2.034 ; regS[0]                ; regOp[0]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 2.514      ; 0.480      ;
; -2.017 ; regS[1]                ; regOp[1]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 2.503      ; 0.486      ;
; -2.005 ; W[5]                   ; regW[5]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.483      ; 0.478      ;
; -1.989 ; estado.moveToRegisters ; prox_estado.resultToW_578       ; estado.moveToRegisters ; rst         ; 0.000        ; 2.893      ; 1.181      ;
; -1.968 ; W[7]                   ; regW[7]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.456      ; 0.488      ;
; -1.962 ; estado.resultToW       ; prox_estado.progMemRead_590     ; estado.resultToW       ; rst         ; 0.000        ; 2.902      ; 1.217      ;
; -1.685 ; regOp[2]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 4.731      ; 3.046      ;
; -1.610 ; W[4]                   ; regW[4]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.686      ; 1.076      ;
; -1.588 ; regOp[3]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 4.731      ; 3.143      ;
; -1.573 ; regOp[3]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 4.585      ; 3.012      ;
; -1.570 ; regOp[2]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 4.585      ; 3.015      ;
; -1.489 ; estado.moveToRegisters ; prox_estado.resultToW_578       ; estado.moveToRegisters ; rst         ; -0.500       ; 2.893      ; 1.181      ;
; -1.462 ; estado.resultToW       ; prox_estado.progMemRead_590     ; estado.resultToW       ; rst         ; -0.500       ; 2.902      ; 1.217      ;
; -1.425 ; IR[2]                  ; regB[2]                         ; rst                    ; rst         ; 0.000        ; 1.898      ; 0.473      ;
; -1.422 ; IR[5]                  ; regB[5]                         ; rst                    ; rst         ; 0.000        ; 1.901      ; 0.479      ;
; -1.419 ; IR[1]                  ; regB[1]                         ; rst                    ; rst         ; 0.000        ; 1.908      ; 0.489      ;
; -1.419 ; IR[3]                  ; regB[3]                         ; rst                    ; rst         ; 0.000        ; 1.908      ; 0.489      ;
; -1.416 ; IR[6]                  ; regB[6]                         ; rst                    ; rst         ; 0.000        ; 1.900      ; 0.484      ;
; -1.412 ; IR[7]                  ; regB[7]                         ; rst                    ; rst         ; 0.000        ; 1.892      ; 0.480      ;
; -1.411 ; IR[4]                  ; regB[4]                         ; rst                    ; rst         ; 0.000        ; 1.896      ; 0.485      ;
; -1.394 ; W[0]                   ; regW[0]                         ; estado.resultToW       ; rst         ; 0.000        ; 2.472      ; 1.078      ;
; -1.088 ; IR[8]                  ; regS[0]                         ; rst                    ; rst         ; 0.000        ; 1.721      ; 0.633      ;
; -1.065 ; ALU_8:XALU|preR[8]     ; carryOut$latch                  ; regOp[1]               ; rst         ; -0.500       ; 3.550      ; 1.985      ;
; -1.028 ; IR[11]                 ; regS[3]                         ; rst                    ; rst         ; 0.000        ; 1.896      ; 0.868      ;
; -0.848 ; IR[10]                 ; regS[2]                         ; rst                    ; rst         ; 0.000        ; 1.936      ; 1.088      ;
; -0.718 ; PC[1]                  ; regAddress[1]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.193      ; 0.475      ;
; -0.717 ; PC[0]                  ; regAddress[0]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.194      ; 0.477      ;
; -0.577 ; PC[3]                  ; regAddress[3]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.050      ; 0.473      ;
; -0.575 ; PC[2]                  ; regAddress[2]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.050      ; 0.475      ;
; -0.502 ; IR[9]                  ; regS[1]                         ; rst                    ; rst         ; 0.000        ; 1.730      ; 1.228      ;
; 0.302  ; regS[0]                ; regOp[0]                        ; rst                    ; rst         ; 0.000        ; 0.178      ; 0.480      ;
; 0.319  ; regS[1]                ; regOp[1]                        ; rst                    ; rst         ; 0.000        ; 0.167      ; 0.486      ;
; 0.368  ; regW[7]                ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 2.377      ; 2.745      ;
; 0.380  ; regS[2]                ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.099      ; 0.479      ;
; 0.381  ; regS[3]                ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.098      ; 0.479      ;
; 0.399  ; estado.progMemRead     ; prox_estado.moveToRegisters_584 ; clk                    ; rst         ; 0.000        ; 0.428      ; 0.827      ;
; 0.651  ; regOp[2]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 2.395      ; 3.046      ;
; 0.748  ; regOp[3]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 2.395      ; 3.143      ;
; 0.763  ; regOp[3]               ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 2.249      ; 3.012      ;
; 0.766  ; regOp[2]               ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 2.249      ; 3.015      ;
; 0.966  ; regW[0]                ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 2.361      ; 3.327      ;
; 0.988  ; regB[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.498      ; 3.486      ;
; 1.175  ; regOp[0]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 2.356      ; 3.531      ;
; 1.383  ; regW[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.523      ; 3.906      ;
; 1.546  ; regW[0]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.507      ; 4.053      ;
; 1.635  ; regB[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.497      ; 4.132      ;
; 1.787  ; regW[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.496      ; 4.283      ;
; 1.839  ; regOp[0]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.502      ; 4.341      ;
; 1.843  ; regB[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.496      ; 4.339      ;
; 1.927  ; regB[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.502      ; 4.429      ;
; 2.086  ; regW[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.519      ; 4.605      ;
; 2.153  ; regW[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.507      ; 4.660      ;
; 2.291  ; regW[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.491      ; 4.782      ;
; 2.293  ; regW[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.491      ; 4.784      ;
; 2.383  ; regB[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.502      ; 4.885      ;
; 2.394  ; regW[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.522      ; 4.916      ;
; 2.651  ; regB[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.538      ; 5.189      ;
; 2.704  ; regW[7]                ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 0.041      ; 2.745      ;
; 2.716  ; regS[2]                ; regOp[2]                        ; rst                    ; rst         ; 0.000        ; -2.237     ; 0.479      ;
; 2.717  ; regS[3]                ; regOp[3]                        ; rst                    ; rst         ; 0.000        ; -2.238     ; 0.479      ;
; 2.718  ; regB[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.496      ; 5.214      ;
; 2.948  ; regAddress[3]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.148     ; 2.800      ;
; 2.965  ; regAddress[3]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.145     ; 2.820      ;
; 2.967  ; regAddress[2]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.159     ; 2.808      ;
; 2.973  ; regAddress[3]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.146     ; 2.827      ;
; 2.987  ; regAddress[3]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; -0.145     ; 2.842      ;
; 3.097  ; regAddress[1]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.161     ; 2.936      ;
; 3.209  ; regAddress[2]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.160     ; 3.049      ;
; 3.256  ; regAddress[0]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.148     ; 3.108      ;
; 3.283  ; regAddress[2]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.158     ; 3.125      ;
; 3.283  ; regAddress[0]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.146     ; 3.137      ;
; 3.286  ; regAddress[3]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.160     ; 3.126      ;
; 3.297  ; regAddress[2]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.157     ; 3.140      ;
; 3.302  ; regW[0]                ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 0.025      ; 3.327      ;
; 3.324  ; regB[7]                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.162      ; 3.486      ;
; 3.328  ; regAddress[0]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.160     ; 3.168      ;
; 3.329  ; regAddress[0]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.145     ; 3.184      ;
; 3.329  ; regAddress[1]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.162     ; 3.167      ;
; 3.352  ; regAddress[0]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; -0.145     ; 3.207      ;
; 3.403  ; regAddress[1]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.160     ; 3.243      ;
; 3.431  ; regAddress[1]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.159     ; 3.272      ;
; 3.500  ; regAddress[2]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.156     ; 3.344      ;
; 3.511  ; regOp[0]               ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 0.020      ; 3.531      ;
; 3.525  ; regAddress[3]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.161     ; 3.364      ;
; 3.528  ; regAddress[3]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.159     ; 3.369      ;
; 3.552  ; regAddress[3]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.158     ; 3.394      ;
; 3.561  ; regAddress[0]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.161     ; 3.400      ;
; 3.603  ; regAddress[0]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.159     ; 3.444      ;
; 3.625  ; regAddress[1]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.158     ; 3.467      ;
; 3.628  ; regAddress[0]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.158     ; 3.470      ;
; 3.634  ; regAddress[0]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.186     ; 3.448      ;
; 3.650  ; regAddress[3]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.186     ; 3.464      ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'estado.resultToW'                                                                                               ;
+--------+--------------------+----------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node        ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+----------------+------------------------+------------------+--------------+------------+------------+
; -1.631 ; regOp[1]           ; carryOut$latch ; regOp[1]               ; estado.resultToW ; 0.000        ; 4.009      ; 2.378      ;
; -1.131 ; regOp[1]           ; carryOut$latch ; regOp[1]               ; estado.resultToW ; -0.500       ; 4.009      ; 2.378      ;
; -0.958 ; regOp[1]           ; W[5]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.862      ; 2.904      ;
; -0.774 ; regOp[1]           ; W[7]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.857      ; 3.083      ;
; -0.669 ; regOp[1]           ; W[2]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.654      ; 2.985      ;
; -0.649 ; regOp[1]           ; W[4]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.654      ; 3.005      ;
; -0.600 ; regOp[1]           ; W[3]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.636      ; 3.036      ;
; -0.458 ; regOp[1]           ; W[5]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.862      ; 2.904      ;
; -0.337 ; regOp[1]           ; W[1]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.476      ; 3.139      ;
; -0.311 ; regOp[1]           ; Zout$latch     ; regOp[1]               ; estado.resultToW ; 0.000        ; 4.155      ; 3.844      ;
; -0.299 ; regOp[1]           ; W[0]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.857      ; 3.558      ;
; -0.277 ; regOp[1]           ; W[6]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.638      ; 3.361      ;
; -0.274 ; regOp[1]           ; W[7]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.857      ; 3.083      ;
; -0.176 ; regOp[2]           ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.093      ; 1.917      ;
; -0.169 ; regOp[1]           ; W[2]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.654      ; 2.985      ;
; -0.149 ; regOp[1]           ; W[4]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.654      ; 3.005      ;
; -0.100 ; regOp[1]           ; W[3]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.636      ; 3.036      ;
; 0.074  ; regOp[3]           ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.093      ; 2.167      ;
; 0.163  ; regOp[1]           ; W[1]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.476      ; 3.139      ;
; 0.189  ; regOp[1]           ; Zout$latch     ; regOp[1]               ; estado.resultToW ; -0.500       ; 4.155      ; 3.844      ;
; 0.201  ; regOp[1]           ; W[0]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.857      ; 3.558      ;
; 0.223  ; regOp[1]           ; W[6]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.638      ; 3.361      ;
; 0.349  ; regOp[2]           ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.867      ; 2.216      ;
; 0.396  ; regOp[2]           ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.869      ; 2.265      ;
; 0.439  ; regOp[2]           ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.707      ; 2.146      ;
; 0.444  ; regOp[2]           ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.885      ; 2.329      ;
; 0.446  ; regOp[3]           ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.867      ; 2.313      ;
; 0.504  ; regOp[3]           ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.885      ; 2.389      ;
; 0.660  ; regOp[2]           ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.386      ; 3.046      ;
; 0.757  ; regOp[3]           ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.386      ; 3.143      ;
; 0.772  ; regOp[3]           ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.240      ; 3.012      ;
; 0.775  ; regOp[2]           ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.240      ; 3.015      ;
; 0.866  ; regOp[3]           ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.869      ; 2.735      ;
; 0.875  ; regOp[2]           ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.885      ; 2.760      ;
; 0.936  ; regOp[3]           ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.707      ; 2.643      ;
; 1.273  ; regOp[3]           ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.885      ; 3.158      ;
; 1.280  ; ALU_8:XALU|preR[8] ; carryOut$latch ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.205      ; 1.985      ;
; 1.309  ; regOp[3]           ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.088      ; 3.397      ;
; 1.602  ; regOp[2]           ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.088      ; 3.690      ;
; 1.604  ; regOp[2]           ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.088      ; 3.692      ;
; 1.653  ; regOp[3]           ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 2.088      ; 3.741      ;
; 2.160  ; regOp[2]           ; W[5]           ; rst                    ; estado.resultToW ; 0.000        ; -0.243     ; 1.917      ;
; 2.410  ; regOp[3]           ; W[5]           ; rst                    ; estado.resultToW ; 0.000        ; -0.243     ; 2.167      ;
; 2.500  ; regB[7]            ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.145     ; 2.355      ;
; 2.685  ; regOp[2]           ; W[3]           ; rst                    ; estado.resultToW ; 0.000        ; -0.469     ; 2.216      ;
; 2.713  ; regW[7]            ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.032      ; 2.745      ;
; 2.732  ; regOp[2]           ; W[6]           ; rst                    ; estado.resultToW ; 0.000        ; -0.467     ; 2.265      ;
; 2.775  ; regOp[2]           ; W[1]           ; rst                    ; estado.resultToW ; 0.000        ; -0.629     ; 2.146      ;
; 2.780  ; regOp[2]           ; W[4]           ; rst                    ; estado.resultToW ; 0.000        ; -0.451     ; 2.329      ;
; 2.782  ; regOp[3]           ; W[3]           ; rst                    ; estado.resultToW ; 0.000        ; -0.469     ; 2.313      ;
; 2.840  ; regOp[3]           ; W[4]           ; rst                    ; estado.resultToW ; 0.000        ; -0.451     ; 2.389      ;
; 2.895  ; regW[7]            ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.120     ; 2.775      ;
; 2.996  ; regOp[2]           ; Zout$latch     ; rst                    ; estado.resultToW ; 0.000        ; 0.050      ; 3.046      ;
; 3.093  ; regOp[3]           ; Zout$latch     ; rst                    ; estado.resultToW ; 0.000        ; 0.050      ; 3.143      ;
; 3.108  ; regOp[3]           ; carryOut$latch ; rst                    ; estado.resultToW ; 0.000        ; -0.096     ; 3.012      ;
; 3.111  ; regOp[2]           ; carryOut$latch ; rst                    ; estado.resultToW ; 0.000        ; -0.096     ; 3.015      ;
; 3.202  ; regOp[3]           ; W[6]           ; rst                    ; estado.resultToW ; 0.000        ; -0.467     ; 2.735      ;
; 3.211  ; regOp[2]           ; W[2]           ; rst                    ; estado.resultToW ; 0.000        ; -0.451     ; 2.760      ;
; 3.272  ; regOp[3]           ; W[1]           ; rst                    ; estado.resultToW ; 0.000        ; -0.629     ; 2.643      ;
; 3.311  ; regW[0]            ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.016      ; 3.327      ;
; 3.333  ; regB[7]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.153      ; 3.486      ;
; 3.485  ; regW[0]            ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.136     ; 3.349      ;
; 3.520  ; regOp[0]           ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.011      ; 3.531      ;
; 3.537  ; regOp[0]           ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.136     ; 3.401      ;
; 3.571  ; regB[6]            ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.360     ; 3.211      ;
; 3.574  ; regB[1]            ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.146     ; 3.428      ;
; 3.609  ; regOp[3]           ; W[2]           ; rst                    ; estado.resultToW ; 0.000        ; -0.451     ; 3.158      ;
; 3.627  ; regOp[0]           ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.360     ; 3.267      ;
; 3.645  ; regOp[3]           ; W[0]           ; rst                    ; estado.resultToW ; 0.000        ; -0.248     ; 3.397      ;
; 3.728  ; regW[7]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.178      ; 3.906      ;
; 3.766  ; regB[5]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.136     ; 3.630      ;
; 3.794  ; regOp[0]           ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.141     ; 3.653      ;
; 3.797  ; regW[6]            ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.355     ; 3.442      ;
; 3.817  ; regW[1]            ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.505     ; 3.312      ;
; 3.821  ; regW[4]            ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.368     ; 3.453      ;
; 3.877  ; regB[3]            ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.368     ; 3.509      ;
; 3.878  ; regW[5]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.147     ; 3.731      ;
; 3.890  ; regW[4]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.142     ; 3.748      ;
; 3.891  ; regW[0]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.162      ; 4.053      ;
; 3.918  ; regW[5]            ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.355     ; 3.563      ;
; 3.928  ; regW[2]            ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.355     ; 3.573      ;
; 3.938  ; regOp[2]           ; W[0]           ; rst                    ; estado.resultToW ; 0.000        ; -0.248     ; 3.690      ;
; 3.940  ; regOp[2]           ; W[7]           ; rst                    ; estado.resultToW ; 0.000        ; -0.248     ; 3.692      ;
; 3.980  ; regB[1]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.152      ; 4.132      ;
; 3.989  ; regOp[3]           ; W[7]           ; rst                    ; estado.resultToW ; 0.000        ; -0.248     ; 3.741      ;
; 4.028  ; regB[3]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.142     ; 3.886      ;
; 4.037  ; regOp[0]           ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.141     ; 3.896      ;
; 4.053  ; regW[0]            ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.517     ; 3.536      ;
; 4.056  ; regW[1]            ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.124     ; 3.932      ;
; 4.060  ; regOp[0]           ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.344     ; 3.716      ;
; 4.073  ; regW[0]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.131     ; 3.942      ;
; 4.118  ; regW[6]            ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.136     ; 3.982      ;
; 4.130  ; regOp[0]           ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.344     ; 3.786      ;
; 4.132  ; regW[4]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.151      ; 4.283      ;
; 4.144  ; regW[4]            ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.350     ; 3.794      ;
; 4.184  ; regOp[0]           ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.157      ; 4.341      ;
; 4.188  ; regB[3]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.151      ; 4.339      ;
; 4.224  ; regW[4]            ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.366     ; 3.858      ;
; 4.230  ; regB[1]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.141     ; 4.089      ;
; 4.235  ; regW[2]            ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.533     ; 3.702      ;
+--------+--------------------+----------------+------------------------+------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                  ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.415 ; prox_estado.resultToW_578       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; 0.225      ; 0.096      ;
; 0.074  ; prox_estado.progMemRead_590     ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 0.216      ; 0.576      ;
; 0.238  ; prox_estado.moveToRegisters_584 ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; -0.428     ; 0.096      ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'regOp[1]'                                                                                             ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -0.148 ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.000        ; 2.804      ; 2.656      ;
; 0.352  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; -0.500       ; 2.804      ; 2.656      ;
; 2.185  ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; 1.035      ; 2.720      ;
; 4.196  ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.194     ; 2.502      ;
; 4.521  ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -1.301     ; 2.720      ;
; 4.577  ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.174     ; 2.903      ;
; 4.761  ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.173     ; 3.088      ;
; 4.864  ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.189     ; 3.175      ;
; 4.892  ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.205     ; 3.187      ;
; 5.038  ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.200     ; 3.338      ;
; 5.195  ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.205     ; 3.490      ;
; 5.219  ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.177     ; 3.542      ;
; 5.283  ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.189     ; 3.594      ;
; 6.532  ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.530     ; 2.502      ;
; 6.913  ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.510     ; 2.903      ;
; 7.097  ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.509     ; 3.088      ;
; 7.200  ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.525     ; 3.175      ;
; 7.228  ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.541     ; 3.187      ;
; 7.374  ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.536     ; 3.338      ;
; 7.531  ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.541     ; 3.490      ;
; 7.555  ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.513     ; 3.542      ;
; 7.619  ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -3.525     ; 3.594      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'estado.moveToRegisters'                                                                                    ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -0.030 ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.505      ; 0.475      ;
; 0.133  ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.342      ; 0.475      ;
; 0.136  ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.355      ; 0.491      ;
; 0.138  ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.355      ; 0.493      ;
; 0.302  ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.178      ; 0.480      ;
; 0.319  ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.167      ; 0.486      ;
; 0.331  ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.147      ; 0.478      ;
; 0.368  ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.120      ; 0.488      ;
; 0.726  ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.350      ; 1.076      ;
; 0.911  ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.438     ; 0.473      ;
; 0.914  ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.435     ; 0.479      ;
; 0.917  ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.428     ; 0.489      ;
; 0.917  ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.428     ; 0.489      ;
; 0.920  ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.436     ; 0.484      ;
; 0.924  ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.444     ; 0.480      ;
; 0.925  ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.440     ; 0.485      ;
; 0.942  ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.136      ; 1.078      ;
; 1.248  ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.615     ; 0.633      ;
; 1.308  ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.440     ; 0.868      ;
; 1.488  ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.400     ; 1.088      ;
; 1.834  ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.606     ; 1.228      ;
; 2.018  ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.050     ; 0.968      ;
; 2.030  ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.051     ; 0.979      ;
; 2.176  ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.051     ; 1.125      ;
; 2.186  ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.052     ; 1.134      ;
; 2.309  ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.194     ; 1.115      ;
; 2.323  ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.192     ; 1.131      ;
; 2.354  ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.049     ; 1.305      ;
; 2.372  ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.050     ; 1.322      ;
; 2.405  ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.050     ; 1.355      ;
; 2.481  ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.193     ; 1.288      ;
; 2.638  ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.158     ; 0.480      ;
; 2.655  ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.169     ; 0.486      ;
; 2.716  ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -2.237     ; 0.479      ;
; 2.717  ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -2.238     ; 0.479      ;
; 5.052  ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 0.000        ; -4.573     ; 0.479      ;
; 5.053  ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 0.000        ; -4.574     ; 0.479      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'estado.resultToW'                                                                 ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; -0.032 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.500        ; 3.476      ; 2.738      ;
; 0.006  ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.500        ; 3.654      ; 2.746      ;
; 0.027  ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.500        ; 3.636      ; 2.720      ;
; 0.235  ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.500        ; 3.638      ; 2.735      ;
; 0.291  ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.500        ; 3.654      ; 2.745      ;
; 0.305  ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.500        ; 3.862      ; 2.748      ;
; 0.313  ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.500        ; 3.857      ; 2.731      ;
; 0.320  ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.500        ; 3.857      ; 2.733      ;
; 0.468  ; rst       ; W[1]    ; rst          ; estado.resultToW ; 1.000        ; 3.476      ; 2.738      ;
; 0.506  ; rst       ; W[2]    ; rst          ; estado.resultToW ; 1.000        ; 3.654      ; 2.746      ;
; 0.527  ; rst       ; W[3]    ; rst          ; estado.resultToW ; 1.000        ; 3.636      ; 2.720      ;
; 0.735  ; rst       ; W[6]    ; rst          ; estado.resultToW ; 1.000        ; 3.638      ; 2.735      ;
; 0.791  ; rst       ; W[4]    ; rst          ; estado.resultToW ; 1.000        ; 3.654      ; 2.745      ;
; 0.805  ; rst       ; W[5]    ; rst          ; estado.resultToW ; 1.000        ; 3.862      ; 2.748      ;
; 0.813  ; rst       ; W[7]    ; rst          ; estado.resultToW ; 1.000        ; 3.857      ; 2.731      ;
; 0.820  ; rst       ; W[0]    ; rst          ; estado.resultToW ; 1.000        ; 3.857      ; 2.733      ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'estado.moveToRegisters'                                                                ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; 0.118 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.500        ; 3.541      ; 2.247      ;
; 0.380 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.500        ; 3.400      ; 2.247      ;
; 0.385 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.500        ; 3.542      ; 2.245      ;
; 0.618 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 1.000        ; 3.541      ; 2.247      ;
; 0.626 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.500        ; 3.398      ; 2.247      ;
; 0.880 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 1.000        ; 3.400      ; 2.247      ;
; 0.885 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 1.000        ; 3.542      ; 2.245      ;
; 1.126 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 1.000        ; 3.398      ; 2.247      ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'clk'                                                                                       ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.261 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.500        ; 3.118      ; 3.395      ;
; 0.261 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.500        ; 3.118      ; 3.395      ;
; 0.261 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.500        ; 3.118      ; 3.395      ;
; 0.761 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; 3.118      ; 3.395      ;
; 0.761 ; rst       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; 3.118      ; 3.395      ;
; 0.761 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 3.118      ; 3.395      ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'estado.moveToRegisters'                                                                  ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; -1.297 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.000        ; 3.542      ; 2.245      ;
; -1.294 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.000        ; 3.541      ; 2.247      ;
; -1.153 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.000        ; 3.400      ; 2.247      ;
; -1.151 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.000        ; 3.398      ; 2.247      ;
; -0.797 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; -0.500       ; 3.542      ; 2.245      ;
; -0.794 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; -0.500       ; 3.541      ; 2.247      ;
; -0.653 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; -0.500       ; 3.400      ; 2.247      ;
; -0.651 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; -0.500       ; 3.398      ; 2.247      ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'estado.resultToW'                                                                  ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; -1.126 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.000        ; 3.857      ; 2.731      ;
; -1.124 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.000        ; 3.857      ; 2.733      ;
; -1.114 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.000        ; 3.862      ; 2.748      ;
; -0.916 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.000        ; 3.636      ; 2.720      ;
; -0.909 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.000        ; 3.654      ; 2.745      ;
; -0.908 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.000        ; 3.654      ; 2.746      ;
; -0.903 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.000        ; 3.638      ; 2.735      ;
; -0.738 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.000        ; 3.476      ; 2.738      ;
; -0.626 ; rst       ; W[7]    ; rst          ; estado.resultToW ; -0.500       ; 3.857      ; 2.731      ;
; -0.624 ; rst       ; W[0]    ; rst          ; estado.resultToW ; -0.500       ; 3.857      ; 2.733      ;
; -0.614 ; rst       ; W[5]    ; rst          ; estado.resultToW ; -0.500       ; 3.862      ; 2.748      ;
; -0.416 ; rst       ; W[3]    ; rst          ; estado.resultToW ; -0.500       ; 3.636      ; 2.720      ;
; -0.409 ; rst       ; W[4]    ; rst          ; estado.resultToW ; -0.500       ; 3.654      ; 2.745      ;
; -0.408 ; rst       ; W[2]    ; rst          ; estado.resultToW ; -0.500       ; 3.654      ; 2.746      ;
; -0.403 ; rst       ; W[6]    ; rst          ; estado.resultToW ; -0.500       ; 3.638      ; 2.735      ;
; -0.238 ; rst       ; W[1]    ; rst          ; estado.resultToW ; -0.500       ; 3.476      ; 2.738      ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'clk'                                                                                         ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.009 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; 3.118      ; 3.395      ;
; -0.009 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; 3.118      ; 3.395      ;
; -0.009 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 3.118      ; 3.395      ;
; 0.491  ; rst       ; estado.moveToRegisters ; rst          ; clk         ; -0.500       ; 3.118      ; 3.395      ;
; 0.491  ; rst       ; estado.resultToW       ; rst          ; clk         ; -0.500       ; 3.118      ; 3.395      ;
; 0.491  ; rst       ; estado.progMemRead     ; rst          ; clk         ; -0.500       ; 3.118      ; 3.395      ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                     ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; clk   ; Rise       ; clk                        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Fall       ; estado.progMemRead         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Fall       ; estado.progMemRead         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Fall       ; estado.resultToW           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Fall       ; estado.resultToW           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.resultToW|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.resultToW|clk       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'rst'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; rst   ; Rise       ; rst                                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0clkctrl|inclk[0]               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0clkctrl|inclk[0]               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0clkctrl|outclk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0clkctrl|outclk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0|datad                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0|datad                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; carryOut$latch                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; carryOut$latch                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut$latch|datad                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut$latch|datad                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0clkctrl|inclk[0]            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0clkctrl|inclk[0]            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0clkctrl|outclk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0clkctrl|outclk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0|combout                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0|combout                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.moveToRegisters_584       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.moveToRegisters_584       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.moveToRegisters_584|datac ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.moveToRegisters_584|datac ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.progMemRead_590           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.progMemRead_590           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.progMemRead_590|datac     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.progMemRead_590|datac     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.resultToW_578             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.resultToW_578             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.resultToW_578|datac       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.resultToW_578|datac       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[0]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[0]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[1]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[1]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[2]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[2]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[3]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[3]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regB[1]                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regB[1]                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regB[1]|datac                         ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'estado.moveToRegisters'                                                                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                  ; Clock Edge ; Target                                  ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[0]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[0]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[1]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[1]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[2]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[2]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[3]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[3]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[0]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[0]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'estado.resultToW'                                                                           ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock            ; Clock Edge ; Target                            ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[1]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[1]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[2]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[2]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[4]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[4]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[6]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[6]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[7]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[7]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; carryOut$latch                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; carryOut$latch                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut$latch|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut$latch|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0clkctrl|inclk[0]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0clkctrl|inclk[0]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0clkctrl|outclk          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0clkctrl|outclk          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'regOp[1]'                                                             ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~1|combout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~1|combout ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~1|datac   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~1|datac   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; regOp[1]|combout    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; regOp[1]|combout    ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+


+---------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                             ;
+------------------+------------------------+--------+--------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise   ; Fall   ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+--------+--------+------------+------------------------+
; currentState[*]  ; clk                    ; 8.644  ; 8.644  ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 8.644  ; 8.644  ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;        ; 4.875  ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;        ; 4.875  ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 4.875  ;        ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 4.875  ;        ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 9.110  ; 9.110  ; Fall       ; estado.resultToW       ;
; carryOut         ; estado.resultToW       ; 8.515  ; 8.515  ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 11.455 ; 11.455 ; Fall       ; rst                    ;
; carryOut         ; rst                    ; 10.860 ; 10.860 ; Fall       ; rst                    ;
+------------------+------------------------+--------+--------+------------+------------------------+


+---------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                     ;
+------------------+------------------------+--------+--------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise   ; Fall   ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+--------+--------+------------+------------------------+
; currentState[*]  ; clk                    ; 8.644  ; 8.644  ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 8.644  ; 8.644  ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;        ; 4.875  ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;        ; 4.875  ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 4.875  ;        ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 4.875  ;        ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 9.110  ; 9.110  ; Fall       ; estado.resultToW       ;
; carryOut         ; estado.resultToW       ; 8.515  ; 8.515  ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 11.455 ; 11.455 ; Fall       ; rst                    ;
; carryOut         ; rst                    ; 10.860 ; 10.860 ; Fall       ; rst                    ;
+------------------+------------------------+--------+--------+------------+------------------------+


+-------------------------------------------------+
; Fast Model Setup Summary                        ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; regOp[1]               ; -3.317 ; -3.317        ;
; estado.resultToW       ; -2.896 ; -25.044       ;
; estado.moveToRegisters ; -2.088 ; -7.546        ;
; rst                    ; -1.764 ; -12.285       ;
; clk                    ; 0.973  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Fast Model Hold Summary                         ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; rst                    ; -2.360 ; -23.513       ;
; estado.resultToW       ; -1.228 ; -8.648        ;
; clk                    ; -0.309 ; -0.515        ;
; regOp[1]               ; -0.148 ; -0.148        ;
; estado.moveToRegisters ; 0.025  ; 0.000         ;
+------------------------+--------+---------------+


+------------------------------------------------+
; Fast Model Recovery Summary                    ;
+------------------------+-------+---------------+
; Clock                  ; Slack ; End Point TNS ;
+------------------------+-------+---------------+
; clk                    ; 0.394 ; 0.000         ;
; estado.resultToW       ; 0.697 ; 0.000         ;
; estado.moveToRegisters ; 0.783 ; 0.000         ;
+------------------------+-------+---------------+


+-------------------------------------------------+
; Fast Model Removal Summary                      ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.moveToRegisters ; -0.862 ; -3.347        ;
; estado.resultToW       ; -0.785 ; -5.766        ;
; clk                    ; -0.014 ; -0.042        ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Fast Model Minimum Pulse Width Summary          ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; clk                    ; -1.222 ; -4.222        ;
; rst                    ; -1.222 ; -1.222        ;
; estado.moveToRegisters ; 0.500  ; 0.000         ;
; estado.resultToW       ; 0.500  ; 0.000         ;
; regOp[1]               ; 0.500  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'regOp[1]'                                                                                            ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -3.317 ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.067     ; 1.361      ;
; -3.292 ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.056     ; 1.347      ;
; -3.264 ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.077     ; 1.298      ;
; -3.231 ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.066     ; 1.276      ;
; -3.195 ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.074     ; 1.232      ;
; -3.140 ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.078     ; 1.173      ;
; -3.063 ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.056     ; 1.118      ;
; -3.031 ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.058     ; 1.084      ;
; -2.857 ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.071     ; 0.897      ;
; -2.194 ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.944     ; 1.361      ;
; -2.169 ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.933     ; 1.347      ;
; -2.141 ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.954     ; 1.298      ;
; -2.108 ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.943     ; 1.276      ;
; -2.072 ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.951     ; 1.232      ;
; -2.017 ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.955     ; 1.173      ;
; -1.940 ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.933     ; 1.118      ;
; -1.908 ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.935     ; 1.084      ;
; -1.734 ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.948     ; 0.897      ;
; -1.587 ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -0.684     ; 1.014      ;
; -0.464 ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; 0.439      ; 1.014      ;
; 0.259  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.500        ; 1.099      ; 0.951      ;
; 0.759  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 1.000        ; 1.099      ; 0.951      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'estado.resultToW'                                                                                 ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node    ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; -2.896 ; regW[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.009     ; 2.489      ;
; -2.822 ; regW[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.011     ; 2.413      ;
; -2.818 ; regW[0]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.020     ; 2.400      ;
; -2.785 ; regW[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.030     ; 2.357      ;
; -2.746 ; regB[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.025     ; 2.323      ;
; -2.742 ; regOp[0]  ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.024     ; 2.320      ;
; -2.738 ; regB[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -0.998     ; 2.342      ;
; -2.694 ; regW[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.019     ; 2.277      ;
; -2.683 ; regW[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.117     ; 2.095      ;
; -2.678 ; regW[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.031     ; 2.249      ;
; -2.678 ; regB[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.027     ; 2.253      ;
; -2.677 ; regW[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.027     ; 2.252      ;
; -2.656 ; regW[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.203     ; 1.966      ;
; -2.648 ; regW[0]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.214     ; 1.947      ;
; -2.619 ; regW[0]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.203     ; 1.920      ;
; -2.616 ; regB[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.027     ; 2.191      ;
; -2.612 ; regW[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.192     ; 1.924      ;
; -2.609 ; regW[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.119     ; 2.019      ;
; -2.607 ; regW[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.224     ; 1.896      ;
; -2.603 ; regB[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.023     ; 2.182      ;
; -2.594 ; regOp[0]  ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.207     ; 1.891      ;
; -2.593 ; regB[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.221     ; 1.885      ;
; -2.577 ; regW[0]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.204     ; 1.978      ;
; -2.572 ; regW[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.138     ; 1.963      ;
; -2.559 ; regW[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.193     ; 1.971      ;
; -2.554 ; regOp[0]  ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.218     ; 1.849      ;
; -2.546 ; regW[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.262     ; 1.849      ;
; -2.544 ; regW[0]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.214     ; 1.919      ;
; -2.541 ; regB[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.024     ; 2.119      ;
; -2.538 ; regB[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.278     ; 1.825      ;
; -2.536 ; regB[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.025     ; 2.113      ;
; -2.536 ; regW[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.195     ; 1.946      ;
; -2.536 ; regW[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.214     ; 1.927      ;
; -2.533 ; regW[0]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.123     ; 1.941      ;
; -2.533 ; regW[0]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.128     ; 1.934      ;
; -2.526 ; regW[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.203     ; 1.912      ;
; -2.525 ; regB[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.106     ; 1.948      ;
; -2.524 ; regB[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.133     ; 1.920      ;
; -2.508 ; regW[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.112     ; 1.927      ;
; -2.505 ; regB[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.209     ; 1.901      ;
; -2.503 ; regW[2]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.224     ; 1.868      ;
; -2.502 ; regB[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.208     ; 1.798      ;
; -2.501 ; regOp[0]  ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.208     ; 1.898      ;
; -2.498 ; regB[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.192     ; 1.819      ;
; -2.487 ; regB[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.182     ; 1.910      ;
; -2.481 ; regW[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.127     ; 1.883      ;
; -2.480 ; regW[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.133     ; 1.878      ;
; -2.477 ; regW[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.205     ; 1.785      ;
; -2.475 ; regOp[0]  ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.127     ; 1.879      ;
; -2.473 ; regW[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.213     ; 1.764      ;
; -2.471 ; regW[0]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.273     ; 1.763      ;
; -2.465 ; regW[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.139     ; 1.855      ;
; -2.465 ; regB[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.135     ; 1.859      ;
; -2.454 ; regW[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.009     ; 2.047      ;
; -2.439 ; regW[4]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.221     ; 1.807      ;
; -2.428 ; regOp[0]  ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.218     ; 1.799      ;
; -2.428 ; regW[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.135     ; 1.822      ;
; -2.411 ; regW[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.130     ; 1.812      ;
; -2.409 ; regW[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.114     ; 1.826      ;
; -2.390 ; regB[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.131     ; 1.788      ;
; -2.389 ; regW[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.213     ; 1.765      ;
; -2.379 ; regB[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.181     ; 1.702      ;
; -2.375 ; regW[5]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.225     ; 1.739      ;
; -2.371 ; regB[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.219     ; 1.665      ;
; -2.367 ; regW[4]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.211     ; 1.761      ;
; -2.349 ; regW[3]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.205     ; 1.733      ;
; -2.348 ; regOp[0]  ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.132     ; 1.745      ;
; -2.347 ; regOp[0]  ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.133     ; 1.750      ;
; -2.330 ; regB[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.135     ; 1.724      ;
; -2.328 ; regB[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.132     ; 1.725      ;
; -2.325 ; regB[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.101     ; 1.755      ;
; -2.323 ; regB[7]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.133     ; 1.719      ;
; -2.320 ; regB[4]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.211     ; 1.714      ;
; -2.311 ; regB[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.211     ; 1.705      ;
; -2.300 ; regB[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.219     ; 1.670      ;
; -2.291 ; regOp[0]  ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.277     ; 1.579      ;
; -2.282 ; regB[2]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.192     ; 1.679      ;
; -2.265 ; regB[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.130     ; 1.666      ;
; -2.253 ; regW[5]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.134     ; 1.650      ;
; -2.241 ; regW[7]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.117     ; 1.653      ;
; -2.223 ; regW[3]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.194     ; 1.533      ;
; -2.220 ; regB[4]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.221     ; 1.588      ;
; -2.213 ; regW[0]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.129     ; 1.620      ;
; -2.198 ; regB[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.128     ; 1.601      ;
; -2.130 ; regB[5]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.217     ; 1.502      ;
; -2.108 ; regB[1]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.134     ; 1.510      ;
; -2.106 ; regB[3]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.221     ; 1.474      ;
; -2.094 ; regB[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.130     ; 1.495      ;
; -2.091 ; regB[5]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.126     ; 1.496      ;
; -2.087 ; regW[7]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.203     ; 1.473      ;
; -2.077 ; regW[6]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.122     ; 1.486      ;
; -2.049 ; regW[1]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.118     ; 1.467      ;
; -2.025 ; regW[2]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.283     ; 1.307      ;
; -1.976 ; regW[4]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.221     ; 1.268      ;
; -1.963 ; regB[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.218     ; 1.334      ;
; -1.877 ; regW[5]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.215     ; 1.267      ;
; -1.773 ; regW[1]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.114      ; 2.489      ;
; -1.699 ; regW[3]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.112      ; 2.413      ;
; -1.695 ; regW[0]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.103      ; 2.400      ;
; -1.662 ; regW[2]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; 0.093      ; 2.357      ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'estado.moveToRegisters'                                                                                   ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -2.088 ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.514     ; 0.169      ;
; -2.082 ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.513     ; 0.169      ;
; -0.965 ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -1.391     ; 0.169      ;
; -0.959 ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -1.390     ; 0.169      ;
; -0.636 ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.053     ; 0.170      ;
; -0.626 ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.058     ; 0.174      ;
; -0.587 ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.545     ; 0.465      ;
; -0.525 ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.547     ; 0.401      ;
; -0.499 ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.547     ; 0.470      ;
; -0.486 ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.594     ; 0.457      ;
; -0.483 ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.545     ; 0.456      ;
; -0.473 ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.547     ; 0.349      ;
; -0.431 ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.594     ; 0.402      ;
; -0.427 ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.547     ; 0.398      ;
; -0.372 ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.547     ; 0.343      ;
; -0.339 ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.595     ; 0.391      ;
; -0.203 ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.400     ; 0.456      ;
; 0.023  ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.404     ; 0.227      ;
; 0.028  ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.314     ; 0.384      ;
; 0.089  ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.338     ; 0.171      ;
; 0.090  ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.336     ; 0.299      ;
; 0.094  ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.328     ; 0.176      ;
; 0.095  ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.329     ; 0.172      ;
; 0.098  ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.335     ; 0.170      ;
; 0.099  ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.333     ; 0.172      ;
; 0.106  ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.333     ; 0.169      ;
; 0.108  ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.337     ; 0.165      ;
; 0.195  ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.006      ; 0.397      ;
; 0.282  ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.088      ; 0.396      ;
; 0.364  ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.011      ; 0.168      ;
; 0.418  ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; -0.006     ; 0.176      ;
; 0.487  ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.070      ; 0.170      ;
; 0.493  ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.090      ; 0.178      ;
; 0.497  ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.065      ; 0.174      ;
; 0.511  ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.082      ; 0.164      ;
; 0.520  ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.090      ; 0.175      ;
; 0.571  ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.139      ; 0.164      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'rst'                                                                                                                           ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -1.764 ; regW[1]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.123      ; 2.489      ;
; -1.690 ; regW[3]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.121      ; 2.413      ;
; -1.686 ; regW[0]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.112      ; 2.400      ;
; -1.653 ; regW[2]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.102      ; 2.357      ;
; -1.614 ; regB[1]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.107      ; 2.323      ;
; -1.610 ; regOp[0]               ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.108      ; 2.320      ;
; -1.606 ; regB[2]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.134      ; 2.342      ;
; -1.562 ; regW[6]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.113      ; 2.277      ;
; -1.546 ; regW[5]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.101      ; 2.249      ;
; -1.546 ; regB[4]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.105      ; 2.253      ;
; -1.545 ; regW[4]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.105      ; 2.252      ;
; -1.484 ; regB[3]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.105      ; 2.191      ;
; -1.471 ; regB[5]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.109      ; 2.182      ;
; -1.409 ; regB[6]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.108      ; 2.119      ;
; -1.404 ; regB[7]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.107      ; 2.113      ;
; -1.322 ; regW[7]                ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.123      ; 2.047      ;
; -0.965 ; regS[3]                ; regOp[3]                        ; rst                    ; rst         ; 1.000        ; -1.391     ; 0.169      ;
; -0.959 ; regS[2]                ; regOp[2]                        ; rst                    ; rst         ; 1.000        ; -1.390     ; 0.169      ;
; -0.869 ; regAddress[0]          ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.080     ; 1.431      ;
; -0.856 ; regAddress[3]          ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.080     ; 1.418      ;
; -0.824 ; regAddress[2]          ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.050     ; 1.428      ;
; -0.808 ; regAddress[2]          ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.051     ; 1.411      ;
; -0.797 ; regAddress[1]          ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.080     ; 1.359      ;
; -0.772 ; regAddress[1]          ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.074     ; 1.427      ;
; -0.757 ; regAddress[2]          ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.048     ; 1.432      ;
; -0.757 ; regAddress[2]          ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.078     ; 1.321      ;
; -0.743 ; regAddress[2]          ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.049     ; 1.416      ;
; -0.743 ; regAddress[1]          ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.052     ; 1.345      ;
; -0.729 ; regAddress[1]          ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.053     ; 1.330      ;
; -0.716 ; regAddress[2]          ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.072     ; 1.373      ;
; -0.699 ; regAddress[1]          ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.050     ; 1.372      ;
; -0.693 ; regAddress[0]          ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.058     ; 1.288      ;
; -0.692 ; regAddress[0]          ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.059     ; 1.276      ;
; -0.689 ; regAddress[0]          ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.057     ; 1.352      ;
; -0.682 ; regAddress[3]          ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.058     ; 1.277      ;
; -0.680 ; regAddress[3]          ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.059     ; 1.264      ;
; -0.677 ; regAddress[3]          ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.057     ; 1.340      ;
; -0.666 ; regAddress[1]          ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.051     ; 1.337      ;
; -0.662 ; regAddress[0]          ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.061     ; 1.240      ;
; -0.649 ; regAddress[3]          ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.061     ; 1.227      ;
; -0.641 ; regW[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.246      ; 2.489      ;
; -0.624 ; regAddress[1]          ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.058     ; 1.219      ;
; -0.619 ; regAddress[1]          ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.059     ; 1.203      ;
; -0.617 ; regAddress[1]          ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.057     ; 1.280      ;
; -0.616 ; regAddress[3]          ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.074     ; 1.271      ;
; -0.615 ; regAddress[0]          ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.074     ; 1.270      ;
; -0.590 ; regAddress[1]          ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.061     ; 1.168      ;
; -0.589 ; regAddress[0]          ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.052     ; 1.191      ;
; -0.581 ; regAddress[2]          ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.057     ; 1.167      ;
; -0.577 ; regAddress[0]          ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.060     ; 1.171      ;
; -0.575 ; regAddress[2]          ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.055     ; 1.240      ;
; -0.574 ; regAddress[0]          ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.053     ; 1.175      ;
; -0.574 ; regAddress[2]          ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.056     ; 1.171      ;
; -0.567 ; regAddress[3]          ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.060     ; 1.161      ;
; -0.567 ; regW[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.244      ; 2.413      ;
; -0.563 ; regW[0]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.235      ; 2.400      ;
; -0.548 ; regAddress[2]          ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.059     ; 1.128      ;
; -0.530 ; regW[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.225      ; 2.357      ;
; -0.520 ; regAddress[0]          ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.050     ; 1.193      ;
; -0.511 ; regOp[0]               ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 0.057      ; 1.295      ;
; -0.510 ; regAddress[0]          ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.051     ; 1.181      ;
; -0.507 ; regAddress[1]          ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.060     ; 1.101      ;
; -0.491 ; regB[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.230      ; 2.323      ;
; -0.487 ; regOp[0]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.231      ; 2.320      ;
; -0.483 ; regB[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.257      ; 2.342      ;
; -0.460 ; regAddress[2]          ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.058     ; 1.056      ;
; -0.456 ; regAddress[3]          ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.052     ; 1.058      ;
; -0.445 ; regAddress[3]          ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.053     ; 1.046      ;
; -0.439 ; regW[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.236      ; 2.277      ;
; -0.423 ; regW[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.224      ; 2.249      ;
; -0.423 ; regB[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.228      ; 2.253      ;
; -0.422 ; regW[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.228      ; 2.252      ;
; -0.391 ; regW[0]                ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 0.061      ; 1.179      ;
; -0.387 ; regAddress[3]          ; IR[9]                           ; rst                    ; rst         ; 1.000        ; -0.050     ; 1.060      ;
; -0.382 ; regAddress[3]          ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.051     ; 1.053      ;
; -0.361 ; regB[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.228      ; 2.191      ;
; -0.348 ; regB[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.232      ; 2.182      ;
; -0.286 ; regB[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.231      ; 2.119      ;
; -0.283 ; regOp[3]               ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 1.495      ; 2.380      ;
; -0.281 ; regB[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.230      ; 2.113      ;
; -0.248 ; regOp[2]               ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 1.495      ; 2.345      ;
; -0.199 ; regW[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.246      ; 2.047      ;
; -0.184 ; regW[7]                ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 0.072      ; 0.983      ;
; 0.070  ; estado.progMemRead     ; prox_estado.moveToRegisters_584 ; clk                    ; rst         ; 1.000        ; 0.017      ; 0.357      ;
; 0.158  ; regS[3]                ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 1.000        ; -0.268     ; 0.169      ;
; 0.164  ; regS[2]                ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 1.000        ; -0.267     ; 0.169      ;
; 0.487  ; regS[0]                ; regOp[0]                        ; rst                    ; rst         ; 1.000        ; 0.070      ; 0.170      ;
; 0.497  ; regS[1]                ; regOp[1]                        ; rst                    ; rst         ; 1.000        ; 0.065      ; 0.174      ;
; 0.612  ; regOp[0]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 1.000        ; 1.180      ; 1.295      ;
; 0.732  ; regW[0]                ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 1.000        ; 1.184      ; 1.179      ;
; 0.840  ; regOp[3]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.618      ; 2.380      ;
; 0.875  ; regOp[2]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.618      ; 2.345      ;
; 0.920  ; IR[9]                  ; regS[1]                         ; rst                    ; rst         ; 1.000        ; 0.723      ; 0.456      ;
; 0.939  ; regW[7]                ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 1.000        ; 1.195      ; 0.983      ;
; 0.971  ; PC[3]                  ; regAddress[3]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 0.547      ; 0.165      ;
; 0.983  ; PC[2]                  ; regAddress[2]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 0.545      ; 0.165      ;
; 0.992  ; regOp[3]               ; carryOut$latch                  ; rst                    ; rst         ; 1.000        ; 1.444      ; 1.179      ;
; 1.013  ; PC[1]                  ; regAddress[1]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 0.594      ; 0.165      ;
; 1.022  ; estado.moveToRegisters ; prox_estado.resultToW_578       ; estado.moveToRegisters ; rst         ; 0.500        ; 1.322      ; 0.479      ;
; 1.028  ; PC[0]                  ; regAddress[0]                   ; estado.moveToRegisters ; rst         ; 1.000        ; 0.595      ; 0.166      ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.973 ; prox_estado.moveToRegisters_584 ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; -0.017     ; 0.042      ;
; 0.993 ; prox_estado.progMemRead_590     ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 0.194      ; 0.233      ;
; 1.189 ; prox_estado.resultToW_578       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; 0.199      ; 0.042      ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'rst'                                                                                                                            ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -2.360 ; regOp[1]               ; carryOut$latch                  ; regOp[1]               ; rst         ; 0.000        ; 3.227      ; 0.867      ;
; -1.860 ; regOp[1]               ; carryOut$latch                  ; regOp[1]               ; rst         ; -0.500       ; 3.227      ; 0.867      ;
; -1.859 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; 0.000        ; 3.278      ; 1.419      ;
; -1.509 ; regOp[2]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.618      ; 1.109      ;
; -1.464 ; regOp[3]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.618      ; 1.154      ;
; -1.459 ; regOp[2]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 2.567      ; 1.108      ;
; -1.441 ; regOp[3]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 2.567      ; 1.126      ;
; -1.359 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; -0.500       ; 3.278      ; 1.419      ;
; -1.098 ; W[1]                   ; regW[1]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.262      ; 0.164      ;
; -1.041 ; W[3]                   ; regW[3]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.205      ; 0.164      ;
; -1.038 ; W[2]                   ; regW[2]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.213      ; 0.175      ;
; -1.035 ; W[6]                   ; regW[6]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.213      ; 0.178      ;
; -1.023 ; regS[0]                ; regOp[0]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 1.193      ; 0.170      ;
; -1.014 ; regS[1]                ; regOp[1]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 1.188      ; 0.174      ;
; -0.984 ; estado.moveToRegisters ; prox_estado.resultToW_578       ; estado.moveToRegisters ; rst         ; 0.000        ; 1.322      ; 0.479      ;
; -0.982 ; estado.resultToW       ; prox_estado.progMemRead_590     ; estado.resultToW       ; rst         ; 0.000        ; 1.327      ; 0.486      ;
; -0.966 ; W[5]                   ; regW[5]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.134      ; 0.168      ;
; -0.941 ; W[7]                   ; regW[7]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.117      ; 0.176      ;
; -0.933 ; ALU_8:XALU|preR[8]     ; carryOut$latch                  ; regOp[1]               ; rst         ; -0.500       ; 2.128      ; 0.695      ;
; -0.815 ; W[4]                   ; regW[4]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.211      ; 0.396      ;
; -0.732 ; W[0]                   ; regW[0]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.129      ; 0.397      ;
; -0.622 ; IR[1]                  ; regB[1]                         ; rst                    ; rst         ; 0.000        ; 0.794      ; 0.172      ;
; -0.621 ; IR[2]                  ; regB[2]                         ; rst                    ; rst         ; 0.000        ; 0.786      ; 0.165      ;
; -0.621 ; IR[5]                  ; regB[5]                         ; rst                    ; rst         ; 0.000        ; 0.790      ; 0.169      ;
; -0.619 ; IR[3]                  ; regB[3]                         ; rst                    ; rst         ; 0.000        ; 0.795      ; 0.176      ;
; -0.618 ; IR[4]                  ; regB[4]                         ; rst                    ; rst         ; 0.000        ; 0.788      ; 0.170      ;
; -0.618 ; IR[6]                  ; regB[6]                         ; rst                    ; rst         ; 0.000        ; 0.790      ; 0.172      ;
; -0.614 ; IR[7]                  ; regB[7]                         ; rst                    ; rst         ; 0.000        ; 0.785      ; 0.171      ;
; -0.492 ; IR[8]                  ; regS[0]                         ; rst                    ; rst         ; 0.000        ; 0.719      ; 0.227      ;
; -0.488 ; IR[11]                 ; regS[3]                         ; rst                    ; rst         ; 0.000        ; 0.787      ; 0.299      ;
; -0.484 ; estado.moveToRegisters ; prox_estado.resultToW_578       ; estado.moveToRegisters ; rst         ; -0.500       ; 1.322      ; 0.479      ;
; -0.482 ; estado.resultToW       ; prox_estado.progMemRead_590     ; estado.resultToW       ; rst         ; -0.500       ; 1.327      ; 0.486      ;
; -0.429 ; PC[0]                  ; regAddress[0]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 0.595      ; 0.166      ;
; -0.429 ; PC[1]                  ; regAddress[1]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 0.594      ; 0.165      ;
; -0.425 ; IR[10]                 ; regS[2]                         ; rst                    ; rst         ; 0.000        ; 0.809      ; 0.384      ;
; -0.386 ; regOp[2]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 1.495      ; 1.109      ;
; -0.382 ; PC[3]                  ; regAddress[3]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 0.547      ; 0.165      ;
; -0.380 ; PC[2]                  ; regAddress[2]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 0.545      ; 0.165      ;
; -0.341 ; regOp[3]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 1.495      ; 1.154      ;
; -0.336 ; regOp[2]               ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 1.444      ; 1.108      ;
; -0.318 ; regOp[3]               ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 1.444      ; 1.126      ;
; -0.267 ; IR[9]                  ; regS[1]                         ; rst                    ; rst         ; 0.000        ; 0.723      ; 0.456      ;
; -0.212 ; regW[7]                ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 1.195      ; 0.983      ;
; -0.005 ; regW[0]                ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 1.184      ; 1.179      ;
; 0.039  ; regB[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.230      ; 1.269      ;
; 0.100  ; regS[0]                ; regOp[0]                        ; rst                    ; rst         ; 0.000        ; 0.070      ; 0.170      ;
; 0.109  ; regS[1]                ; regOp[1]                        ; rst                    ; rst         ; 0.000        ; 0.065      ; 0.174      ;
; 0.115  ; regOp[0]               ; carryOut$latch                  ; estado.moveToRegisters ; rst         ; 0.000        ; 1.180      ; 1.295      ;
; 0.139  ; regW[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.246      ; 1.385      ;
; 0.222  ; regW[0]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.235      ; 1.457      ;
; 0.261  ; regB[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.230      ; 1.491      ;
; 0.323  ; regB[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.228      ; 1.551      ;
; 0.330  ; regOp[0]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.231      ; 1.561      ;
; 0.340  ; estado.progMemRead     ; prox_estado.moveToRegisters_584 ; clk                    ; rst         ; 0.000        ; 0.017      ; 0.357      ;
; 0.343  ; regB[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.231      ; 1.574      ;
; 0.346  ; regW[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.228      ; 1.574      ;
; 0.395  ; regW[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.246      ; 1.641      ;
; 0.407  ; regW[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.236      ; 1.643      ;
; 0.436  ; regS[2]                ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 0.000        ; -0.267     ; 0.169      ;
; 0.437  ; regS[3]                ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 0.000        ; -0.268     ; 0.169      ;
; 0.461  ; regW[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.225      ; 1.686      ;
; 0.465  ; regW[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.224      ; 1.689      ;
; 0.483  ; regW[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.244      ; 1.727      ;
; 0.498  ; regB[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.232      ; 1.730      ;
; 0.602  ; regB[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.257      ; 1.859      ;
; 0.645  ; regB[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.228      ; 1.873      ;
; 0.911  ; regW[7]                ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 0.072      ; 0.983      ;
; 1.099  ; regAddress[3]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.053     ; 1.046      ;
; 1.104  ; regAddress[3]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.051     ; 1.053      ;
; 1.110  ; regAddress[3]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; -0.050     ; 1.060      ;
; 1.110  ; regAddress[3]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.052     ; 1.058      ;
; 1.114  ; regAddress[2]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.058     ; 1.056      ;
; 1.118  ; regW[0]                ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 0.061      ; 1.179      ;
; 1.161  ; regAddress[1]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.060     ; 1.101      ;
; 1.162  ; regB[7]                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.107      ; 1.269      ;
; 1.187  ; regAddress[2]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.059     ; 1.128      ;
; 1.221  ; regAddress[3]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.060     ; 1.161      ;
; 1.224  ; regAddress[2]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.057     ; 1.167      ;
; 1.227  ; regAddress[2]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.056     ; 1.171      ;
; 1.228  ; regAddress[0]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.053     ; 1.175      ;
; 1.229  ; regAddress[1]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.061     ; 1.168      ;
; 1.231  ; regAddress[0]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.060     ; 1.171      ;
; 1.232  ; regAddress[0]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.051     ; 1.181      ;
; 1.238  ; regOp[0]               ; carryOut$latch                  ; rst                    ; rst         ; 0.000        ; 0.057      ; 1.295      ;
; 1.243  ; regAddress[0]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; -0.050     ; 1.193      ;
; 1.243  ; regAddress[0]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.052     ; 1.191      ;
; 1.262  ; regW[7]                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.123      ; 1.385      ;
; 1.262  ; regAddress[1]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.059     ; 1.203      ;
; 1.277  ; regAddress[1]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.058     ; 1.219      ;
; 1.288  ; regAddress[3]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.061     ; 1.227      ;
; 1.295  ; regAddress[2]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.055     ; 1.240      ;
; 1.301  ; regAddress[0]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.061     ; 1.240      ;
; 1.323  ; regAddress[3]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.059     ; 1.264      ;
; 1.335  ; regAddress[0]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.059     ; 1.276      ;
; 1.335  ; regAddress[3]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.058     ; 1.277      ;
; 1.337  ; regAddress[1]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.057     ; 1.280      ;
; 1.344  ; regAddress[0]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.074     ; 1.270      ;
; 1.345  ; regW[0]                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.112      ; 1.457      ;
; 1.345  ; regAddress[3]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.074     ; 1.271      ;
; 1.346  ; regAddress[0]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.058     ; 1.288      ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'estado.resultToW'                                                                                               ;
+--------+--------------------+----------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node        ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+----------------+------------------------+------------------+--------------+------------+------------+
; -1.228 ; regOp[1]           ; carryOut$latch ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.095      ; 0.867      ;
; -0.978 ; regOp[1]           ; W[5]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.043      ; 1.065      ;
; -0.909 ; regOp[1]           ; W[7]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.038      ; 1.129      ;
; -0.883 ; regOp[1]           ; W[4]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.962      ; 1.079      ;
; -0.866 ; regOp[1]           ; W[2]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.963      ; 1.097      ;
; -0.832 ; regOp[1]           ; W[3]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.952      ; 1.120      ;
; -0.776 ; regOp[1]           ; W[1]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.893      ; 1.117      ;
; -0.731 ; regOp[1]           ; W[0]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.037      ; 1.306      ;
; -0.728 ; regOp[1]           ; carryOut$latch ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.095      ; 0.867      ;
; -0.727 ; regOp[1]           ; Zout$latch     ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.146      ; 1.419      ;
; -0.718 ; regOp[1]           ; W[6]           ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.952      ; 1.234      ;
; -0.677 ; regOp[2]           ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.383      ; 0.706      ;
; -0.588 ; regOp[3]           ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.383      ; 0.795      ;
; -0.489 ; regOp[2]           ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.292      ; 0.803      ;
; -0.478 ; regOp[2]           ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.292      ; 0.814      ;
; -0.478 ; regOp[1]           ; W[5]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.043      ; 1.065      ;
; -0.449 ; regOp[2]           ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.302      ; 0.853      ;
; -0.444 ; regOp[3]           ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.292      ; 0.848      ;
; -0.435 ; regOp[2]           ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.233      ; 0.798      ;
; -0.421 ; regOp[3]           ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.302      ; 0.881      ;
; -0.409 ; regOp[1]           ; W[7]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.038      ; 1.129      ;
; -0.383 ; regOp[1]           ; W[4]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.962      ; 1.079      ;
; -0.377 ; regOp[2]           ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.486      ; 1.109      ;
; -0.366 ; regOp[1]           ; W[2]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.963      ; 1.097      ;
; -0.332 ; regOp[3]           ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.486      ; 1.154      ;
; -0.332 ; regOp[1]           ; W[3]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.952      ; 1.120      ;
; -0.327 ; regOp[2]           ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.435      ; 1.108      ;
; -0.309 ; regOp[3]           ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.435      ; 1.126      ;
; -0.294 ; regOp[2]           ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.303      ; 1.009      ;
; -0.276 ; regOp[1]           ; W[1]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.893      ; 1.117      ;
; -0.263 ; regOp[3]           ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.233      ; 0.970      ;
; -0.262 ; regOp[3]           ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.292      ; 1.030      ;
; -0.231 ; regOp[1]           ; W[0]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.037      ; 1.306      ;
; -0.227 ; regOp[1]           ; Zout$latch     ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.146      ; 1.419      ;
; -0.218 ; regOp[1]           ; W[6]           ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.952      ; 1.234      ;
; -0.135 ; regOp[3]           ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.303      ; 1.168      ;
; -0.103 ; regOp[3]           ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.377      ; 1.274      ;
; -0.030 ; regOp[2]           ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.377      ; 1.347      ;
; -0.025 ; regOp[2]           ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.378      ; 1.353      ;
; -0.006 ; regOp[3]           ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.378      ; 1.372      ;
; 0.199  ; ALU_8:XALU|preR[8] ; carryOut$latch ; regOp[1]               ; estado.resultToW ; -0.500       ; 0.996      ; 0.695      ;
; 0.446  ; regOp[2]           ; W[5]           ; rst                    ; estado.resultToW ; 0.000        ; 0.260      ; 0.706      ;
; 0.535  ; regOp[3]           ; W[5]           ; rst                    ; estado.resultToW ; 0.000        ; 0.260      ; 0.795      ;
; 0.634  ; regOp[2]           ; W[3]           ; rst                    ; estado.resultToW ; 0.000        ; 0.169      ; 0.803      ;
; 0.645  ; regOp[2]           ; W[6]           ; rst                    ; estado.resultToW ; 0.000        ; 0.169      ; 0.814      ;
; 0.674  ; regOp[2]           ; W[4]           ; rst                    ; estado.resultToW ; 0.000        ; 0.179      ; 0.853      ;
; 0.679  ; regOp[3]           ; W[3]           ; rst                    ; estado.resultToW ; 0.000        ; 0.169      ; 0.848      ;
; 0.688  ; regOp[2]           ; W[1]           ; rst                    ; estado.resultToW ; 0.000        ; 0.110      ; 0.798      ;
; 0.702  ; regOp[3]           ; W[4]           ; rst                    ; estado.resultToW ; 0.000        ; 0.179      ; 0.881      ;
; 0.746  ; regOp[2]           ; Zout$latch     ; rst                    ; estado.resultToW ; 0.000        ; 0.363      ; 1.109      ;
; 0.791  ; regOp[3]           ; Zout$latch     ; rst                    ; estado.resultToW ; 0.000        ; 0.363      ; 1.154      ;
; 0.796  ; regOp[2]           ; carryOut$latch ; rst                    ; estado.resultToW ; 0.000        ; 0.312      ; 1.108      ;
; 0.814  ; regOp[3]           ; carryOut$latch ; rst                    ; estado.resultToW ; 0.000        ; 0.312      ; 1.126      ;
; 0.829  ; regOp[2]           ; W[2]           ; rst                    ; estado.resultToW ; 0.000        ; 0.180      ; 1.009      ;
; 0.860  ; regOp[3]           ; W[1]           ; rst                    ; estado.resultToW ; 0.000        ; 0.110      ; 0.970      ;
; 0.861  ; regOp[3]           ; W[6]           ; rst                    ; estado.resultToW ; 0.000        ; 0.169      ; 1.030      ;
; 0.885  ; regB[7]            ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.010     ; 0.875      ;
; 0.920  ; regW[7]            ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.063      ; 0.983      ;
; 0.985  ; regW[7]            ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.006      ; 0.991      ;
; 0.988  ; regOp[3]           ; W[2]           ; rst                    ; estado.resultToW ; 0.000        ; 0.180      ; 1.168      ;
; 1.020  ; regOp[3]           ; W[0]           ; rst                    ; estado.resultToW ; 0.000        ; 0.254      ; 1.274      ;
; 1.093  ; regOp[2]           ; W[0]           ; rst                    ; estado.resultToW ; 0.000        ; 0.254      ; 1.347      ;
; 1.098  ; regOp[2]           ; W[7]           ; rst                    ; estado.resultToW ; 0.000        ; 0.255      ; 1.353      ;
; 1.117  ; regOp[3]           ; W[7]           ; rst                    ; estado.resultToW ; 0.000        ; 0.255      ; 1.372      ;
; 1.127  ; regW[0]            ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.052      ; 1.179      ;
; 1.171  ; regB[7]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.098      ; 1.269      ;
; 1.211  ; regOp[0]           ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.004     ; 1.207      ;
; 1.223  ; regW[0]            ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.006     ; 1.217      ;
; 1.231  ; regB[6]            ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.095     ; 1.136      ;
; 1.247  ; regOp[0]           ; carryOut$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.048      ; 1.295      ;
; 1.252  ; regOp[0]           ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.095     ; 1.157      ;
; 1.262  ; regB[1]            ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.011     ; 1.251      ;
; 1.271  ; regW[7]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.114      ; 1.385      ;
; 1.293  ; regB[5]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.003     ; 1.290      ;
; 1.295  ; regW[6]            ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.090     ; 1.205      ;
; 1.299  ; regW[1]            ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.139     ; 1.160      ;
; 1.321  ; regW[5]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.011     ; 1.310      ;
; 1.342  ; regW[4]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.007     ; 1.335      ;
; 1.343  ; regB[3]            ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.098     ; 1.245      ;
; 1.352  ; regOp[0]           ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.009     ; 1.343      ;
; 1.354  ; regW[0]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.103      ; 1.457      ;
; 1.359  ; regW[5]            ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.092     ; 1.267      ;
; 1.363  ; regW[2]            ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.090     ; 1.273      ;
; 1.366  ; regW[4]            ; W[3]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.098     ; 1.268      ;
; 1.374  ; regB[3]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.007     ; 1.367      ;
; 1.393  ; regB[1]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.098      ; 1.491      ;
; 1.410  ; regW[0]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.000      ; 1.410      ;
; 1.411  ; regW[0]            ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.150     ; 1.261      ;
; 1.422  ; regOp[0]           ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.085     ; 1.337      ;
; 1.427  ; regW[4]            ; W[4]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.088     ; 1.339      ;
; 1.430  ; regOp[0]           ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.010     ; 1.420      ;
; 1.455  ; regB[3]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.096      ; 1.551      ;
; 1.458  ; regOp[0]           ; W[2]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.084     ; 1.374      ;
; 1.459  ; regW[6]            ; W[7]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.004     ; 1.455      ;
; 1.462  ; regOp[0]           ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.099      ; 1.561      ;
; 1.462  ; regW[1]            ; W[0]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.005      ; 1.467      ;
; 1.467  ; regW[2]            ; W[1]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.160     ; 1.307      ;
; 1.473  ; regW[4]            ; W[6]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.098     ; 1.375      ;
; 1.475  ; regB[6]            ; Zout$latch     ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.099      ; 1.574      ;
; 1.477  ; regB[1]            ; W[5]           ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.005     ; 1.472      ;
+--------+--------------------+----------------+------------------------+------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                  ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.309 ; prox_estado.resultToW_578       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; 0.199      ; 0.042      ;
; -0.113 ; prox_estado.progMemRead_590     ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 0.194      ; 0.233      ;
; -0.093 ; prox_estado.moveToRegisters_584 ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; -0.017     ; 0.042      ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'regOp[1]'                                                                                             ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -0.148 ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.000        ; 1.099      ; 0.951      ;
; 0.352  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; -0.500       ; 1.099      ; 0.951      ;
; 1.075  ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; 0.439      ; 1.014      ;
; 2.198  ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -0.684     ; 1.014      ;
; 2.345  ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.948     ; 0.897      ;
; 2.488  ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.935     ; 1.053      ;
; 2.538  ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.933     ; 1.105      ;
; 2.579  ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.943     ; 1.136      ;
; 2.602  ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.955     ; 1.147      ;
; 2.666  ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.951     ; 1.215      ;
; 2.730  ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.954     ; 1.276      ;
; 2.753  ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.933     ; 1.320      ;
; 2.771  ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.944     ; 1.327      ;
; 3.468  ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.071     ; 0.897      ;
; 3.611  ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.058     ; 1.053      ;
; 3.661  ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.056     ; 1.105      ;
; 3.702  ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.066     ; 1.136      ;
; 3.725  ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.078     ; 1.147      ;
; 3.789  ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.074     ; 1.215      ;
; 3.853  ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.077     ; 1.276      ;
; 3.876  ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.056     ; 1.320      ;
; 3.894  ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.067     ; 1.327      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'estado.moveToRegisters'                                                                                   ;
+-------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; 0.025 ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.139      ; 0.164      ;
; 0.082 ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.082      ; 0.164      ;
; 0.085 ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.090      ; 0.175      ;
; 0.088 ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.090      ; 0.178      ;
; 0.100 ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.070      ; 0.170      ;
; 0.109 ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.065      ; 0.174      ;
; 0.157 ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.011      ; 0.168      ;
; 0.182 ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; -0.006     ; 0.176      ;
; 0.308 ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.088      ; 0.396      ;
; 0.391 ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.006      ; 0.397      ;
; 0.501 ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.329     ; 0.172      ;
; 0.502 ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.337     ; 0.165      ;
; 0.502 ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.333     ; 0.169      ;
; 0.504 ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.328     ; 0.176      ;
; 0.505 ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.335     ; 0.170      ;
; 0.505 ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.333     ; 0.172      ;
; 0.509 ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.338     ; 0.171      ;
; 0.631 ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.404     ; 0.227      ;
; 0.635 ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.336     ; 0.299      ;
; 0.698 ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.314     ; 0.384      ;
; 0.856 ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.400     ; 0.456      ;
; 0.890 ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.547     ; 0.343      ;
; 0.896 ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.547     ; 0.349      ;
; 0.945 ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.547     ; 0.398      ;
; 0.948 ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.547     ; 0.401      ;
; 0.986 ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.595     ; 0.391      ;
; 0.996 ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.594     ; 0.402      ;
; 1.001 ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.545     ; 0.456      ;
; 1.010 ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.545     ; 0.465      ;
; 1.017 ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.547     ; 0.470      ;
; 1.051 ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.594     ; 0.457      ;
; 1.223 ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.053     ; 0.170      ;
; 1.232 ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.058     ; 0.174      ;
; 1.559 ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -1.390     ; 0.169      ;
; 1.560 ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -1.391     ; 0.169      ;
; 2.682 ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.513     ; 0.169      ;
; 2.683 ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.514     ; 0.169      ;
+-------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'clk'                                                                                       ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.394 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.500        ; 1.521      ; 1.659      ;
; 0.394 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.500        ; 1.521      ; 1.659      ;
; 0.394 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.500        ; 1.521      ; 1.659      ;
; 0.894 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; 1.521      ; 1.659      ;
; 0.894 ; rst       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; 1.521      ; 1.659      ;
; 0.894 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 1.521      ; 1.659      ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'estado.resultToW'                                                                ;
+-------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+------------------+--------------+------------+------------+
; 0.697 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.500        ; 1.893      ; 1.261      ;
; 0.704 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.500        ; 1.963      ; 1.263      ;
; 0.712 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.500        ; 1.952      ; 1.253      ;
; 0.777 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.500        ; 1.952      ; 1.264      ;
; 0.805 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.500        ; 1.962      ; 1.262      ;
; 0.809 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.500        ; 2.043      ; 1.265      ;
; 0.814 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.500        ; 2.038      ; 1.253      ;
; 0.820 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.500        ; 2.037      ; 1.253      ;
; 1.197 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 1.000        ; 1.893      ; 1.261      ;
; 1.204 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 1.000        ; 1.963      ; 1.263      ;
; 1.212 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 1.000        ; 1.952      ; 1.253      ;
; 1.277 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 1.000        ; 1.952      ; 1.264      ;
; 1.305 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 1.000        ; 1.962      ; 1.262      ;
; 1.309 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 1.000        ; 2.043      ; 1.265      ;
; 1.314 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 1.000        ; 2.038      ; 1.253      ;
; 1.320 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 1.000        ; 2.037      ; 1.253      ;
+-------+-----------+---------+--------------+------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'estado.moveToRegisters'                                                                ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; 0.783 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.891      ; 1.031      ;
; 0.878 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.844      ; 1.031      ;
; 0.880 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.891      ; 1.029      ;
; 0.959 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.843      ; 1.031      ;
; 1.283 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.891      ; 1.031      ;
; 1.378 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.844      ; 1.031      ;
; 1.380 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.891      ; 1.029      ;
; 1.459 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.843      ; 1.031      ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'estado.moveToRegisters'                                                                  ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; -0.862 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.891      ; 1.029      ;
; -0.860 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.891      ; 1.031      ;
; -0.813 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.844      ; 1.031      ;
; -0.812 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.843      ; 1.031      ;
; -0.362 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.891      ; 1.029      ;
; -0.360 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.891      ; 1.031      ;
; -0.313 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.844      ; 1.031      ;
; -0.312 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.843      ; 1.031      ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'estado.resultToW'                                                                  ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; -0.785 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.000        ; 2.038      ; 1.253      ;
; -0.784 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.000        ; 2.037      ; 1.253      ;
; -0.778 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.000        ; 2.043      ; 1.265      ;
; -0.700 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.000        ; 1.963      ; 1.263      ;
; -0.700 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.000        ; 1.962      ; 1.262      ;
; -0.699 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.000        ; 1.952      ; 1.253      ;
; -0.688 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.000        ; 1.952      ; 1.264      ;
; -0.632 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.000        ; 1.893      ; 1.261      ;
; -0.285 ; rst       ; W[7]    ; rst          ; estado.resultToW ; -0.500       ; 2.038      ; 1.253      ;
; -0.284 ; rst       ; W[0]    ; rst          ; estado.resultToW ; -0.500       ; 2.037      ; 1.253      ;
; -0.278 ; rst       ; W[5]    ; rst          ; estado.resultToW ; -0.500       ; 2.043      ; 1.265      ;
; -0.200 ; rst       ; W[2]    ; rst          ; estado.resultToW ; -0.500       ; 1.963      ; 1.263      ;
; -0.200 ; rst       ; W[4]    ; rst          ; estado.resultToW ; -0.500       ; 1.962      ; 1.262      ;
; -0.199 ; rst       ; W[3]    ; rst          ; estado.resultToW ; -0.500       ; 1.952      ; 1.253      ;
; -0.188 ; rst       ; W[6]    ; rst          ; estado.resultToW ; -0.500       ; 1.952      ; 1.264      ;
; -0.132 ; rst       ; W[1]    ; rst          ; estado.resultToW ; -0.500       ; 1.893      ; 1.261      ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'clk'                                                                                         ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.014 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; 1.521      ; 1.659      ;
; -0.014 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; 1.521      ; 1.659      ;
; -0.014 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 1.521      ; 1.659      ;
; 0.486  ; rst       ; estado.moveToRegisters ; rst          ; clk         ; -0.500       ; 1.521      ; 1.659      ;
; 0.486  ; rst       ; estado.resultToW       ; rst          ; clk         ; -0.500       ; 1.521      ; 1.659      ;
; 0.486  ; rst       ; estado.progMemRead     ; rst          ; clk         ; -0.500       ; 1.521      ; 1.659      ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                     ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; estado.progMemRead         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; estado.progMemRead         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; estado.resultToW           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; estado.resultToW           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.resultToW|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.resultToW|clk       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'rst'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; rst   ; Rise       ; rst                                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0clkctrl|inclk[0]               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0clkctrl|inclk[0]               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0clkctrl|outclk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0clkctrl|outclk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[0]~0|datad                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[0]~0|datad                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; carryOut$latch                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; carryOut$latch                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut$latch|datad                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut$latch|datad                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0clkctrl|inclk[0]            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0clkctrl|inclk[0]            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0clkctrl|outclk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0clkctrl|outclk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0|combout                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0|combout                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryOut~0|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryOut~0|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.moveToRegisters_584       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.moveToRegisters_584       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.moveToRegisters_584|datac ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.moveToRegisters_584|datac ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.progMemRead_590           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.progMemRead_590           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.progMemRead_590|datac     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.progMemRead_590|datac     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.resultToW_578             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.resultToW_578             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.resultToW_578|datac       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.resultToW_578|datac       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[0]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[0]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[1]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[1]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[2]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[2]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[3]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[3]|datac                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regB[1]                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regB[1]                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regB[1]|datac                         ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'estado.moveToRegisters'                                                                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                  ; Clock Edge ; Target                                  ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[0]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[0]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[1]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[1]|datad                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[2]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[2]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[3]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[3]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[0]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[0]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'estado.resultToW'                                                                           ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock            ; Clock Edge ; Target                            ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[1]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[1]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[2]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[2]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[4]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[4]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[6]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[6]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[7]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[7]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; carryOut$latch                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; carryOut$latch                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut$latch|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut$latch|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0clkctrl|inclk[0]        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0clkctrl|inclk[0]        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0clkctrl|outclk          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0clkctrl|outclk          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; carryOut~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; carryOut~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'regOp[1]'                                                             ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~1|combout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~1|combout ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~1|datac   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~1|datac   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; regOp[1]|combout    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; regOp[1]|combout    ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+


+-------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                           ;
+------------------+------------------------+-------+-------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise  ; Fall  ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+-------+-------+------------+------------------------+
; currentState[*]  ; clk                    ; 4.080 ; 4.080 ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 4.080 ; 4.080 ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;       ; 2.260 ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;       ; 2.260 ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 2.260 ;       ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 2.260 ;       ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 4.404 ; 4.404 ; Fall       ; estado.resultToW       ;
; carryOut         ; estado.resultToW       ; 4.138 ; 4.138 ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 5.536 ; 5.536 ; Fall       ; rst                    ;
; carryOut         ; rst                    ; 5.270 ; 5.270 ; Fall       ; rst                    ;
+------------------+------------------------+-------+-------+------------+------------------------+


+-------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                   ;
+------------------+------------------------+-------+-------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise  ; Fall  ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+-------+-------+------------+------------------------+
; currentState[*]  ; clk                    ; 4.080 ; 4.080 ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 4.080 ; 4.080 ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;       ; 2.260 ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;       ; 2.260 ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 2.260 ;       ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 2.260 ;       ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 4.404 ; 4.404 ; Fall       ; estado.resultToW       ;
; carryOut         ; estado.resultToW       ; 4.138 ; 4.138 ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 5.536 ; 5.536 ; Fall       ; rst                    ;
; carryOut         ; rst                    ; 5.270 ; 5.270 ; Fall       ; rst                    ;
+------------------+------------------------+-------+-------+------------+------------------------+


+-----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                     ;
+-------------------------+----------+---------+----------+---------+---------------------+
; Clock                   ; Setup    ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+-------------------------+----------+---------+----------+---------+---------------------+
; Worst-case Slack        ; -9.115   ; -3.976  ; -0.032   ; -1.297  ; -1.469              ;
;  clk                    ; 0.514    ; -0.415  ; 0.261    ; -0.014  ; -1.469              ;
;  estado.moveToRegisters ; -5.242   ; -0.030  ; 0.118    ; -1.297  ; 0.500               ;
;  estado.resultToW       ; -9.115   ; -1.631  ; -0.032   ; -1.126  ; 0.500               ;
;  regOp[1]               ; -7.850   ; -0.148  ; N/A      ; N/A     ; 0.500               ;
;  rst                    ; -6.770   ; -3.976  ; N/A      ; N/A     ; -1.469              ;
; Design-wide TNS         ; -191.887 ; -53.653 ; -0.032   ; -12.66  ; -6.604              ;
;  clk                    ; 0.000    ; -0.515  ; 0.000    ; -0.042  ; -5.135              ;
;  estado.moveToRegisters ; -44.563  ; -0.030  ; 0.000    ; -4.895  ; 0.000               ;
;  estado.resultToW       ; -80.732  ; -8.648  ; -0.032   ; -7.738  ; 0.000               ;
;  regOp[1]               ; -7.850   ; -0.148  ; N/A      ; N/A     ; 0.000               ;
;  rst                    ; -58.742  ; -46.555 ; N/A      ; N/A     ; -1.469              ;
+-------------------------+----------+---------+----------+---------+---------------------+


+---------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                             ;
+------------------+------------------------+--------+--------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise   ; Fall   ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+--------+--------+------------+------------------------+
; currentState[*]  ; clk                    ; 8.644  ; 8.644  ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 8.644  ; 8.644  ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;        ; 4.875  ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;        ; 4.875  ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 4.875  ;        ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 4.875  ;        ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 9.110  ; 9.110  ; Fall       ; estado.resultToW       ;
; carryOut         ; estado.resultToW       ; 8.515  ; 8.515  ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 11.455 ; 11.455 ; Fall       ; rst                    ;
; carryOut         ; rst                    ; 10.860 ; 10.860 ; Fall       ; rst                    ;
+------------------+------------------------+--------+--------+------------+------------------------+


+-------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                   ;
+------------------+------------------------+-------+-------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise  ; Fall  ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+-------+-------+------------+------------------------+
; currentState[*]  ; clk                    ; 4.080 ; 4.080 ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 4.080 ; 4.080 ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;       ; 2.260 ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;       ; 2.260 ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 2.260 ;       ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 2.260 ;       ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 4.404 ; 4.404 ; Fall       ; estado.resultToW       ;
; carryOut         ; estado.resultToW       ; 4.138 ; 4.138 ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 5.536 ; 5.536 ; Fall       ; rst                    ;
; carryOut         ; rst                    ; 5.270 ; 5.270 ; Fall       ; rst                    ;
+------------------+------------------------+-------+-------+------------+------------------------+


+---------------------------------------------------------------------------------------------+
; Setup Transfers                                                                             ;
+------------------------+------------------------+----------+----------+----------+----------+
; From Clock             ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------+------------------------+----------+----------+----------+----------+
; rst                    ; clk                    ; 0        ; 0        ; 0        ; 3        ;
; estado.moveToRegisters ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 4        ;
; estado.resultToW       ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 8        ;
; rst                    ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 25       ;
; estado.moveToRegisters ; estado.resultToW       ; 0        ; 0        ; 0        ; 797      ;
; regOp[1]               ; estado.resultToW       ; 0        ; 0        ; 77       ; 76       ;
; rst                    ; estado.resultToW       ; 0        ; 0        ; 0        ; 797      ;
; estado.moveToRegisters ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; regOp[1]               ; regOp[1]               ; 1        ; 1        ; 0        ; 0        ;
; rst                    ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; clk                    ; rst                    ; 0        ; 0        ; 0        ; 1        ;
; estado.moveToRegisters ; rst                    ; 0        ; 0        ; 1        ; 411      ;
; estado.resultToW       ; rst                    ; 0        ; 0        ; 1        ; 9        ;
; regOp[1]               ; rst                    ; 0        ; 0        ; 40       ; 39       ;
; rst                    ; rst                    ; 0        ; 0        ; 0        ; 461      ;
+------------------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------------------+
; Hold Transfers                                                                              ;
+------------------------+------------------------+----------+----------+----------+----------+
; From Clock             ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------+------------------------+----------+----------+----------+----------+
; rst                    ; clk                    ; 0        ; 0        ; 0        ; 3        ;
; estado.moveToRegisters ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 4        ;
; estado.resultToW       ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 8        ;
; rst                    ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 25       ;
; estado.moveToRegisters ; estado.resultToW       ; 0        ; 0        ; 0        ; 797      ;
; regOp[1]               ; estado.resultToW       ; 0        ; 0        ; 77       ; 76       ;
; rst                    ; estado.resultToW       ; 0        ; 0        ; 0        ; 797      ;
; estado.moveToRegisters ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; regOp[1]               ; regOp[1]               ; 1        ; 1        ; 0        ; 0        ;
; rst                    ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; clk                    ; rst                    ; 0        ; 0        ; 0        ; 1        ;
; estado.moveToRegisters ; rst                    ; 0        ; 0        ; 1        ; 411      ;
; estado.resultToW       ; rst                    ; 0        ; 0        ; 1        ; 9        ;
; regOp[1]               ; rst                    ; 0        ; 0        ; 40       ; 39       ;
; rst                    ; rst                    ; 0        ; 0        ; 0        ; 461      ;
+------------------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------+
; Recovery Transfers                                                              ;
+------------+------------------------+----------+----------+----------+----------+
; From Clock ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+------------------------+----------+----------+----------+----------+
; rst        ; clk                    ; 0        ; 0        ; 3        ; 3        ;
; rst        ; estado.moveToRegisters ; 0        ; 0        ; 4        ; 4        ;
; rst        ; estado.resultToW       ; 0        ; 0        ; 8        ; 8        ;
+------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------+
; Removal Transfers                                                               ;
+------------+------------------------+----------+----------+----------+----------+
; From Clock ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+------------------------+----------+----------+----------+----------+
; rst        ; clk                    ; 0        ; 0        ; 3        ; 3        ;
; rst        ; estado.moveToRegisters ; 0        ; 0        ; 4        ; 4        ;
; rst        ; estado.resultToW       ; 0        ; 0        ; 8        ; 8        ;
+------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 0     ; 0    ;
; Unconstrained Input Port Paths  ; 0     ; 0    ;
; Unconstrained Output Ports      ; 4     ; 4    ;
; Unconstrained Output Port Paths ; 4     ; 4    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Wed Jun 27 19:30:27 2018
Info: Command: quartus_sta ALU_CTRL -c ALU_CTRL
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 56 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'ALU_CTRL.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name rst rst
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name estado.moveToRegisters estado.moveToRegisters
    Info (332105): create_clock -period 1.000 -name estado.resultToW estado.resultToW
    Info (332105): create_clock -period 1.000 -name regOp[1] regOp[1]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -9.115
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -9.115       -80.732 estado.resultToW 
    Info (332119):    -7.850        -7.850 regOp[1] 
    Info (332119):    -6.770       -58.742 rst 
    Info (332119):    -5.242       -44.563 estado.moveToRegisters 
    Info (332119):     0.514         0.000 clk 
Info (332146): Worst-case hold slack is -3.976
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.976       -46.555 rst 
    Info (332119):    -1.631        -6.505 estado.resultToW 
    Info (332119):    -0.415        -0.415 clk 
    Info (332119):    -0.148        -0.148 regOp[1] 
    Info (332119):    -0.030        -0.030 estado.moveToRegisters 
Info (332146): Worst-case recovery slack is -0.032
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.032        -0.032 estado.resultToW 
    Info (332119):     0.118         0.000 estado.moveToRegisters 
    Info (332119):     0.261         0.000 clk 
Info (332146): Worst-case removal slack is -1.297
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.297        -4.895 estado.moveToRegisters 
    Info (332119):    -1.126        -7.738 estado.resultToW 
    Info (332119):    -0.009        -0.027 clk 
Info (332146): Worst-case minimum pulse width slack is -1.469
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.469        -5.135 clk 
    Info (332119):    -1.469        -1.469 rst 
    Info (332119):     0.500         0.000 estado.moveToRegisters 
    Info (332119):     0.500         0.000 estado.resultToW 
    Info (332119):     0.500         0.000 regOp[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.317
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.317        -3.317 regOp[1] 
    Info (332119):    -2.896       -25.044 estado.resultToW 
    Info (332119):    -2.088        -7.546 estado.moveToRegisters 
    Info (332119):    -1.764       -12.285 rst 
    Info (332119):     0.973         0.000 clk 
Info (332146): Worst-case hold slack is -2.360
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.360       -23.513 rst 
    Info (332119):    -1.228        -8.648 estado.resultToW 
    Info (332119):    -0.309        -0.515 clk 
    Info (332119):    -0.148        -0.148 regOp[1] 
    Info (332119):     0.025         0.000 estado.moveToRegisters 
Info (332146): Worst-case recovery slack is 0.394
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.394         0.000 clk 
    Info (332119):     0.697         0.000 estado.resultToW 
    Info (332119):     0.783         0.000 estado.moveToRegisters 
Info (332146): Worst-case removal slack is -0.862
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.862        -3.347 estado.moveToRegisters 
    Info (332119):    -0.785        -5.766 estado.resultToW 
    Info (332119):    -0.014        -0.042 clk 
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222        -4.222 clk 
    Info (332119):    -1.222        -1.222 rst 
    Info (332119):     0.500         0.000 estado.moveToRegisters 
    Info (332119):     0.500         0.000 estado.resultToW 
    Info (332119):     0.500         0.000 regOp[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4567 megabytes
    Info: Processing ended: Wed Jun 27 19:30:29 2018
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


