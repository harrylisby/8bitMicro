TimeQuest Timing Analyzer report for ALU_CTRL
Wed Jun 27 19:34:14 2018
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'estado.resultToW'
 12. Slow Model Setup: 'regOp[1]'
 13. Slow Model Setup: 'rst'
 14. Slow Model Setup: 'estado.moveToRegisters'
 15. Slow Model Setup: 'clk'
 16. Slow Model Hold: 'rst'
 17. Slow Model Hold: 'estado.moveToRegisters'
 18. Slow Model Hold: 'estado.resultToW'
 19. Slow Model Hold: 'regOp[1]'
 20. Slow Model Hold: 'clk'
 21. Slow Model Recovery: 'estado.resultToW'
 22. Slow Model Recovery: 'clk'
 23. Slow Model Recovery: 'estado.moveToRegisters'
 24. Slow Model Removal: 'estado.moveToRegisters'
 25. Slow Model Removal: 'estado.resultToW'
 26. Slow Model Removal: 'clk'
 27. Slow Model Minimum Pulse Width: 'clk'
 28. Slow Model Minimum Pulse Width: 'rst'
 29. Slow Model Minimum Pulse Width: 'estado.moveToRegisters'
 30. Slow Model Minimum Pulse Width: 'estado.resultToW'
 31. Slow Model Minimum Pulse Width: 'regOp[1]'
 32. Clock to Output Times
 33. Minimum Clock to Output Times
 34. Fast Model Setup Summary
 35. Fast Model Hold Summary
 36. Fast Model Recovery Summary
 37. Fast Model Removal Summary
 38. Fast Model Minimum Pulse Width Summary
 39. Fast Model Setup: 'regOp[1]'
 40. Fast Model Setup: 'estado.resultToW'
 41. Fast Model Setup: 'rst'
 42. Fast Model Setup: 'estado.moveToRegisters'
 43. Fast Model Setup: 'clk'
 44. Fast Model Hold: 'rst'
 45. Fast Model Hold: 'estado.moveToRegisters'
 46. Fast Model Hold: 'estado.resultToW'
 47. Fast Model Hold: 'clk'
 48. Fast Model Hold: 'regOp[1]'
 49. Fast Model Recovery: 'estado.resultToW'
 50. Fast Model Recovery: 'clk'
 51. Fast Model Recovery: 'estado.moveToRegisters'
 52. Fast Model Removal: 'estado.moveToRegisters'
 53. Fast Model Removal: 'estado.resultToW'
 54. Fast Model Removal: 'clk'
 55. Fast Model Minimum Pulse Width: 'clk'
 56. Fast Model Minimum Pulse Width: 'rst'
 57. Fast Model Minimum Pulse Width: 'estado.moveToRegisters'
 58. Fast Model Minimum Pulse Width: 'estado.resultToW'
 59. Fast Model Minimum Pulse Width: 'regOp[1]'
 60. Clock to Output Times
 61. Minimum Clock to Output Times
 62. Multicorner Timing Analysis Summary
 63. Clock to Output Times
 64. Minimum Clock to Output Times
 65. Setup Transfers
 66. Hold Transfers
 67. Recovery Transfers
 68. Removal Transfers
 69. Report TCCS
 70. Report RSKM
 71. Unconstrained Paths
 72. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; ALU_CTRL                                           ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C20F484C7                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                         ;
+------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------+
; Clock Name             ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                    ;
+------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------+
; clk                    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                    ;
; estado.moveToRegisters ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { estado.moveToRegisters } ;
; estado.resultToW       ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { estado.resultToW }       ;
; regOp[1]               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { regOp[1] }               ;
; rst                    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { rst }                    ;
+------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------+


+--------------------------------------------------------------+
; Slow Model Fmax Summary                                      ;
+------------+-----------------+------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name             ; Note ;
+------------+-----------------+------------------------+------+
; 130.57 MHz ; 130.57 MHz      ; rst                    ;      ;
; 221.14 MHz ; 221.14 MHz      ; estado.moveToRegisters ;      ;
; 538.21 MHz ; 538.21 MHz      ; regOp[1]               ;      ;
+------------+-----------------+------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-------------------------------------------------+
; Slow Model Setup Summary                        ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.resultToW       ; -9.723 ; -86.792       ;
; regOp[1]               ; -8.849 ; -8.849        ;
; rst                    ; -6.659 ; -56.367       ;
; estado.moveToRegisters ; -4.316 ; -37.052       ;
; clk                    ; -0.448 ; -0.453        ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Hold Summary                         ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; rst                    ; -3.395 ; -37.926       ;
; estado.moveToRegisters ; -1.814 ; -10.500       ;
; estado.resultToW       ; -0.378 ; -0.984        ;
; regOp[1]               ; -0.211 ; -0.211        ;
; clk                    ; 0.135  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Recovery Summary                     ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.resultToW       ; -1.000 ; -4.791        ;
; clk                    ; 0.225  ; 0.000         ;
; estado.moveToRegisters ; 0.233  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Removal Summary                      ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.moveToRegisters ; -1.053 ; -4.062        ;
; estado.resultToW       ; -0.474 ; -2.096        ;
; clk                    ; -0.009 ; -0.018        ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Slow Model Minimum Pulse Width Summary          ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; clk                    ; -1.469 ; -5.135        ;
; rst                    ; -1.469 ; -1.469        ;
; estado.moveToRegisters ; 0.500  ; 0.000         ;
; estado.resultToW       ; 0.500  ; 0.000         ;
; regOp[1]               ; 0.500  ; 0.000         ;
+------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'estado.resultToW'                                                                                 ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node    ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; -9.723 ; regB[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.756     ; 6.276      ;
; -9.713 ; regOp[0]  ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.762     ; 6.260      ;
; -9.692 ; regW[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.651     ; 6.350      ;
; -9.618 ; regW[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.651     ; 6.276      ;
; -9.615 ; regW[0]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.612     ; 6.312      ;
; -9.547 ; regW[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.610     ; 6.246      ;
; -9.507 ; regW[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.582     ; 6.234      ;
; -9.449 ; regB[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.759     ; 5.999      ;
; -9.355 ; regB[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.756     ; 5.908      ;
; -9.352 ; regW[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.613     ; 6.048      ;
; -9.323 ; regW[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.611     ; 6.021      ;
; -9.317 ; regB[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.721     ; 5.905      ;
; -9.284 ; regB[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.761     ; 5.832      ;
; -9.253 ; regW[0]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -3.335     ; 5.239      ;
; -9.220 ; carryIn   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.069     ; 6.460      ;
; -9.203 ; regB[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.759     ; 5.753      ;
; -9.183 ; regOp[0]  ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -3.321     ; 5.507      ;
; -9.173 ; regB[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.490     ; 4.997      ;
; -9.086 ; regOp[0]  ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -3.485     ; 4.922      ;
; -9.065 ; regW[0]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.346     ; 5.033      ;
; -8.997 ; regW[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.344     ; 4.967      ;
; -8.974 ; regW[2]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.161     ; 5.474      ;
; -8.964 ; regW[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.385     ; 4.893      ;
; -8.945 ; regB[1]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.978     ; 6.276      ;
; -8.935 ; regOp[0]  ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.984     ; 6.260      ;
; -8.914 ; regW[2]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.873     ; 6.350      ;
; -8.908 ; regW[0]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -3.171     ; 5.382      ;
; -8.900 ; regW[3]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.161     ; 5.400      ;
; -8.847 ; regW[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -3.169     ; 5.323      ;
; -8.840 ; regW[3]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.873     ; 6.276      ;
; -8.839 ; regW[0]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.122     ; 5.378      ;
; -8.837 ; regW[0]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.834     ; 6.312      ;
; -8.834 ; regOp[0]  ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.496     ; 4.652      ;
; -8.825 ; regB[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -3.315     ; 5.155      ;
; -8.802 ; regB[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -3.479     ; 4.644      ;
; -8.778 ; regW[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.120     ; 5.319      ;
; -8.769 ; regW[1]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.832     ; 6.246      ;
; -8.762 ; regOp[0]  ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.272     ; 5.151      ;
; -8.756 ; regW[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -3.333     ; 4.744      ;
; -8.744 ; regB[1]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -3.265     ; 5.166      ;
; -8.739 ; regW[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -3.210     ; 5.174      ;
; -8.729 ; regW[4]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.804     ; 6.234      ;
; -8.717 ; regB[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -3.315     ; 5.047      ;
; -8.694 ; regW[0]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.482     ; 5.175      ;
; -8.687 ; regB[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.490     ; 4.511      ;
; -8.671 ; regB[3]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.981     ; 5.999      ;
; -8.668 ; regOp[0]  ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -3.271     ; 5.084      ;
; -8.637 ; regB[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.626     ; 4.974      ;
; -8.633 ; regW[4]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.092     ; 5.202      ;
; -8.632 ; regW[0]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -3.121     ; 5.198      ;
; -8.617 ; regB[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.473     ; 4.996      ;
; -8.609 ; regB[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.756     ; 5.162      ;
; -8.605 ; regB[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.493     ; 4.426      ;
; -8.589 ; regW[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.480     ; 5.072      ;
; -8.577 ; regB[2]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.978     ; 5.908      ;
; -8.575 ; regW[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.172     ; 5.073      ;
; -8.574 ; regW[5]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.835     ; 6.048      ;
; -8.553 ; regW[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -3.385     ; 4.482      ;
; -8.550 ; regW[0]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.329     ; 5.073      ;
; -8.548 ; regB[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.277     ; 4.941      ;
; -8.545 ; regW[6]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.833     ; 6.021      ;
; -8.539 ; regB[4]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.943     ; 5.905      ;
; -8.532 ; carryIn   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -2.803     ; 5.043      ;
; -8.506 ; regB[5]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.983     ; 5.832      ;
; -8.501 ; regW[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.172     ; 4.999      ;
; -8.491 ; regW[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -2.648     ; 5.152      ;
; -8.478 ; regW[5]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.123     ; 5.016      ;
; -8.475 ; regW[0]   ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.557     ; 5.239      ;
; -8.456 ; carryIn   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -2.578     ; 5.565      ;
; -8.445 ; regW[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.327     ; 4.970      ;
; -8.440 ; regW[0]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.133     ; 4.977      ;
; -8.428 ; regW[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.521     ; 4.870      ;
; -8.425 ; regB[6]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.981     ; 5.753      ;
; -8.421 ; regB[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.629     ; 4.755      ;
; -8.408 ; regW[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.368     ; 4.892      ;
; -8.405 ; regOp[0]  ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.543     ; 5.507      ;
; -8.401 ; regB[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.476     ; 4.777      ;
; -8.395 ; regB[1]   ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.712     ; 4.997      ;
; -8.390 ; regW[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.103     ; 4.957      ;
; -8.379 ; regW[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.131     ; 4.918      ;
; -8.368 ; regW[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.521     ; 4.810      ;
; -8.358 ; regW[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.330     ; 4.880      ;
; -8.348 ; regW[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.368     ; 4.832      ;
; -8.332 ; regB[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.280     ; 4.722      ;
; -8.329 ; regW[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.328     ; 4.853      ;
; -8.308 ; regOp[0]  ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.707     ; 4.922      ;
; -8.301 ; regOp[0]  ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.283     ; 4.688      ;
; -8.290 ; regB[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.478     ; 4.664      ;
; -8.287 ; regW[0]   ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.568     ; 5.033      ;
; -8.269 ; regB[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.438     ; 4.683      ;
; -8.219 ; regW[1]   ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.566     ; 4.967      ;
; -8.209 ; regB[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.476     ; 4.585      ;
; -8.206 ; regW[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.121     ; 4.746      ;
; -8.200 ; regB[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -3.242     ; 4.628      ;
; -8.196 ; regW[2]   ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.383     ; 5.474      ;
; -8.187 ; regB[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -3.269     ; 4.579      ;
; -8.186 ; regW[2]   ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -2.607     ; 4.893      ;
; -8.161 ; carryIn   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -2.792     ; 4.690      ;
; -8.151 ; regB[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -3.626     ; 4.488      ;
; -8.131 ; regB[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -3.473     ; 4.510      ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'regOp[1]'                                                                                            ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -8.849 ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.306     ; 3.903      ;
; -8.775 ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.306     ; 3.829      ;
; -8.714 ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.267     ; 3.807      ;
; -8.653 ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.265     ; 3.748      ;
; -8.621 ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.237     ; 3.744      ;
; -8.353 ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.268     ; 3.445      ;
; -8.339 ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.303     ; 3.396      ;
; -8.170 ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.266     ; 3.264      ;
; -8.071 ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.528     ; 3.903      ;
; -7.997 ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.528     ; 3.829      ;
; -7.936 ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.489     ; 3.807      ;
; -7.875 ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.487     ; 3.748      ;
; -7.843 ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.459     ; 3.744      ;
; -7.575 ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.490     ; 3.445      ;
; -7.561 ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.525     ; 3.396      ;
; -7.395 ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -4.417     ; 2.338      ;
; -7.392 ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.488     ; 3.264      ;
; -6.617 ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -3.639     ; 2.338      ;
; -4.608 ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -1.400     ; 2.568      ;
; -3.830 ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.622     ; 2.568      ;
; -0.429 ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.500        ; 1.854      ; 1.643      ;
; 0.071  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 1.000        ; 1.854      ; 1.643      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'rst'                                                                                                                       ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -6.659 ; regB[1]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.308      ; 6.276      ;
; -6.649 ; regOp[0]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.302      ; 6.260      ;
; -6.628 ; regW[2]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.413      ; 6.350      ;
; -6.554 ; regW[3]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.413      ; 6.276      ;
; -6.551 ; regW[0]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.452      ; 6.312      ;
; -6.483 ; regW[1]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.454      ; 6.246      ;
; -6.443 ; regW[4]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.482      ; 6.234      ;
; -6.385 ; regB[3]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.305      ; 5.999      ;
; -6.291 ; regB[2]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.308      ; 5.908      ;
; -6.288 ; regW[5]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.451      ; 6.048      ;
; -6.259 ; regW[6]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.453      ; 6.021      ;
; -6.253 ; regB[4]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.343      ; 5.905      ;
; -6.220 ; regB[5]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.303      ; 5.832      ;
; -6.156 ; carryIn            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.995      ; 6.460      ;
; -6.139 ; regB[6]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.305      ; 5.753      ;
; -5.881 ; regB[1]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.086      ; 6.276      ;
; -5.871 ; regOp[0]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.080      ; 6.260      ;
; -5.850 ; regW[2]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.191      ; 6.350      ;
; -5.776 ; regW[3]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.191      ; 6.276      ;
; -5.773 ; regW[0]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.230      ; 6.312      ;
; -5.705 ; regW[1]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.232      ; 6.246      ;
; -5.665 ; regW[4]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.260      ; 6.234      ;
; -5.607 ; regB[3]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.083      ; 5.999      ;
; -5.545 ; regB[7]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.308      ; 5.162      ;
; -5.513 ; regB[2]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.086      ; 5.908      ;
; -5.510 ; regW[5]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.229      ; 6.048      ;
; -5.481 ; regW[6]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.231      ; 6.021      ;
; -5.475 ; regB[4]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.121      ; 5.905      ;
; -5.442 ; regB[5]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.081      ; 5.832      ;
; -5.427 ; regW[7]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.416      ; 5.152      ;
; -5.361 ; regB[6]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.083      ; 5.753      ;
; -4.767 ; regB[7]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.086      ; 5.162      ;
; -4.649 ; regW[7]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 1.194      ; 5.152      ;
; -4.154 ; regOp[3]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 3.318      ; 6.781      ;
; -4.127 ; regAddress[2]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 4.071      ;
; -4.107 ; regOp[2]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 3.319      ; 6.735      ;
; -3.881 ; regAddress[2]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 3.846      ;
; -3.763 ; regAddress[0]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 3.707      ;
; -3.747 ; regAddress[1]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 3.691      ;
; -3.684 ; regAddress[3]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.015     ; 3.627      ;
; -3.664 ; regAddress[2]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.002      ; 3.662      ;
; -3.522 ; regS[3]            ; regOp[3]                        ; rst                    ; rst         ; 1.000        ; -2.868     ; 0.478      ;
; -3.506 ; regS[2]            ; regOp[2]                        ; rst                    ; rst         ; 1.000        ; -2.868     ; 0.480      ;
; -3.376 ; regOp[3]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 4.096      ; 6.781      ;
; -3.329 ; regOp[2]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 4.097      ; 6.735      ;
; -3.313 ; regAddress[2]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.013     ; 3.296      ;
; -3.198 ; regAddress[3]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.015     ; 3.183      ;
; -3.127 ; regAddress[1]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 3.113      ;
; -3.042 ; regAddress[2]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 3.028      ;
; -2.930 ; regAddress[1]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.013     ; 2.913      ;
; -2.928 ; regAddress[0]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.914      ;
; -2.885 ; regAddress[0]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.013     ; 2.868      ;
; -2.872 ; regAddress[1]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.023     ; 2.841      ;
; -2.865 ; regAddress[3]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.847      ;
; -2.792 ; regW[0]            ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 0.301      ; 3.051      ;
; -2.758 ; regAddress[0]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.023     ; 2.727      ;
; -2.744 ; regS[3]            ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 1.000        ; -2.090     ; 0.478      ;
; -2.728 ; regS[2]            ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 1.000        ; -2.090     ; 0.480      ;
; -2.681 ; regAddress[3]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.015     ; 2.862      ;
; -2.680 ; regAddress[3]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.018     ; 2.861      ;
; -2.679 ; regAddress[3]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.015     ; 2.860      ;
; -2.662 ; regW[7]            ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 0.265      ; 2.885      ;
; -2.613 ; regAddress[1]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.795      ;
; -2.610 ; regAddress[1]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.792      ;
; -2.609 ; regAddress[1]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.017     ; 2.791      ;
; -2.599 ; regAddress[1]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.002      ; 2.771      ;
; -2.551 ; regAddress[0]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 2.516      ;
; -2.532 ; regAddress[2]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.017     ; 2.714      ;
; -2.528 ; regAddress[2]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.710      ;
; -2.528 ; regAddress[2]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.710      ;
; -2.518 ; regAddress[1]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.020     ; 2.493      ;
; -2.469 ; regAddress[1]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 2.434      ;
; -2.459 ; regAddress[3]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 2.630      ;
; -2.442 ; regAddress[0]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.002      ; 2.614      ;
; -2.434 ; regAddress[0]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.020     ; 2.409      ;
; -2.415 ; regAddress[0]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.017     ; 2.597      ;
; -2.414 ; regAddress[0]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.596      ;
; -2.411 ; regAddress[0]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.014     ; 2.593      ;
; -2.383 ; regAddress[3]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.024     ; 2.351      ;
; -2.331 ; regAddress[0]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.002      ; 2.329      ;
; -2.287 ; regAddress[2]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.002      ; 2.459      ;
; -2.275 ; regOp[0]           ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 0.151      ; 2.384      ;
; -2.249 ; regAddress[1]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.002      ; 2.247      ;
; -2.179 ; regAddress[2]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.023     ; 2.148      ;
; -2.036 ; regAddress[3]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.021     ; 2.010      ;
; -2.014 ; regW[0]            ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 1.079      ; 3.051      ;
; -1.997 ; regAddress[3]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 1.961      ;
; -1.884 ; regW[7]            ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 1.043      ; 2.885      ;
; -1.831 ; regAddress[2]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.020     ; 1.806      ;
; -1.777 ; regAddress[3]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 1.774      ;
; -1.528 ; CoBuffer           ; carryIn                         ; rst                    ; rst         ; 1.000        ; -0.844     ; 0.866      ;
; -1.497 ; regOp[0]           ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 0.929      ; 2.384      ;
; -1.206 ; estado.progMemRead ; prox_estado.moveToRegisters_588 ; clk                    ; rst         ; 1.000        ; -0.179     ; 0.833      ;
; -1.152 ; regOp[3]           ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 3.167      ; 4.277      ;
; -1.105 ; regOp[2]           ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 3.168      ; 4.231      ;
; -1.033 ; IR[11]             ; regS[3]                         ; rst                    ; rst         ; 1.000        ; 0.669      ; 1.698      ;
; -0.718 ; regS[1]            ; regOp[1]                        ; rst                    ; rst         ; 1.000        ; -0.003     ; 0.473      ;
; -0.501 ; regS[0]            ; regOp[0]                        ; rst                    ; rst         ; 1.000        ; 0.149      ; 0.482      ;
; -0.486 ; IR[10]             ; regS[2]                         ; rst                    ; rst         ; 1.000        ; 0.671      ; 1.106      ;
; -0.374 ; regOp[3]           ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 3.945      ; 4.277      ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'estado.moveToRegisters'                                                                                   ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -4.316 ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.470     ; 1.527      ;
; -4.300 ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 1.000        ; -3.646     ; 0.478      ;
; -4.284 ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 1.000        ; -3.646     ; 0.480      ;
; -4.271 ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.471     ; 1.481      ;
; -4.257 ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.470     ; 1.482      ;
; -4.074 ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.469     ; 1.292      ;
; -4.074 ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.470     ; 1.285      ;
; -4.066 ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.470     ; 1.291      ;
; -3.931 ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.470     ; 1.142      ;
; -3.921 ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.469     ; 1.139      ;
; -3.919 ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.470     ; 1.144      ;
; -3.883 ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.677     ; 1.044      ;
; -3.522 ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -2.868     ; 0.478      ;
; -3.506 ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -2.868     ; 0.480      ;
; -1.811 ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.109     ; 1.698      ;
; -1.496 ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.781     ; 0.473      ;
; -1.279 ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.629     ; 0.482      ;
; -1.264 ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.107     ; 1.106      ;
; -0.982 ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.110     ; 0.868      ;
; -0.718 ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -0.003     ; 0.473      ;
; -0.672 ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.007      ; 0.484      ;
; -0.670 ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.023      ; 0.901      ;
; -0.649 ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.032      ; 0.479      ;
; -0.645 ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.033      ; 0.476      ;
; -0.631 ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.044      ; 0.480      ;
; -0.621 ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.020      ; 0.479      ;
; -0.609 ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.033      ; 0.480      ;
; -0.609 ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 1.000        ; 0.021      ; 0.472      ;
; -0.501 ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.149      ; 0.482      ;
; 0.579  ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.343      ; 1.431      ;
; 1.126  ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.607      ; 1.473      ;
; 1.135  ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.356      ; 1.210      ;
; 1.144  ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.343      ; 1.187      ;
; 1.231  ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.432      ; 1.196      ;
; 1.272  ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.555      ; 1.212      ;
; 1.698  ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.587      ; 0.828      ;
; 1.790  ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 2.674      ; 0.860      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                 ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.448 ; prox_estado.moveToRegisters_588 ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; -0.185     ; 1.301      ;
; -0.005 ; prox_estado.progMemRead_594     ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 0.113      ; 1.156      ;
; 0.617  ; prox_estado.resultToW_582       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; -0.325     ; 0.096      ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'rst'                                                                                                                            ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -3.395 ; regOp[1]               ; CoBuffer                        ; regOp[1]               ; rst         ; 0.000        ; 6.422      ; 3.027      ;
; -2.972 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; 0.000        ; 6.573      ; 3.601      ;
; -2.895 ; regOp[1]               ; CoBuffer                        ; regOp[1]               ; rst         ; -0.500       ; 6.422      ; 3.027      ;
; -2.592 ; W[4]                   ; regW[4]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.452      ; 0.860      ;
; -2.537 ; W[7]                   ; regW[7]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.365      ; 0.828      ;
; -2.472 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; -0.500       ; 6.573      ; 3.601      ;
; -2.121 ; W[1]                   ; regW[1]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.333      ; 1.212      ;
; -2.031 ; estado.moveToRegisters ; prox_estado.resultToW_582       ; estado.moveToRegisters ; rst         ; 0.000        ; 2.575      ; 0.821      ;
; -2.014 ; W[2]                   ; regW[2]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.210      ; 1.196      ;
; -1.959 ; estado.resultToW       ; prox_estado.progMemRead_594     ; estado.resultToW       ; rst         ; 0.000        ; 2.501      ; 0.819      ;
; -1.934 ; W[6]                   ; regW[6]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.121      ; 1.187      ;
; -1.924 ; W[5]                   ; regW[5]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.134      ; 1.210      ;
; -1.912 ; W[3]                   ; regW[3]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.385      ; 1.473      ;
; -1.803 ; PC[0]                  ; regAddress[0]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 2.677      ; 0.874      ;
; -1.690 ; W[0]                   ; regW[0]                         ; estado.resultToW       ; rst         ; 0.000        ; 3.121      ; 1.431      ;
; -1.646 ; PC[2]                  ; regAddress[2]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 2.470      ; 0.824      ;
; -1.637 ; PC[1]                  ; regAddress[1]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 2.469      ; 0.832      ;
; -1.531 ; estado.moveToRegisters ; prox_estado.resultToW_582       ; estado.moveToRegisters ; rst         ; -0.500       ; 2.575      ; 0.821      ;
; -1.459 ; estado.resultToW       ; prox_estado.progMemRead_594     ; estado.resultToW       ; rst         ; -0.500       ; 2.501      ; 0.819      ;
; -1.372 ; PC[3]                  ; regAddress[3]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 2.471      ; 1.099      ;
; -1.354 ; CoBuffer               ; carryIn                         ; estado.resultToW       ; rst         ; 0.000        ; 2.220      ; 0.866      ;
; -0.698 ; ALU_8:XALU|preR[8]     ; CoBuffer                        ; regOp[1]               ; rst         ; -0.500       ; 4.568      ; 3.370      ;
; -0.666 ; regOp[2]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 4.097      ; 3.431      ;
; -0.445 ; regS[0]                ; regOp[0]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.927      ; 0.482      ;
; -0.342 ; IR[5]                  ; regB[5]                         ; rst                    ; rst         ; 0.000        ; 0.822      ; 0.480      ;
; -0.335 ; IR[1]                  ; regB[1]                         ; rst                    ; rst         ; 0.000        ; 0.811      ; 0.476      ;
; -0.331 ; IR[7]                  ; regB[7]                         ; rst                    ; rst         ; 0.000        ; 0.810      ; 0.479      ;
; -0.331 ; IR[2]                  ; regB[2]                         ; rst                    ; rst         ; 0.000        ; 0.811      ; 0.480      ;
; -0.327 ; IR[6]                  ; regB[6]                         ; rst                    ; rst         ; 0.000        ; 0.799      ; 0.472      ;
; -0.319 ; IR[3]                  ; regB[3]                         ; rst                    ; rst         ; 0.000        ; 0.798      ; 0.479      ;
; -0.302 ; regS[1]                ; regOp[1]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.775      ; 0.473      ;
; -0.301 ; IR[4]                  ; regB[4]                         ; rst                    ; rst         ; 0.000        ; 0.785      ; 0.484      ;
; -0.104 ; regOp[3]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 4.096      ; 3.992      ;
; -0.078 ; regOp[3]               ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 3.945      ; 3.867      ;
; 0.100  ; IR[9]                  ; regS[1]                         ; rst                    ; rst         ; 0.000        ; 0.801      ; 0.901      ;
; 0.112  ; regOp[2]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 3.319      ; 3.431      ;
; 0.200  ; IR[8]                  ; regS[0]                         ; rst                    ; rst         ; 0.000        ; 0.668      ; 0.868      ;
; 0.206  ; regOp[2]               ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 3.946      ; 4.152      ;
; 0.333  ; regS[0]                ; regOp[0]                        ; rst                    ; rst         ; 0.000        ; 0.149      ; 0.482      ;
; 0.435  ; IR[10]                 ; regS[2]                         ; rst                    ; rst         ; 0.000        ; 0.671      ; 1.106      ;
; 0.476  ; regS[1]                ; regOp[1]                        ; rst                    ; rst         ; 0.000        ; -0.003     ; 0.473      ;
; 0.674  ; regOp[3]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 3.318      ; 3.992      ;
; 0.700  ; regOp[3]               ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 3.167      ; 3.867      ;
; 0.984  ; regOp[2]               ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 3.168      ; 4.152      ;
; 1.012  ; estado.progMemRead     ; prox_estado.moveToRegisters_588 ; clk                    ; rst         ; 0.000        ; -0.179     ; 0.833      ;
; 1.029  ; IR[11]                 ; regS[3]                         ; rst                    ; rst         ; 0.000        ; 0.669      ; 1.698      ;
; 1.455  ; regOp[0]               ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.929      ; 2.384      ;
; 1.710  ; CoBuffer               ; carryIn                         ; rst                    ; rst         ; 0.000        ; -0.844     ; 0.866      ;
; 1.773  ; regAddress[3]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 1.774      ;
; 1.826  ; regAddress[2]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.020     ; 1.806      ;
; 1.842  ; regW[7]                ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 1.043      ; 2.885      ;
; 1.961  ; regAddress[3]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; 0.000      ; 1.961      ;
; 1.972  ; regW[0]                ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 1.079      ; 3.051      ;
; 2.031  ; regAddress[3]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.021     ; 2.010      ;
; 2.128  ; regW[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.260      ; 3.388      ;
; 2.135  ; carryIn                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.995      ; 3.130      ;
; 2.171  ; regAddress[2]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.023     ; 2.148      ;
; 2.233  ; regOp[0]               ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 0.151      ; 2.384      ;
; 2.245  ; regAddress[1]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; 0.002      ; 2.247      ;
; 2.327  ; regAddress[0]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; 0.002      ; 2.329      ;
; 2.375  ; regAddress[3]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.024     ; 2.351      ;
; 2.412  ; regOp[0]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.080      ; 3.492      ;
; 2.425  ; regW[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.232      ; 3.657      ;
; 2.429  ; regAddress[0]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.020     ; 2.409      ;
; 2.433  ; regAddress[1]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 2.434      ;
; 2.457  ; regAddress[2]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.002      ; 2.459      ;
; 2.513  ; regAddress[1]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.020     ; 2.493      ;
; 2.515  ; regAddress[0]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 2.516      ;
; 2.568  ; regS[3]                ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 0.000        ; -2.090     ; 0.478      ;
; 2.570  ; regS[2]                ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 0.000        ; -2.090     ; 0.480      ;
; 2.607  ; regAddress[0]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.593      ;
; 2.610  ; regAddress[0]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.596      ;
; 2.612  ; regAddress[0]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.002      ; 2.614      ;
; 2.614  ; regAddress[0]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.017     ; 2.597      ;
; 2.620  ; regW[7]                ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 0.265      ; 2.885      ;
; 2.629  ; regAddress[3]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 2.630      ;
; 2.724  ; regAddress[2]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.710      ;
; 2.724  ; regAddress[2]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.710      ;
; 2.731  ; regAddress[2]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.017     ; 2.714      ;
; 2.750  ; regAddress[0]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.023     ; 2.727      ;
; 2.750  ; regW[0]                ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 0.301      ; 3.051      ;
; 2.763  ; regW[0]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.230      ; 3.993      ;
; 2.769  ; regAddress[1]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.002      ; 2.771      ;
; 2.806  ; regAddress[1]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.792      ;
; 2.808  ; regAddress[1]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.017     ; 2.791      ;
; 2.809  ; regAddress[1]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.795      ;
; 2.861  ; regAddress[3]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.847      ;
; 2.864  ; regAddress[1]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.023     ; 2.841      ;
; 2.873  ; regW[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.191      ; 4.064      ;
; 2.875  ; regAddress[3]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.015     ; 2.860      ;
; 2.877  ; regAddress[3]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.015     ; 2.862      ;
; 2.879  ; regAddress[3]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.018     ; 2.861      ;
; 2.881  ; regAddress[0]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.013     ; 2.868      ;
; 2.906  ; regW[4]                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.482      ; 3.388      ;
; 2.926  ; regAddress[1]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.013     ; 2.913      ;
; 2.928  ; regAddress[0]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 2.914      ;
; 2.982  ; regW[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.191      ; 4.173      ;
; 3.042  ; regAddress[2]          ; IR[1]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 3.028      ;
; 3.075  ; regB[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.121      ; 4.196      ;
; 3.104  ; regW[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 1.194      ; 4.298      ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'estado.moveToRegisters'                                                                                    ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -1.814 ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.674      ; 0.860      ;
; -1.759 ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.587      ; 0.828      ;
; -1.343 ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.555      ; 1.212      ;
; -1.236 ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.432      ; 1.196      ;
; -1.156 ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.343      ; 1.187      ;
; -1.146 ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.356      ; 1.210      ;
; -1.134 ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.607      ; 1.473      ;
; -0.912 ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 2.343      ; 1.431      ;
; 0.333  ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.149      ; 0.482      ;
; 0.436  ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.044      ; 0.480      ;
; 0.443  ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.033      ; 0.476      ;
; 0.447  ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.032      ; 0.479      ;
; 0.447  ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.033      ; 0.480      ;
; 0.451  ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.021      ; 0.472      ;
; 0.459  ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.020      ; 0.479      ;
; 0.476  ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -0.003     ; 0.473      ;
; 0.477  ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.007      ; 0.484      ;
; 0.878  ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; 0.023      ; 0.901      ;
; 0.978  ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.110     ; 0.868      ;
; 1.111  ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.629     ; 0.482      ;
; 1.213  ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.107     ; 1.106      ;
; 1.254  ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.781     ; 0.473      ;
; 1.807  ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.109     ; 1.698      ;
; 3.346  ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -2.868     ; 0.478      ;
; 3.348  ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -2.868     ; 0.480      ;
; 3.608  ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.469     ; 1.139      ;
; 3.612  ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.470     ; 1.142      ;
; 3.614  ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.470     ; 1.144      ;
; 3.721  ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.677     ; 1.044      ;
; 3.755  ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.470     ; 1.285      ;
; 3.761  ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.469     ; 1.292      ;
; 3.761  ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.470     ; 1.291      ;
; 3.952  ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.471     ; 1.481      ;
; 3.952  ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.470     ; 1.482      ;
; 3.997  ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.470     ; 1.527      ;
; 4.124  ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 0.000        ; -3.646     ; 0.478      ;
; 4.126  ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 0.000        ; -3.646     ; 0.480      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'estado.resultToW'                                                                                           ;
+--------+--------------------+------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node    ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+------------+------------------------+------------------+--------------+------------+------------+
; -0.378 ; regOp[1]           ; W[5]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.988      ; 2.610      ;
; -0.331 ; regOp[1]           ; CoBuffer   ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.358      ; 3.027      ;
; -0.215 ; regOp[1]           ; W[6]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.999      ; 2.784      ;
; -0.060 ; regOp[1]           ; W[0]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.000      ; 2.940      ;
; 0.020  ; regOp[1]           ; W[2]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.950      ; 2.970      ;
; 0.022  ; regOp[1]           ; W[3]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.775      ; 2.797      ;
; 0.092  ; regOp[1]           ; Zout$latch ; regOp[1]               ; estado.resultToW ; 0.000        ; 3.509      ; 3.601      ;
; 0.122  ; regOp[1]           ; W[5]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.988      ; 2.610      ;
; 0.169  ; regOp[1]           ; CoBuffer   ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.358      ; 3.027      ;
; 0.174  ; regOp[1]           ; W[7]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.792      ; 2.966      ;
; 0.285  ; regOp[1]           ; W[6]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.999      ; 2.784      ;
; 0.302  ; regOp[1]           ; W[4]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.639      ; 2.941      ;
; 0.440  ; regOp[1]           ; W[0]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.000      ; 2.940      ;
; 0.520  ; regOp[1]           ; W[2]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.950      ; 2.970      ;
; 0.522  ; regOp[1]           ; W[3]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.775      ; 2.797      ;
; 0.553  ; regOp[1]           ; W[1]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 2.786      ; 3.339      ;
; 0.592  ; regOp[1]           ; Zout$latch ; regOp[1]               ; estado.resultToW ; -0.500       ; 3.509      ; 3.601      ;
; 0.674  ; regOp[1]           ; W[7]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.792      ; 2.966      ;
; 0.802  ; regOp[1]           ; W[4]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.639      ; 2.941      ;
; 1.053  ; regOp[1]           ; W[1]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 2.786      ; 3.339      ;
; 1.928  ; regOp[2]           ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.512      ; 2.440      ;
; 2.091  ; regOp[2]           ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.523      ; 2.614      ;
; 2.246  ; regOp[2]           ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.524      ; 2.770      ;
; 2.326  ; regOp[2]           ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.474      ; 2.800      ;
; 2.328  ; regOp[2]           ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.299      ; 2.627      ;
; 2.366  ; ALU_8:XALU|preR[8] ; CoBuffer   ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.504      ; 3.370      ;
; 2.398  ; regOp[2]           ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.033      ; 3.431      ;
; 2.490  ; regOp[3]           ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.511      ; 3.001      ;
; 2.608  ; regOp[2]           ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.163      ; 2.771      ;
; 2.615  ; regOp[2]           ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.316      ; 2.931      ;
; 2.653  ; regOp[3]           ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.522      ; 3.175      ;
; 2.706  ; regOp[2]           ; W[5]       ; rst                    ; estado.resultToW ; 0.000        ; -0.266     ; 2.440      ;
; 2.808  ; regOp[3]           ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.523      ; 3.331      ;
; 2.859  ; regOp[2]           ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.310      ; 3.169      ;
; 2.869  ; regOp[2]           ; W[6]       ; rst                    ; estado.resultToW ; 0.000        ; -0.255     ; 2.614      ;
; 2.888  ; regOp[3]           ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.473      ; 3.361      ;
; 2.890  ; regOp[3]           ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.298      ; 3.188      ;
; 2.960  ; regOp[3]           ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 1.032      ; 3.992      ;
; 2.986  ; regOp[3]           ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.881      ; 3.867      ;
; 3.024  ; regOp[2]           ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; -0.254     ; 2.770      ;
; 3.104  ; regOp[2]           ; W[2]       ; rst                    ; estado.resultToW ; 0.000        ; -0.304     ; 2.800      ;
; 3.106  ; regOp[2]           ; W[3]       ; rst                    ; estado.resultToW ; 0.000        ; -0.479     ; 2.627      ;
; 3.170  ; regOp[3]           ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.162      ; 3.332      ;
; 3.176  ; regOp[2]           ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; 0.255      ; 3.431      ;
; 3.177  ; regOp[3]           ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.315      ; 3.492      ;
; 3.268  ; regOp[3]           ; W[5]       ; rst                    ; estado.resultToW ; 0.000        ; -0.267     ; 3.001      ;
; 3.270  ; regOp[2]           ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.882      ; 4.152      ;
; 3.386  ; regOp[2]           ; W[4]       ; rst                    ; estado.resultToW ; 0.000        ; -0.615     ; 2.771      ;
; 3.393  ; regOp[2]           ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; -0.462     ; 2.931      ;
; 3.421  ; regOp[3]           ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.309      ; 3.730      ;
; 3.431  ; regOp[3]           ; W[6]       ; rst                    ; estado.resultToW ; 0.000        ; -0.256     ; 3.175      ;
; 3.586  ; regOp[3]           ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; -0.255     ; 3.331      ;
; 3.637  ; regOp[2]           ; W[1]       ; rst                    ; estado.resultToW ; 0.000        ; -0.468     ; 3.169      ;
; 3.666  ; regOp[3]           ; W[2]       ; rst                    ; estado.resultToW ; 0.000        ; -0.305     ; 3.361      ;
; 3.668  ; regOp[3]           ; W[3]       ; rst                    ; estado.resultToW ; 0.000        ; -0.480     ; 3.188      ;
; 3.738  ; regOp[3]           ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; 0.254      ; 3.992      ;
; 3.764  ; regOp[3]           ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; 0.103      ; 3.867      ;
; 3.948  ; regOp[3]           ; W[4]       ; rst                    ; estado.resultToW ; 0.000        ; -0.616     ; 3.332      ;
; 3.955  ; regOp[3]           ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; -0.463     ; 3.492      ;
; 4.048  ; regOp[2]           ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; 0.104      ; 4.152      ;
; 4.199  ; regOp[3]           ; W[1]       ; rst                    ; estado.resultToW ; 0.000        ; -0.469     ; 3.730      ;
; 4.519  ; regOp[0]           ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.135     ; 2.384      ;
; 4.647  ; regW[4]            ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.538     ; 2.109      ;
; 4.813  ; carryIn            ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; -2.578     ; 2.235      ;
; 4.859  ; regW[4]            ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.325     ; 2.534      ;
; 4.906  ; regW[7]            ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.021     ; 2.885      ;
; 5.036  ; regW[0]            ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.985     ; 3.051      ;
; 5.083  ; regOp[0]           ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.701     ; 2.382      ;
; 5.090  ; regOp[0]           ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.493     ; 2.597      ;
; 5.192  ; regW[4]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.804     ; 3.388      ;
; 5.199  ; carryIn            ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; -2.069     ; 3.130      ;
; 5.295  ; regW[1]            ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.391     ; 2.904      ;
; 5.297  ; regOp[0]           ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; -2.913     ; 2.384      ;
; 5.392  ; regW[2]            ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.607     ; 2.785      ;
; 5.425  ; regW[4]            ; W[3]       ; rst                    ; estado.resultToW ; 0.000        ; -3.316     ; 2.109      ;
; 5.476  ; regOp[0]           ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.984     ; 3.492      ;
; 5.489  ; regW[1]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.832     ; 3.657      ;
; 5.563  ; regW[1]            ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.341     ; 3.222      ;
; 5.637  ; regW[4]            ; W[5]       ; rst                    ; estado.resultToW ; 0.000        ; -3.103     ; 2.534      ;
; 5.684  ; regW[7]            ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; -2.799     ; 2.885      ;
; 5.690  ; regOp[0]           ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.718     ; 2.972      ;
; 5.775  ; regW[0]            ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.557     ; 3.218      ;
; 5.789  ; regW[3]            ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.743     ; 3.046      ;
; 5.814  ; regW[0]            ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; -2.763     ; 3.051      ;
; 5.827  ; regW[0]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.834     ; 3.993      ;
; 5.831  ; regW[7]            ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.587     ; 3.244      ;
; 5.840  ; regW[4]            ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.674     ; 3.166      ;
; 5.861  ; regOp[0]           ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; -3.479     ; 2.382      ;
; 5.861  ; regW[7]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.380     ; 3.481      ;
; 5.868  ; regOp[0]           ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; -3.271     ; 2.597      ;
; 5.882  ; regB[4]            ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.813     ; 3.069      ;
; 5.885  ; carryIn            ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; -2.786     ; 3.099      ;
; 5.902  ; regOp[0]           ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.505     ; 3.397      ;
; 5.937  ; regW[2]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.873     ; 4.064      ;
; 5.950  ; regB[7]            ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.695     ; 3.255      ;
; 5.959  ; regW[3]            ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.432     ; 3.527      ;
; 5.970  ; regW[4]            ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; -2.582     ; 3.388      ;
; 5.979  ; regW[5]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.345     ; 3.634      ;
; 6.027  ; regW[6]            ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -2.550     ; 3.477      ;
; 6.046  ; regW[3]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.873     ; 4.173      ;
+--------+--------------------+------------+------------------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'regOp[1]'                                                                                             ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -0.211 ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.000        ; 1.854      ; 1.643      ;
; 0.289  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; -0.500       ; 1.854      ; 1.643      ;
; 3.690  ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.622     ; 2.568      ;
; 4.468  ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -1.400     ; 2.568      ;
; 6.477  ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.639     ; 2.338      ;
; 7.073  ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.488     ; 3.085      ;
; 7.156  ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.490     ; 3.166      ;
; 7.248  ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.525     ; 3.223      ;
; 7.255  ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.417     ; 2.338      ;
; 7.443  ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.459     ; 3.484      ;
; 7.528  ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.487     ; 3.541      ;
; 7.644  ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.528     ; 3.616      ;
; 7.709  ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.489     ; 3.720      ;
; 7.721  ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -3.528     ; 3.693      ;
; 7.851  ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.266     ; 3.085      ;
; 7.934  ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.268     ; 3.166      ;
; 8.026  ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.303     ; 3.223      ;
; 8.221  ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.237     ; 3.484      ;
; 8.306  ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.265     ; 3.541      ;
; 8.422  ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.306     ; 3.616      ;
; 8.487  ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.267     ; 3.720      ;
; 8.499  ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -4.306     ; 3.693      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                 ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.135 ; prox_estado.resultToW_582       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; -0.325     ; 0.096      ;
; 0.757 ; prox_estado.progMemRead_594     ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 0.113      ; 1.156      ;
; 1.200 ; prox_estado.moveToRegisters_588 ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; -0.185     ; 1.301      ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'estado.resultToW'                                                                 ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; -1.000 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.500        ; 2.775      ; 2.589      ;
; -0.898 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.500        ; 2.786      ; 2.505      ;
; -0.587 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.500        ; 2.950      ; 2.682      ;
; -0.548 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.500        ; 2.999      ; 2.708      ;
; -0.500 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 1.000        ; 2.775      ; 2.589      ;
; -0.487 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.500        ; 2.639      ; 2.589      ;
; -0.482 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.500        ; 2.988      ; 2.640      ;
; -0.450 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.500        ; 2.792      ; 2.594      ;
; -0.398 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 1.000        ; 2.786      ; 2.505      ;
; -0.339 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.500        ; 3.000      ; 2.526      ;
; -0.087 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 1.000        ; 2.950      ; 2.682      ;
; -0.048 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 1.000        ; 2.999      ; 2.708      ;
; 0.013  ; rst       ; W[4]    ; rst          ; estado.resultToW ; 1.000        ; 2.639      ; 2.589      ;
; 0.018  ; rst       ; W[5]    ; rst          ; estado.resultToW ; 1.000        ; 2.988      ; 2.640      ;
; 0.050  ; rst       ; W[7]    ; rst          ; estado.resultToW ; 1.000        ; 2.792      ; 2.594      ;
; 0.161  ; rst       ; W[0]    ; rst          ; estado.resultToW ; 1.000        ; 3.000      ; 2.526      ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'clk'                                                                                       ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.225 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.500        ; 2.614      ; 2.927      ;
; 0.261 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.500        ; 2.250      ; 2.527      ;
; 0.261 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.500        ; 2.250      ; 2.527      ;
; 0.725 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 2.614      ; 2.927      ;
; 0.761 ; rst       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; 2.250      ; 2.527      ;
; 0.761 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; 2.250      ; 2.527      ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Slow Model Recovery: 'estado.moveToRegisters'                                                                ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; 0.233 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.500        ; 2.998      ; 1.946      ;
; 0.240 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.500        ; 2.999      ; 1.946      ;
; 0.243 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.500        ; 2.791      ; 1.886      ;
; 0.247 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.500        ; 2.998      ; 1.946      ;
; 0.733 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 1.000        ; 2.998      ; 1.946      ;
; 0.740 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 1.000        ; 2.999      ; 1.946      ;
; 0.743 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 1.000        ; 2.791      ; 1.886      ;
; 0.747 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 1.000        ; 2.998      ; 1.946      ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'estado.moveToRegisters'                                                                  ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; -1.053 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.000        ; 2.999      ; 1.946      ;
; -1.052 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.000        ; 2.998      ; 1.946      ;
; -1.052 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.000        ; 2.998      ; 1.946      ;
; -0.905 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.000        ; 2.791      ; 1.886      ;
; -0.553 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; -0.500       ; 2.999      ; 1.946      ;
; -0.552 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; -0.500       ; 2.998      ; 1.946      ;
; -0.552 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; -0.500       ; 2.998      ; 1.946      ;
; -0.405 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; -0.500       ; 2.791      ; 1.886      ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'estado.resultToW'                                                                  ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; -0.474 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.000        ; 3.000      ; 2.526      ;
; -0.348 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.000        ; 2.988      ; 2.640      ;
; -0.291 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.000        ; 2.999      ; 2.708      ;
; -0.281 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.000        ; 2.786      ; 2.505      ;
; -0.268 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.000        ; 2.950      ; 2.682      ;
; -0.198 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.000        ; 2.792      ; 2.594      ;
; -0.186 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.000        ; 2.775      ; 2.589      ;
; -0.050 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.000        ; 2.639      ; 2.589      ;
; 0.026  ; rst       ; W[0]    ; rst          ; estado.resultToW ; -0.500       ; 3.000      ; 2.526      ;
; 0.152  ; rst       ; W[5]    ; rst          ; estado.resultToW ; -0.500       ; 2.988      ; 2.640      ;
; 0.209  ; rst       ; W[6]    ; rst          ; estado.resultToW ; -0.500       ; 2.999      ; 2.708      ;
; 0.219  ; rst       ; W[1]    ; rst          ; estado.resultToW ; -0.500       ; 2.786      ; 2.505      ;
; 0.232  ; rst       ; W[2]    ; rst          ; estado.resultToW ; -0.500       ; 2.950      ; 2.682      ;
; 0.302  ; rst       ; W[7]    ; rst          ; estado.resultToW ; -0.500       ; 2.792      ; 2.594      ;
; 0.314  ; rst       ; W[3]    ; rst          ; estado.resultToW ; -0.500       ; 2.775      ; 2.589      ;
; 0.450  ; rst       ; W[4]    ; rst          ; estado.resultToW ; -0.500       ; 2.639      ; 2.589      ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------+
; Slow Model Removal: 'clk'                                                                                         ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.009 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; 2.250      ; 2.527      ;
; -0.009 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; 2.250      ; 2.527      ;
; 0.027  ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 2.614      ; 2.927      ;
; 0.491  ; rst       ; estado.resultToW       ; rst          ; clk         ; -0.500       ; 2.250      ; 2.527      ;
; 0.491  ; rst       ; estado.moveToRegisters ; rst          ; clk         ; -0.500       ; 2.250      ; 2.527      ;
; 0.527  ; rst       ; estado.progMemRead     ; rst          ; clk         ; -0.500       ; 2.614      ; 2.927      ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                     ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; clk   ; Rise       ; clk                        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Fall       ; estado.progMemRead         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Fall       ; estado.progMemRead         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Fall       ; estado.resultToW           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Fall       ; estado.resultToW           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.resultToW|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.resultToW|clk       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'rst'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; rst   ; Rise       ; rst                                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; CoBuffer                              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; CoBuffer                              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; CoBuffer|datad                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; CoBuffer|datad                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0|combout                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0|combout                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0|dataa                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0|dataa                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; carryIn                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; carryIn                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn|datac                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn|datac                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0clkctrl|inclk[0]             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0clkctrl|inclk[0]             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0clkctrl|outclk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0clkctrl|outclk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0|datab                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0|datab                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.moveToRegisters_588       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.moveToRegisters_588       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.moveToRegisters_588|datac ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.moveToRegisters_588|datac ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.progMemRead_594           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.progMemRead_594           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.progMemRead_594|dataa     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.progMemRead_594|dataa     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.resultToW_582             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.resultToW_582             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.resultToW_582|dataa       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.resultToW_582|dataa       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[0]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[0]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[1]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[1]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[2]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[2]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[3]|datad                   ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'estado.moveToRegisters'                                                                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                  ; Clock Edge ; Target                                  ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[0]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[0]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[1]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[1]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[2]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[2]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[3]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[3]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'estado.resultToW'                                                                           ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock            ; Clock Edge ; Target                            ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; CoBuffer                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; CoBuffer                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; CoBuffer|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; CoBuffer|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[1]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[1]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[2]|datab                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[2]|datab                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[4]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[4]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[6]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[6]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[7]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[7]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0clkctrl|inclk[0]            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0clkctrl|inclk[0]            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0clkctrl|outclk              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0clkctrl|outclk              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0|combout                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0|combout                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0|datad                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0|datad                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'regOp[1]'                                                             ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~0|combout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~0|combout ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~0|datac   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~0|datac   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; regOp[1]|combout    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; regOp[1]|combout    ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+


+---------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                             ;
+------------------+------------------------+--------+--------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise   ; Fall   ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+--------+--------+------------+------------------------+
; currentState[*]  ; clk                    ; 6.936  ; 6.936  ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 6.936  ; 6.936  ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;        ; 4.303  ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;        ; 4.303  ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 4.303  ;        ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 4.303  ;        ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 7.527  ; 7.527  ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 10.591 ; 10.591 ; Fall       ; rst                    ;
+------------------+------------------------+--------+--------+------------+------------------------+


+---------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                     ;
+------------------+------------------------+--------+--------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise   ; Fall   ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+--------+--------+------------+------------------------+
; currentState[*]  ; clk                    ; 6.936  ; 6.936  ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 6.936  ; 6.936  ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;        ; 4.303  ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;        ; 4.303  ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 4.303  ;        ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 4.303  ;        ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 7.527  ; 7.527  ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 10.591 ; 10.591 ; Fall       ; rst                    ;
+------------------+------------------------+--------+--------+------------+------------------------+


+-------------------------------------------------+
; Fast Model Setup Summary                        ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; regOp[1]               ; -3.719 ; -3.719        ;
; estado.resultToW       ; -3.141 ; -27.570       ;
; rst                    ; -1.766 ; -9.884        ;
; estado.moveToRegisters ; -1.716 ; -7.713        ;
; clk                    ; 0.548  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Fast Model Hold Summary                         ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; rst                    ; -2.045 ; -20.412       ;
; estado.moveToRegisters ; -0.767 ; -4.738        ;
; estado.resultToW       ; -0.690 ; -5.639        ;
; clk                    ; -0.090 ; -0.090        ;
; regOp[1]               ; -0.086 ; -0.086        ;
+------------------------+--------+---------------+


+------------------------------------------------+
; Fast Model Recovery Summary                    ;
+------------------------+-------+---------------+
; Clock                  ; Slack ; End Point TNS ;
+------------------------+-------+---------------+
; estado.resultToW       ; 0.338 ; 0.000         ;
; clk                    ; 0.364 ; 0.000         ;
; estado.moveToRegisters ; 0.765 ; 0.000         ;
+------------------------+-------+---------------+


+-------------------------------------------------+
; Fast Model Removal Summary                      ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; estado.moveToRegisters ; -0.738 ; -2.901        ;
; estado.resultToW       ; -0.527 ; -3.523        ;
; clk                    ; -0.011 ; -0.022        ;
+------------------------+--------+---------------+


+-------------------------------------------------+
; Fast Model Minimum Pulse Width Summary          ;
+------------------------+--------+---------------+
; Clock                  ; Slack  ; End Point TNS ;
+------------------------+--------+---------------+
; clk                    ; -1.222 ; -4.222        ;
; rst                    ; -1.222 ; -1.222        ;
; estado.moveToRegisters ; 0.500  ; 0.000         ;
; estado.resultToW       ; 0.500  ; 0.000         ;
; regOp[1]               ; 0.500  ; 0.000         ;
+------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'regOp[1]'                                                                                            ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -3.719 ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.419     ; 1.414      ;
; -3.690 ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.419     ; 1.385      ;
; -3.676 ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.396     ; 1.394      ;
; -3.643 ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.395     ; 1.362      ;
; -3.593 ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.378     ; 1.329      ;
; -3.504 ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.397     ; 1.221      ;
; -3.476 ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.416     ; 1.174      ;
; -3.416 ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.396     ; 1.134      ;
; -3.254 ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.954     ; 1.414      ;
; -3.225 ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.954     ; 1.385      ;
; -3.211 ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.931     ; 1.394      ;
; -3.178 ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.930     ; 1.362      ;
; -3.154 ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -2.447     ; 0.821      ;
; -3.128 ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.913     ; 1.329      ;
; -3.039 ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.932     ; 1.221      ;
; -3.011 ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.951     ; 1.174      ;
; -2.951 ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.931     ; 1.134      ;
; -2.689 ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -1.982     ; 0.821      ;
; -1.526 ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; 0.500        ; -0.709     ; 0.931      ;
; -1.061 ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; 0.500        ; -0.244     ; 0.931      ;
; 0.200  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.500        ; 0.696      ; 0.610      ;
; 0.700  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 1.000        ; 0.696      ; 0.610      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'estado.resultToW'                                                                                 ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node    ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+
; -3.141 ; regB[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.299     ; 2.252      ;
; -3.122 ; regW[0]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.250     ; 2.282      ;
; -3.120 ; regOp[0]  ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.301     ; 2.229      ;
; -3.118 ; regW[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.273     ; 2.255      ;
; -3.089 ; regW[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.273     ; 2.226      ;
; -3.081 ; regW[1]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.249     ; 2.242      ;
; -3.049 ; regB[3]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.302     ; 2.157      ;
; -3.022 ; regW[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.251     ; 2.181      ;
; -3.004 ; regW[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.250     ; 2.164      ;
; -3.001 ; regW[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.232     ; 2.179      ;
; -2.999 ; regB[2]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.299     ; 2.110      ;
; -2.998 ; regB[5]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.301     ; 2.107      ;
; -2.985 ; regB[4]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.278     ; 2.117      ;
; -2.959 ; regW[0]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.506     ; 1.860      ;
; -2.951 ; regB[6]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.302     ; 2.059      ;
; -2.936 ; regOp[0]  ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.487     ; 1.978      ;
; -2.911 ; regOp[0]  ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.557     ; 1.761      ;
; -2.908 ; regB[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.560     ; 1.765      ;
; -2.878 ; regW[0]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.511     ; 1.784      ;
; -2.863 ; regW[2]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.446     ; 1.947      ;
; -2.848 ; regW[1]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.510     ; 1.755      ;
; -2.834 ; regW[3]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.446     ; 1.918      ;
; -2.830 ; carryIn   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -0.941     ; 2.299      ;
; -2.830 ; regW[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.534     ; 1.713      ;
; -2.820 ; regW[0]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.423     ; 1.927      ;
; -2.815 ; regB[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.485     ; 1.859      ;
; -2.807 ; regOp[0]  ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.562     ; 1.662      ;
; -2.801 ; regW[0]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.436     ; 1.894      ;
; -2.788 ; regW[2]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.459     ; 1.858      ;
; -2.787 ; regW[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.505     ; 1.689      ;
; -2.787 ; regW[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.422     ; 1.895      ;
; -2.776 ; regB[1]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.555     ; 1.628      ;
; -2.773 ; regOp[0]  ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.474     ; 1.829      ;
; -2.771 ; regB[1]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.471     ; 1.830      ;
; -2.768 ; regW[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.435     ; 1.862      ;
; -2.768 ; regOp[0]  ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.473     ; 1.825      ;
; -2.764 ; regB[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.551     ; 1.816      ;
; -2.751 ; regB[1]   ; W[2]       ; rst                    ; estado.resultToW ; 1.000        ; -1.485     ; 1.795      ;
; -2.748 ; regW[0]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.554     ; 1.844      ;
; -2.745 ; regW[0]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.502     ; 1.846      ;
; -2.743 ; regW[0]   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.422     ; 1.851      ;
; -2.731 ; regB[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.603     ; 1.778      ;
; -2.727 ; regB[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.299     ; 1.838      ;
; -2.726 ; regW[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.451     ; 1.810      ;
; -2.715 ; regB[2]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.560     ; 1.572      ;
; -2.713 ; regB[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.563     ; 1.567      ;
; -2.707 ; regW[4]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.405     ; 1.832      ;
; -2.704 ; regW[3]   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.534     ; 1.587      ;
; -2.704 ; regW[1]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.501     ; 1.806      ;
; -2.702 ; regW[1]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.553     ; 1.799      ;
; -2.702 ; regB[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.477     ; 1.760      ;
; -2.699 ; regW[7]   ; Zout$latch ; rst                    ; estado.resultToW ; 1.000        ; -1.270     ; 1.839      ;
; -2.697 ; regW[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.451     ; 1.781      ;
; -2.686 ; regW[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.525     ; 1.764      ;
; -2.683 ; regW[0]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.428     ; 1.790      ;
; -2.676 ; regB[1]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.834     ; 2.252      ;
; -2.672 ; regB[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.554     ; 1.721      ;
; -2.665 ; regW[3]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.525     ; 1.743      ;
; -2.657 ; regW[0]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.785     ; 2.282      ;
; -2.655 ; regOp[0]  ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.836     ; 2.229      ;
; -2.653 ; regW[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.577     ; 1.726      ;
; -2.653 ; regW[2]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.808     ; 2.255      ;
; -2.650 ; regW[1]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.427     ; 1.758      ;
; -2.648 ; regW[5]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.424     ; 1.754      ;
; -2.645 ; regW[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.503     ; 1.745      ;
; -2.639 ; regB[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.606     ; 1.683      ;
; -2.632 ; regW[3]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.577     ; 1.705      ;
; -2.627 ; regW[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.502     ; 1.728      ;
; -2.624 ; regW[3]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.808     ; 2.226      ;
; -2.621 ; regB[5]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.553     ; 1.671      ;
; -2.620 ; regOp[0]  ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.479     ; 1.676      ;
; -2.616 ; regW[1]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.784     ; 2.242      ;
; -2.610 ; regB[3]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.480     ; 1.665      ;
; -2.609 ; regW[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.410     ; 1.734      ;
; -2.608 ; regB[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.530     ; 1.681      ;
; -2.584 ; carryIn   ; W[3]       ; rst                    ; estado.resultToW ; 1.000        ; -1.202     ; 1.799      ;
; -2.584 ; regB[3]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.837     ; 2.157      ;
; -2.579 ; regW[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.423     ; 1.686      ;
; -2.574 ; regB[6]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.554     ; 1.623      ;
; -2.571 ; regB[2]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.551     ; 1.623      ;
; -2.565 ; regOp[0]  ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.553     ; 1.615      ;
; -2.562 ; regB[6]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.475     ; 1.617      ;
; -2.557 ; regW[5]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.786     ; 2.181      ;
; -2.552 ; carryIn   ; W[0]       ; rst                    ; estado.resultToW ; 1.000        ; -1.113     ; 1.969      ;
; -2.546 ; regB[4]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.456     ; 1.625      ;
; -2.539 ; regW[4]   ; W[7]       ; rst                    ; estado.resultToW ; 1.000        ; -1.484     ; 1.658      ;
; -2.539 ; regW[6]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.785     ; 2.164      ;
; -2.538 ; regB[2]   ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.603     ; 1.585      ;
; -2.536 ; regW[4]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.767     ; 2.179      ;
; -2.534 ; regB[2]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.834     ; 2.110      ;
; -2.533 ; regB[5]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.836     ; 2.107      ;
; -2.520 ; regB[4]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.813     ; 2.117      ;
; -2.512 ; regOp[0]  ; W[4]       ; rst                    ; estado.resultToW ; 1.000        ; -1.605     ; 1.557      ;
; -2.510 ; regB[1]   ; W[6]       ; rst                    ; estado.resultToW ; 1.000        ; -1.472     ; 1.568      ;
; -2.510 ; regW[2]   ; W[1]       ; rst                    ; estado.resultToW ; 1.000        ; -1.529     ; 1.388      ;
; -2.509 ; regB[2]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.477     ; 1.567      ;
; -2.494 ; regW[0]   ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.041     ; 1.860      ;
; -2.486 ; regB[6]   ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -0.837     ; 2.059      ;
; -2.480 ; regW[5]   ; W[5]       ; rst                    ; estado.resultToW ; 1.000        ; -1.429     ; 1.586      ;
; -2.471 ; regOp[0]  ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 1.000        ; -1.022     ; 1.978      ;
+--------+-----------+------------+------------------------+------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'rst'                                                                                                                       ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -1.766 ; regB[1]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.076      ; 2.252      ;
; -1.747 ; regW[0]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.125      ; 2.282      ;
; -1.745 ; regOp[0]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.074      ; 2.229      ;
; -1.743 ; regW[2]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.102      ; 2.255      ;
; -1.714 ; regW[3]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.102      ; 2.226      ;
; -1.706 ; regW[1]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.126      ; 2.242      ;
; -1.674 ; regB[3]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.073      ; 2.157      ;
; -1.647 ; regW[5]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.124      ; 2.181      ;
; -1.629 ; regW[6]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.125      ; 2.164      ;
; -1.626 ; regW[4]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.143      ; 2.179      ;
; -1.624 ; regB[2]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.076      ; 2.110      ;
; -1.623 ; regB[5]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.074      ; 2.107      ;
; -1.610 ; regB[4]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.097      ; 2.117      ;
; -1.576 ; regB[6]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.073      ; 2.059      ;
; -1.455 ; carryIn            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.434      ; 2.299      ;
; -1.352 ; regB[7]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.076      ; 1.838      ;
; -1.324 ; regW[7]            ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 0.105      ; 1.839      ;
; -1.301 ; regB[1]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.541      ; 2.252      ;
; -1.282 ; regW[0]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.590      ; 2.282      ;
; -1.280 ; regOp[0]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.539      ; 2.229      ;
; -1.278 ; regW[2]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.567      ; 2.255      ;
; -1.251 ; regS[3]            ; regOp[3]                        ; rst                    ; rst         ; 1.000        ; -1.685     ; 0.168      ;
; -1.249 ; regS[2]            ; regOp[2]                        ; rst                    ; rst         ; 1.000        ; -1.686     ; 0.168      ;
; -1.249 ; regW[3]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.567      ; 2.226      ;
; -1.241 ; regW[1]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.591      ; 2.242      ;
; -1.209 ; regB[3]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.538      ; 2.157      ;
; -1.182 ; regW[5]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.589      ; 2.181      ;
; -1.164 ; regW[6]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.590      ; 2.164      ;
; -1.161 ; regW[4]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.608      ; 2.179      ;
; -1.159 ; regB[2]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.541      ; 2.110      ;
; -1.158 ; regB[5]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.539      ; 2.107      ;
; -1.145 ; regB[4]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.562      ; 2.117      ;
; -1.111 ; regB[6]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.538      ; 2.059      ;
; -0.887 ; regB[7]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.541      ; 1.838      ;
; -0.863 ; regAddress[2]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.494      ;
; -0.859 ; regW[7]            ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 0.570      ; 1.839      ;
; -0.786 ; regS[3]            ; regOp[3]                        ; estado.moveToRegisters ; rst         ; 1.000        ; -1.220     ; 0.168      ;
; -0.784 ; regS[2]            ; regOp[2]                        ; estado.moveToRegisters ; rst         ; 1.000        ; -1.221     ; 0.168      ;
; -0.777 ; regAddress[2]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 1.421      ;
; -0.722 ; regAddress[0]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.353      ;
; -0.707 ; regAddress[3]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.011     ; 1.337      ;
; -0.696 ; regAddress[1]      ; IR[2]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.327      ;
; -0.693 ; regAddress[2]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 1.347      ;
; -0.574 ; regAddress[2]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.009     ; 1.219      ;
; -0.500 ; regAddress[3]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.012     ; 1.145      ;
; -0.492 ; regAddress[1]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.011     ; 1.138      ;
; -0.478 ; regAddress[2]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.011     ; 1.124      ;
; -0.441 ; regAddress[0]      ; IR[1]                           ; rst                    ; rst         ; 1.000        ; -0.011     ; 1.087      ;
; -0.436 ; regAddress[0]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.009     ; 1.081      ;
; -0.415 ; regAddress[3]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.059      ;
; -0.413 ; regAddress[1]      ; IR[7]                           ; rst                    ; rst         ; 1.000        ; -0.009     ; 1.058      ;
; -0.379 ; regW[0]            ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 0.073      ; 1.098      ;
; -0.377 ; regAddress[1]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 1.015      ;
; -0.358 ; regAddress[0]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 0.996      ;
; -0.336 ; regW[7]            ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 0.053      ; 1.035      ;
; -0.313 ; regAddress[3]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.015     ; 1.027      ;
; -0.306 ; regAddress[3]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.011     ; 1.022      ;
; -0.306 ; regAddress[1]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.014     ; 1.021      ;
; -0.305 ; regAddress[3]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.011     ; 1.021      ;
; -0.300 ; regAddress[1]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.017      ;
; -0.299 ; regAddress[1]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.016      ;
; -0.292 ; regAddress[2]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.014     ; 1.007      ;
; -0.289 ; regAddress[0]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 1.000      ;
; -0.286 ; regAddress[0]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 0.930      ;
; -0.285 ; regAddress[2]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.002      ;
; -0.283 ; regAddress[2]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.010     ; 1.000      ;
; -0.279 ; regAddress[1]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 0.990      ;
; -0.256 ; regAddress[0]      ; IR[10]                          ; rst                    ; rst         ; 1.000        ; -0.014     ; 0.971      ;
; -0.249 ; regAddress[0]      ; IR[8]                           ; rst                    ; rst         ; 1.000        ; -0.010     ; 0.966      ;
; -0.248 ; regAddress[0]      ; IR[11]                          ; rst                    ; rst         ; 1.000        ; -0.010     ; 0.965      ;
; -0.246 ; regAddress[3]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 0.956      ;
; -0.242 ; regAddress[1]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.013     ; 0.883      ;
; -0.239 ; regOp[3]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 1.811      ; 2.460      ;
; -0.226 ; regAddress[0]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.013     ; 0.867      ;
; -0.222 ; regAddress[1]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 0.866      ;
; -0.214 ; regOp[2]           ; Zout$latch                      ; rst                    ; rst         ; 1.000        ; 1.812      ; 2.436      ;
; -0.209 ; regAddress[0]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 0.863      ;
; -0.209 ; regAddress[3]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.015     ; 0.846      ;
; -0.187 ; regAddress[2]      ; IR[9]                           ; rst                    ; rst         ; 1.000        ; 0.001      ; 0.898      ;
; -0.174 ; regOp[0]           ; CoBuffer                        ; rst                    ; rst         ; 1.000        ; 0.022      ; 0.842      ;
; -0.149 ; regAddress[2]      ; IR[4]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 0.787      ;
; -0.141 ; regAddress[1]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; 0.000      ; 0.795      ;
; -0.079 ; regAddress[3]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.014     ; 0.719      ;
; -0.053 ; regAddress[3]      ; IR[6]                           ; rst                    ; rst         ; 1.000        ; -0.001     ; 0.696      ;
; -0.015 ; regAddress[2]      ; IR[5]                           ; rst                    ; rst         ; 1.000        ; -0.013     ; 0.656      ;
; 0.024  ; regAddress[3]      ; IR[3]                           ; rst                    ; rst         ; 1.000        ; -0.001     ; 0.629      ;
; 0.040  ; CoBuffer           ; carryIn                         ; rst                    ; rst         ; 1.000        ; -0.382     ; 0.297      ;
; 0.062  ; estado.progMemRead ; prox_estado.moveToRegisters_588 ; clk                    ; rst         ; 1.000        ; -0.166     ; 0.361      ;
; 0.086  ; regW[0]            ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 0.538      ; 1.098      ;
; 0.129  ; regW[7]            ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 0.518      ; 1.035      ;
; 0.226  ; regOp[3]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.276      ; 2.460      ;
; 0.251  ; regOp[2]           ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 1.000        ; 2.277      ; 2.436      ;
; 0.291  ; regOp[0]           ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 1.000        ; 0.487      ; 0.842      ;
; 0.391  ; IR[11]             ; regS[3]                         ; rst                    ; rst         ; 1.000        ; 0.343      ; 0.604      ;
; 0.402  ; regS[1]            ; regOp[1]                        ; rst                    ; rst         ; 1.000        ; 0.001      ; 0.167      ;
; 0.479  ; regS[0]            ; regOp[0]                        ; rst                    ; rst         ; 1.000        ; 0.053      ; 0.172      ;
; 0.592  ; IR[10]             ; regS[2]                         ; rst                    ; rst         ; 1.000        ; 0.347      ; 0.388      ;
; 0.689  ; IR[8]              ; regS[0]                         ; rst                    ; rst         ; 1.000        ; 0.342      ; 0.308      ;
; 0.796  ; IR[9]              ; regS[1]                         ; rst                    ; rst         ; 1.000        ; 0.385      ; 0.318      ;
; 0.796  ; IR[4]              ; regB[4]                         ; rst                    ; rst         ; 1.000        ; 0.376      ; 0.172      ;
+--------+--------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'estado.moveToRegisters'                                                                                   ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -1.716 ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.150     ; 0.168      ;
; -1.714 ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 1.000        ; -2.151     ; 0.168      ;
; -1.251 ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -1.685     ; 0.168      ;
; -1.249 ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; -1.686     ; 0.168      ;
; -1.096 ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.090     ; 0.534      ;
; -1.086 ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.091     ; 0.523      ;
; -1.079 ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.090     ; 0.522      ;
; -1.019 ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.089     ; 0.458      ;
; -1.014 ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.090     ; 0.452      ;
; -1.012 ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.090     ; 0.455      ;
; -0.966 ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.090     ; 0.404      ;
; -0.964 ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.089     ; 0.403      ;
; -0.963 ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.090     ; 0.406      ;
; -0.952 ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 1.000        ; -1.169     ; 0.377      ;
; -0.074 ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.122     ; 0.604      ;
; -0.063 ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.464     ; 0.167      ;
; 0.014  ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.412     ; 0.172      ;
; 0.127  ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.118     ; 0.388      ;
; 0.224  ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.123     ; 0.308      ;
; 0.331  ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.080     ; 0.318      ;
; 0.331  ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.089     ; 0.172      ;
; 0.345  ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.073     ; 0.169      ;
; 0.348  ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.071     ; 0.168      ;
; 0.353  ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.079     ; 0.170      ;
; 0.355  ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.067     ; 0.170      ;
; 0.361  ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.079     ; 0.164      ;
; 0.363  ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 1.000        ; -0.072     ; 0.167      ;
; 0.402  ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.001      ; 0.167      ;
; 0.479  ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 1.000        ; 0.053      ; 0.172      ;
; 0.982  ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.957      ; 0.508      ;
; 1.182  ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.964      ; 0.437      ;
; 1.187  ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.958      ; 0.425      ;
; 1.192  ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 1.069      ; 0.534      ;
; 1.224  ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 0.994      ; 0.429      ;
; 1.232  ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 1.040      ; 0.442      ;
; 1.392  ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 1.057      ; 0.293      ;
; 1.416  ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 1.000        ; 1.071      ; 0.304      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.548 ; prox_estado.moveToRegisters_588 ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; 0.027      ; 0.511      ;
; 0.748 ; prox_estado.progMemRead_594     ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 0.161      ; 0.445      ;
; 0.970 ; prox_estado.resultToW_582       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; -0.020     ; 0.042      ;
+-------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'rst'                                                                                                                            ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node                         ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+
; -2.045 ; regOp[1]               ; CoBuffer                        ; regOp[1]               ; rst         ; 0.000        ; 3.165      ; 1.120      ;
; -1.911 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; 0.000        ; 3.217      ; 1.306      ;
; -1.545 ; regOp[1]               ; CoBuffer                        ; regOp[1]               ; rst         ; -0.500       ; 3.165      ; 1.120      ;
; -1.411 ; regOp[1]               ; Zout$latch                      ; regOp[1]               ; rst         ; -0.500       ; 3.217      ; 1.306      ;
; -1.232 ; W[4]                   ; regW[4]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.536      ; 0.304      ;
; -1.229 ; W[7]                   ; regW[7]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.522      ; 0.293      ;
; -1.063 ; W[1]                   ; regW[1]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.505      ; 0.442      ;
; -1.063 ; regOp[2]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.277      ; 1.214      ;
; -1.030 ; W[2]                   ; regW[2]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.459      ; 0.429      ;
; -1.000 ; W[3]                   ; regW[3]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.534      ; 0.534      ;
; -0.998 ; W[6]                   ; regW[6]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.423      ; 0.425      ;
; -0.992 ; W[5]                   ; regW[5]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.429      ; 0.437      ;
; -0.947 ; estado.moveToRegisters ; prox_estado.resultToW_582       ; estado.moveToRegisters ; rst         ; 0.000        ; 1.161      ; 0.355      ;
; -0.914 ; W[0]                   ; regW[0]                         ; estado.resultToW       ; rst         ; 0.000        ; 1.422      ; 0.508      ;
; -0.907 ; estado.resultToW       ; prox_estado.progMemRead_594     ; estado.resultToW       ; rst         ; 0.000        ; 1.119      ; 0.353      ;
; -0.861 ; PC[0]                  ; regAddress[0]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.169      ; 0.308      ;
; -0.852 ; regOp[3]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 2.276      ; 1.424      ;
; -0.831 ; regOp[3]               ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 2.224      ; 1.393      ;
; -0.799 ; PC[2]                  ; regAddress[2]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.090      ; 0.291      ;
; -0.794 ; PC[1]                  ; regAddress[1]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.089      ; 0.295      ;
; -0.742 ; ALU_8:XALU|preR[8]     ; CoBuffer                        ; regOp[1]               ; rst         ; -0.500       ; 2.469      ; 1.227      ;
; -0.724 ; regOp[2]               ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 2.225      ; 1.501      ;
; -0.703 ; PC[3]                  ; regAddress[3]                   ; estado.moveToRegisters ; rst         ; 0.000        ; 1.091      ; 0.388      ;
; -0.696 ; CoBuffer               ; carryIn                         ; estado.resultToW       ; rst         ; 0.000        ; 0.993      ; 0.297      ;
; -0.598 ; regOp[2]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 1.812      ; 1.214      ;
; -0.447 ; estado.moveToRegisters ; prox_estado.resultToW_582       ; estado.moveToRegisters ; rst         ; -0.500       ; 1.161      ; 0.355      ;
; -0.407 ; estado.resultToW       ; prox_estado.progMemRead_594     ; estado.resultToW       ; rst         ; -0.500       ; 1.119      ; 0.353      ;
; -0.387 ; regOp[3]               ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 1.811      ; 1.424      ;
; -0.366 ; regOp[3]               ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 1.759      ; 1.393      ;
; -0.346 ; regS[0]                ; regOp[0]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.518      ; 0.172      ;
; -0.299 ; regS[1]                ; regOp[1]                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.466      ; 0.167      ;
; -0.259 ; regOp[2]               ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 1.760      ; 1.501      ;
; -0.228 ; IR[5]                  ; regB[5]                         ; rst                    ; rst         ; 0.000        ; 0.398      ; 0.170      ;
; -0.226 ; IR[1]                  ; regB[1]                         ; rst                    ; rst         ; 0.000        ; 0.394      ; 0.168      ;
; -0.226 ; IR[2]                  ; regB[2]                         ; rst                    ; rst         ; 0.000        ; 0.393      ; 0.167      ;
; -0.223 ; IR[7]                  ; regB[7]                         ; rst                    ; rst         ; 0.000        ; 0.392      ; 0.169      ;
; -0.222 ; IR[6]                  ; regB[6]                         ; rst                    ; rst         ; 0.000        ; 0.386      ; 0.164      ;
; -0.216 ; IR[3]                  ; regB[3]                         ; rst                    ; rst         ; 0.000        ; 0.386      ; 0.170      ;
; -0.204 ; IR[4]                  ; regB[4]                         ; rst                    ; rst         ; 0.000        ; 0.376      ; 0.172      ;
; -0.067 ; IR[9]                  ; regS[1]                         ; rst                    ; rst         ; 0.000        ; 0.385      ; 0.318      ;
; -0.034 ; IR[8]                  ; regS[0]                         ; rst                    ; rst         ; 0.000        ; 0.342      ; 0.308      ;
; 0.041  ; IR[10]                 ; regS[2]                         ; rst                    ; rst         ; 0.000        ; 0.347      ; 0.388      ;
; 0.119  ; regS[0]                ; regOp[0]                        ; rst                    ; rst         ; 0.000        ; 0.053      ; 0.172      ;
; 0.166  ; regS[1]                ; regOp[1]                        ; rst                    ; rst         ; 0.000        ; 0.001      ; 0.167      ;
; 0.261  ; IR[11]                 ; regS[3]                         ; rst                    ; rst         ; 0.000        ; 0.343      ; 0.604      ;
; 0.355  ; regOp[0]               ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.487      ; 0.842      ;
; 0.517  ; regW[7]                ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.518      ; 1.035      ;
; 0.527  ; estado.progMemRead     ; prox_estado.moveToRegisters_588 ; clk                    ; rst         ; 0.000        ; -0.166     ; 0.361      ;
; 0.560  ; regW[0]                ; CoBuffer                        ; estado.moveToRegisters ; rst         ; 0.000        ; 0.538      ; 1.098      ;
; 0.595  ; regW[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.608      ; 1.203      ;
; 0.630  ; regAddress[3]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; -0.001     ; 0.629      ;
; 0.669  ; regAddress[2]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.013     ; 0.656      ;
; 0.679  ; CoBuffer               ; carryIn                         ; rst                    ; rst         ; 0.000        ; -0.382     ; 0.297      ;
; 0.697  ; regAddress[3]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; -0.001     ; 0.696      ;
; 0.707  ; carryIn                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.434      ; 1.141      ;
; 0.733  ; regAddress[3]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 0.719      ;
; 0.734  ; regOp[0]               ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.539      ; 1.273      ;
; 0.735  ; regW[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.591      ; 1.326      ;
; 0.795  ; regAddress[1]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; 0.000      ; 0.795      ;
; 0.801  ; regAddress[2]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 0.787      ;
; 0.820  ; regOp[0]               ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 0.022      ; 0.842      ;
; 0.838  ; regW[0]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.590      ; 1.428      ;
; 0.861  ; regAddress[3]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.015     ; 0.846      ;
; 0.863  ; regAddress[0]          ; IR[3]                           ; rst                    ; rst         ; 0.000        ; 0.000      ; 0.863      ;
; 0.866  ; regAddress[1]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; 0.000      ; 0.866      ;
; 0.878  ; regW[2]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.567      ; 1.445      ;
; 0.880  ; regAddress[0]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.013     ; 0.867      ;
; 0.896  ; regAddress[1]          ; IR[5]                           ; rst                    ; rst         ; 0.000        ; -0.013     ; 0.883      ;
; 0.897  ; regAddress[2]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 0.898      ;
; 0.908  ; regB[4]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.562      ; 1.470      ;
; 0.916  ; regW[3]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.567      ; 1.483      ;
; 0.930  ; regAddress[0]          ; IR[6]                           ; rst                    ; rst         ; 0.000        ; 0.000      ; 0.930      ;
; 0.956  ; regAddress[3]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.000      ; 0.956      ;
; 0.975  ; regAddress[0]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.010     ; 0.965      ;
; 0.976  ; regAddress[0]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.010     ; 0.966      ;
; 0.982  ; regW[7]                ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 0.053      ; 1.035      ;
; 0.985  ; regAddress[0]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.014     ; 0.971      ;
; 0.985  ; regW[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.570      ; 1.555      ;
; 0.989  ; regAddress[1]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 0.990      ;
; 0.999  ; regAddress[0]          ; IR[9]                           ; rst                    ; rst         ; 0.000        ; 0.001      ; 1.000      ;
; 1.006  ; regW[5]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.589      ; 1.595      ;
; 1.010  ; regAddress[0]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 0.996      ;
; 1.010  ; regAddress[2]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.010     ; 1.000      ;
; 1.012  ; regAddress[2]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.010     ; 1.002      ;
; 1.015  ; regB[1]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.541      ; 1.556      ;
; 1.019  ; regB[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.538      ; 1.557      ;
; 1.021  ; regAddress[2]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.014     ; 1.007      ;
; 1.025  ; regW[0]                ; CoBuffer                        ; rst                    ; rst         ; 0.000        ; 0.073      ; 1.098      ;
; 1.026  ; regAddress[1]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.010     ; 1.016      ;
; 1.027  ; regAddress[1]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.010     ; 1.017      ;
; 1.029  ; regAddress[1]          ; IR[4]                           ; rst                    ; rst         ; 0.000        ; -0.014     ; 1.015      ;
; 1.032  ; regAddress[3]          ; IR[11]                          ; rst                    ; rst         ; 0.000        ; -0.011     ; 1.021      ;
; 1.033  ; regAddress[3]          ; IR[8]                           ; rst                    ; rst         ; 0.000        ; -0.011     ; 1.022      ;
; 1.034  ; regB[7]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.541      ; 1.575      ;
; 1.035  ; regAddress[1]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.014     ; 1.021      ;
; 1.042  ; regAddress[3]          ; IR[10]                          ; rst                    ; rst         ; 0.000        ; -0.015     ; 1.027      ;
; 1.048  ; regW[6]                ; Zout$latch                      ; estado.moveToRegisters ; rst         ; 0.000        ; 0.590      ; 1.638      ;
; 1.060  ; regW[4]                ; Zout$latch                      ; rst                    ; rst         ; 0.000        ; 0.143      ; 1.203      ;
; 1.067  ; regAddress[1]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.009     ; 1.058      ;
; 1.069  ; regAddress[3]          ; IR[7]                           ; rst                    ; rst         ; 0.000        ; -0.010     ; 1.059      ;
+--------+------------------------+---------------------------------+------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'estado.moveToRegisters'                                                                                    ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; Slack  ; From Node     ; To Node  ; Launch Clock           ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+
; -0.767 ; W[4]          ; regW[4]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 1.071      ; 0.304      ;
; -0.764 ; W[7]          ; regW[7]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 1.057      ; 0.293      ;
; -0.598 ; W[1]          ; regW[1]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 1.040      ; 0.442      ;
; -0.565 ; W[2]          ; regW[2]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.994      ; 0.429      ;
; -0.535 ; W[3]          ; regW[3]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 1.069      ; 0.534      ;
; -0.533 ; W[6]          ; regW[6]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.958      ; 0.425      ;
; -0.527 ; W[5]          ; regW[5]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.964      ; 0.437      ;
; -0.449 ; W[0]          ; regW[0]  ; estado.resultToW       ; estado.moveToRegisters ; 0.000        ; 0.957      ; 0.508      ;
; 0.119  ; regS[0]       ; regOp[0] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.053      ; 0.172      ;
; 0.166  ; regS[1]       ; regOp[1] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; 0.001      ; 0.167      ;
; 0.237  ; IR[5]         ; regB[5]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.067     ; 0.170      ;
; 0.239  ; IR[1]         ; regB[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.071     ; 0.168      ;
; 0.239  ; IR[2]         ; regB[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.072     ; 0.167      ;
; 0.242  ; IR[7]         ; regB[7]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.073     ; 0.169      ;
; 0.243  ; IR[6]         ; regB[6]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.079     ; 0.164      ;
; 0.249  ; IR[3]         ; regB[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.079     ; 0.170      ;
; 0.261  ; IR[4]         ; regB[4]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.089     ; 0.172      ;
; 0.398  ; IR[9]         ; regS[1]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.080     ; 0.318      ;
; 0.431  ; IR[8]         ; regS[0]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.123     ; 0.308      ;
; 0.506  ; IR[10]        ; regS[2]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.118     ; 0.388      ;
; 0.584  ; regS[0]       ; regOp[0] ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.412     ; 0.172      ;
; 0.631  ; regS[1]       ; regOp[1] ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.464     ; 0.167      ;
; 0.726  ; IR[11]        ; regS[3]  ; rst                    ; estado.moveToRegisters ; 0.000        ; -0.122     ; 0.604      ;
; 1.492  ; regAddress[0] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.089     ; 0.403      ;
; 1.494  ; regAddress[0] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.090     ; 0.404      ;
; 1.496  ; regAddress[0] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.090     ; 0.406      ;
; 1.542  ; regAddress[2] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.090     ; 0.452      ;
; 1.545  ; regAddress[1] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.090     ; 0.455      ;
; 1.546  ; regAddress[0] ; PC[0]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.169     ; 0.377      ;
; 1.547  ; regAddress[1] ; PC[1]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.089     ; 0.458      ;
; 1.612  ; regAddress[2] ; PC[2]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.090     ; 0.522      ;
; 1.614  ; regAddress[3] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.091     ; 0.523      ;
; 1.624  ; regAddress[1] ; PC[3]    ; rst                    ; estado.moveToRegisters ; 0.000        ; -1.090     ; 0.534      ;
; 1.853  ; regS[3]       ; regOp[3] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -1.685     ; 0.168      ;
; 1.854  ; regS[2]       ; regOp[2] ; estado.moveToRegisters ; estado.moveToRegisters ; 0.000        ; -1.686     ; 0.168      ;
; 2.318  ; regS[3]       ; regOp[3] ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.150     ; 0.168      ;
; 2.319  ; regS[2]       ; regOp[2] ; rst                    ; estado.moveToRegisters ; 0.000        ; -2.151     ; 0.168      ;
+--------+---------------+----------+------------------------+------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'estado.resultToW'                                                                                           ;
+--------+--------------------+------------+------------------------+------------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node    ; Launch Clock           ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+------------+------------------------+------------------+--------------+------------+------------+
; -0.690 ; regOp[1]           ; W[5]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.664      ; 0.974      ;
; -0.670 ; regOp[1]           ; CoBuffer   ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.790      ; 1.120      ;
; -0.645 ; regOp[1]           ; W[6]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.669      ; 1.024      ;
; -0.592 ; regOp[1]           ; W[0]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.670      ; 1.078      ;
; -0.566 ; regOp[1]           ; W[3]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.581      ; 1.015      ;
; -0.556 ; regOp[1]           ; W[2]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.656      ; 1.100      ;
; -0.556 ; regOp[1]           ; W[7]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.590      ; 1.034      ;
; -0.536 ; regOp[1]           ; Zout$latch ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.842      ; 1.306      ;
; -0.472 ; regOp[1]           ; W[4]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.538      ; 1.066      ;
; -0.356 ; regOp[1]           ; W[1]       ; regOp[1]               ; estado.resultToW ; 0.000        ; 1.586      ; 1.230      ;
; -0.190 ; regOp[1]           ; W[5]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.664      ; 0.974      ;
; -0.170 ; regOp[1]           ; CoBuffer   ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.790      ; 1.120      ;
; -0.145 ; regOp[1]           ; W[6]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.669      ; 1.024      ;
; -0.092 ; regOp[1]           ; W[0]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.670      ; 1.078      ;
; -0.066 ; regOp[1]           ; W[3]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.581      ; 1.015      ;
; -0.056 ; regOp[1]           ; W[2]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.656      ; 1.100      ;
; -0.056 ; regOp[1]           ; W[7]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.590      ; 1.034      ;
; -0.036 ; regOp[1]           ; Zout$latch ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.842      ; 1.306      ;
; 0.028  ; regOp[1]           ; W[4]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.538      ; 1.066      ;
; 0.144  ; regOp[1]           ; W[1]       ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.586      ; 1.230      ;
; 0.158  ; regOp[2]           ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.724      ; 0.882      ;
; 0.203  ; regOp[2]           ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.729      ; 0.932      ;
; 0.256  ; regOp[2]           ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.730      ; 0.986      ;
; 0.282  ; regOp[2]           ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.641      ; 0.923      ;
; 0.292  ; regOp[2]           ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.716      ; 1.008      ;
; 0.312  ; regOp[2]           ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.902      ; 1.214      ;
; 0.369  ; regOp[3]           ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.723      ; 1.092      ;
; 0.376  ; regOp[2]           ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.598      ; 0.974      ;
; 0.410  ; regOp[2]           ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.650      ; 1.060      ;
; 0.414  ; regOp[3]           ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.728      ; 1.142      ;
; 0.467  ; regOp[3]           ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.729      ; 1.196      ;
; 0.492  ; regOp[2]           ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.646      ; 1.138      ;
; 0.493  ; regOp[3]           ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.640      ; 1.133      ;
; 0.503  ; regOp[3]           ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.715      ; 1.218      ;
; 0.523  ; regOp[3]           ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.901      ; 1.424      ;
; 0.544  ; regOp[3]           ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.849      ; 1.393      ;
; 0.587  ; regOp[3]           ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.597      ; 1.184      ;
; 0.613  ; regOp[3]           ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.649      ; 1.262      ;
; 0.623  ; regOp[2]           ; W[5]       ; rst                    ; estado.resultToW ; 0.000        ; 0.259      ; 0.882      ;
; 0.633  ; ALU_8:XALU|preR[8] ; CoBuffer   ; regOp[1]               ; estado.resultToW ; -0.500       ; 1.094      ; 1.227      ;
; 0.651  ; regOp[2]           ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.850      ; 1.501      ;
; 0.668  ; regOp[2]           ; W[6]       ; rst                    ; estado.resultToW ; 0.000        ; 0.264      ; 0.932      ;
; 0.703  ; regOp[3]           ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; 0.645      ; 1.348      ;
; 0.721  ; regOp[2]           ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; 0.265      ; 0.986      ;
; 0.747  ; regOp[2]           ; W[3]       ; rst                    ; estado.resultToW ; 0.000        ; 0.176      ; 0.923      ;
; 0.757  ; regOp[2]           ; W[2]       ; rst                    ; estado.resultToW ; 0.000        ; 0.251      ; 1.008      ;
; 0.777  ; regOp[2]           ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; 0.437      ; 1.214      ;
; 0.834  ; regOp[3]           ; W[5]       ; rst                    ; estado.resultToW ; 0.000        ; 0.258      ; 1.092      ;
; 0.841  ; regOp[2]           ; W[4]       ; rst                    ; estado.resultToW ; 0.000        ; 0.133      ; 0.974      ;
; 0.875  ; regOp[2]           ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; 0.185      ; 1.060      ;
; 0.879  ; regOp[3]           ; W[6]       ; rst                    ; estado.resultToW ; 0.000        ; 0.263      ; 1.142      ;
; 0.932  ; regOp[3]           ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; 0.264      ; 1.196      ;
; 0.957  ; regOp[2]           ; W[1]       ; rst                    ; estado.resultToW ; 0.000        ; 0.181      ; 1.138      ;
; 0.958  ; regOp[3]           ; W[3]       ; rst                    ; estado.resultToW ; 0.000        ; 0.175      ; 1.133      ;
; 0.968  ; regOp[3]           ; W[2]       ; rst                    ; estado.resultToW ; 0.000        ; 0.250      ; 1.218      ;
; 0.988  ; regOp[3]           ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; 0.436      ; 1.424      ;
; 1.009  ; regOp[3]           ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; 0.384      ; 1.393      ;
; 1.052  ; regOp[3]           ; W[4]       ; rst                    ; estado.resultToW ; 0.000        ; 0.132      ; 1.184      ;
; 1.078  ; regOp[3]           ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; 0.184      ; 1.262      ;
; 1.116  ; regOp[2]           ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; 0.385      ; 1.501      ;
; 1.168  ; regOp[3]           ; W[1]       ; rst                    ; estado.resultToW ; 0.000        ; 0.180      ; 1.348      ;
; 1.730  ; regOp[0]           ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.888     ; 0.842      ;
; 1.786  ; regW[4]            ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.028     ; 0.758      ;
; 1.854  ; regW[4]            ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.945     ; 0.909      ;
; 1.892  ; regW[7]            ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.857     ; 1.035      ;
; 1.924  ; carryIn            ; W[0]       ; rst                    ; estado.resultToW ; 0.000        ; -1.113     ; 0.811      ;
; 1.928  ; regOp[0]           ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.088     ; 0.840      ;
; 1.935  ; regW[0]            ; CoBuffer   ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.837     ; 1.098      ;
; 1.951  ; regOp[0]           ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.008     ; 0.943      ;
; 1.970  ; regW[4]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.767     ; 1.203      ;
; 2.045  ; regW[1]            ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.970     ; 1.075      ;
; 2.069  ; regW[2]            ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.069     ; 1.000      ;
; 2.082  ; carryIn            ; Zout$latch ; rst                    ; estado.resultToW ; 0.000        ; -0.941     ; 1.141      ;
; 2.109  ; regOp[0]           ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.836     ; 1.273      ;
; 2.110  ; regW[1]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.784     ; 1.326      ;
; 2.123  ; regW[1]            ; W[0]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.956     ; 1.167      ;
; 2.176  ; regOp[0]           ; W[3]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.097     ; 1.079      ;
; 2.185  ; regW[4]            ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.071     ; 1.114      ;
; 2.189  ; regB[4]            ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.117     ; 1.072      ;
; 2.193  ; regW[7]            ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.057     ; 1.136      ;
; 2.195  ; regOp[0]           ; CoBuffer   ; rst                    ; estado.resultToW ; 0.000        ; -1.353     ; 0.842      ;
; 2.197  ; regW[3]            ; W[4]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.112     ; 1.085      ;
; 2.213  ; regW[0]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.785     ; 1.428      ;
; 2.219  ; regW[0]            ; W[1]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.041     ; 1.178      ;
; 2.225  ; regB[7]            ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.086     ; 1.139      ;
; 2.240  ; regOp[0]           ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.014     ; 1.226      ;
; 2.251  ; regW[4]            ; W[3]       ; rst                    ; estado.resultToW ; 0.000        ; -1.493     ; 0.758      ;
; 2.251  ; regW[7]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.978     ; 1.273      ;
; 2.253  ; regW[2]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.808     ; 1.445      ;
; 2.272  ; regW[5]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.959     ; 1.313      ;
; 2.281  ; regW[3]            ; W[2]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.994     ; 1.287      ;
; 2.283  ; regB[4]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.813     ; 1.470      ;
; 2.285  ; regB[6]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.010     ; 1.275      ;
; 2.291  ; regW[3]            ; Zout$latch ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.808     ; 1.483      ;
; 2.293  ; carryIn            ; W[7]       ; rst                    ; estado.resultToW ; 0.000        ; -1.193     ; 1.100      ;
; 2.296  ; regW[6]            ; W[7]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.037     ; 1.259      ;
; 2.314  ; regW[6]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -0.958     ; 1.356      ;
; 2.319  ; regW[4]            ; W[5]       ; rst                    ; estado.resultToW ; 0.000        ; -1.410     ; 0.909      ;
; 2.329  ; regB[5]            ; W[5]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.014     ; 1.315      ;
; 2.338  ; regB[2]            ; W[6]       ; estado.moveToRegisters ; estado.resultToW ; 0.000        ; -1.007     ; 1.331      ;
+--------+--------------------+------------+------------------------+------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                  ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                       ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.090 ; prox_estado.resultToW_582       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; -0.020     ; 0.042      ;
; 0.132  ; prox_estado.progMemRead_594     ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 0.161      ; 0.445      ;
; 0.332  ; prox_estado.moveToRegisters_588 ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; 0.027      ; 0.511      ;
+--------+---------------------------------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'regOp[1]'                                                                                             ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node            ; Launch Clock           ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+
; -0.086 ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; 0.000        ; 0.696      ; 0.610      ;
; 0.414  ; regOp[1]  ; ALU_8:XALU|preR[8] ; regOp[1]               ; regOp[1]    ; -0.500       ; 0.696      ; 0.610      ;
; 1.675  ; regOp[2]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -0.244     ; 0.931      ;
; 2.140  ; regOp[2]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -0.709     ; 0.931      ;
; 3.303  ; regOp[0]  ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.982     ; 0.821      ;
; 3.512  ; regW[6]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.931     ; 1.081      ;
; 3.550  ; regW[5]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.932     ; 1.118      ;
; 3.573  ; regW[7]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.951     ; 1.122      ;
; 3.667  ; regW[4]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.913     ; 1.254      ;
; 3.709  ; regW[1]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.930     ; 1.279      ;
; 3.746  ; regW[3]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.954     ; 1.292      ;
; 3.768  ; regOp[0]  ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.447     ; 0.821      ;
; 3.779  ; regW[2]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.954     ; 1.325      ;
; 3.796  ; regW[0]   ; ALU_8:XALU|preR[8] ; estado.moveToRegisters ; regOp[1]    ; -0.500       ; -1.931     ; 1.365      ;
; 3.977  ; regW[6]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.396     ; 1.081      ;
; 4.015  ; regW[5]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.397     ; 1.118      ;
; 4.038  ; regW[7]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.416     ; 1.122      ;
; 4.132  ; regW[4]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.378     ; 1.254      ;
; 4.174  ; regW[1]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.395     ; 1.279      ;
; 4.211  ; regW[3]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.419     ; 1.292      ;
; 4.244  ; regW[2]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.419     ; 1.325      ;
; 4.261  ; regW[0]   ; ALU_8:XALU|preR[8] ; rst                    ; regOp[1]    ; -0.500       ; -2.396     ; 1.365      ;
+--------+-----------+--------------------+------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'estado.resultToW'                                                                ;
+-------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+------------------+--------------+------------+------------+
; 0.338 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.500        ; 1.581      ; 1.160      ;
; 0.361 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.500        ; 1.586      ; 1.132      ;
; 0.457 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.500        ; 1.656      ; 1.228      ;
; 0.460 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.500        ; 1.669      ; 1.239      ;
; 0.498 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.500        ; 1.664      ; 1.201      ;
; 0.526 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.500        ; 1.590      ; 1.167      ;
; 0.527 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.500        ; 1.538      ; 1.161      ;
; 0.557 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.500        ; 1.670      ; 1.143      ;
; 0.838 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 1.000        ; 1.581      ; 1.160      ;
; 0.861 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 1.000        ; 1.586      ; 1.132      ;
; 0.957 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 1.000        ; 1.656      ; 1.228      ;
; 0.960 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 1.000        ; 1.669      ; 1.239      ;
; 0.998 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 1.000        ; 1.664      ; 1.201      ;
; 1.026 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 1.000        ; 1.590      ; 1.167      ;
; 1.027 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 1.000        ; 1.538      ; 1.161      ;
; 1.057 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 1.000        ; 1.670      ; 1.143      ;
+-------+-----------+---------+--------------+------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'clk'                                                                                       ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; 0.364 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.500        ; 1.280      ; 1.448      ;
; 0.391 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.500        ; 1.141      ; 1.282      ;
; 0.391 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.500        ; 1.141      ; 1.282      ;
; 0.864 ; rst       ; estado.progMemRead     ; rst          ; clk         ; 1.000        ; 1.280      ; 1.448      ;
; 0.891 ; rst       ; estado.resultToW       ; rst          ; clk         ; 1.000        ; 1.141      ; 1.282      ;
; 0.891 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 1.000        ; 1.141      ; 1.282      ;
+-------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Fast Model Recovery: 'estado.moveToRegisters'                                                                ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; 0.765 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.668      ; 0.931      ;
; 0.766 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.669      ; 0.931      ;
; 0.769 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.668      ; 0.932      ;
; 0.784 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.500        ; 1.589      ; 0.899      ;
; 1.265 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.668      ; 0.931      ;
; 1.266 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.669      ; 0.931      ;
; 1.269 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.668      ; 0.932      ;
; 1.284 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 1.000        ; 1.589      ; 0.899      ;
+-------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'estado.moveToRegisters'                                                                  ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock            ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+
; -0.738 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.669      ; 0.931      ;
; -0.737 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.668      ; 0.931      ;
; -0.736 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.668      ; 0.932      ;
; -0.690 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; 0.000        ; 1.589      ; 0.899      ;
; -0.238 ; rst       ; PC[1]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.669      ; 0.931      ;
; -0.237 ; rst       ; PC[3]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.668      ; 0.931      ;
; -0.236 ; rst       ; PC[2]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.668      ; 0.932      ;
; -0.190 ; rst       ; PC[0]   ; rst          ; estado.moveToRegisters ; -0.500       ; 1.589      ; 0.899      ;
+--------+-----------+---------+--------------+------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'estado.resultToW'                                                                  ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock      ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+
; -0.527 ; rst       ; W[0]    ; rst          ; estado.resultToW ; 0.000        ; 1.670      ; 1.143      ;
; -0.463 ; rst       ; W[5]    ; rst          ; estado.resultToW ; 0.000        ; 1.664      ; 1.201      ;
; -0.454 ; rst       ; W[1]    ; rst          ; estado.resultToW ; 0.000        ; 1.586      ; 1.132      ;
; -0.430 ; rst       ; W[6]    ; rst          ; estado.resultToW ; 0.000        ; 1.669      ; 1.239      ;
; -0.428 ; rst       ; W[2]    ; rst          ; estado.resultToW ; 0.000        ; 1.656      ; 1.228      ;
; -0.423 ; rst       ; W[7]    ; rst          ; estado.resultToW ; 0.000        ; 1.590      ; 1.167      ;
; -0.421 ; rst       ; W[3]    ; rst          ; estado.resultToW ; 0.000        ; 1.581      ; 1.160      ;
; -0.377 ; rst       ; W[4]    ; rst          ; estado.resultToW ; 0.000        ; 1.538      ; 1.161      ;
; -0.027 ; rst       ; W[0]    ; rst          ; estado.resultToW ; -0.500       ; 1.670      ; 1.143      ;
; 0.037  ; rst       ; W[5]    ; rst          ; estado.resultToW ; -0.500       ; 1.664      ; 1.201      ;
; 0.046  ; rst       ; W[1]    ; rst          ; estado.resultToW ; -0.500       ; 1.586      ; 1.132      ;
; 0.070  ; rst       ; W[6]    ; rst          ; estado.resultToW ; -0.500       ; 1.669      ; 1.239      ;
; 0.072  ; rst       ; W[2]    ; rst          ; estado.resultToW ; -0.500       ; 1.656      ; 1.228      ;
; 0.077  ; rst       ; W[7]    ; rst          ; estado.resultToW ; -0.500       ; 1.590      ; 1.167      ;
; 0.079  ; rst       ; W[3]    ; rst          ; estado.resultToW ; -0.500       ; 1.581      ; 1.160      ;
; 0.123  ; rst       ; W[4]    ; rst          ; estado.resultToW ; -0.500       ; 1.538      ; 1.161      ;
+--------+-----------+---------+--------------+------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------+
; Fast Model Removal: 'clk'                                                                                         ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node                ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+
; -0.011 ; rst       ; estado.resultToW       ; rst          ; clk         ; 0.000        ; 1.141      ; 1.282      ;
; -0.011 ; rst       ; estado.moveToRegisters ; rst          ; clk         ; 0.000        ; 1.141      ; 1.282      ;
; 0.016  ; rst       ; estado.progMemRead     ; rst          ; clk         ; 0.000        ; 1.280      ; 1.448      ;
; 0.489  ; rst       ; estado.resultToW       ; rst          ; clk         ; -0.500       ; 1.141      ; 1.282      ;
; 0.489  ; rst       ; estado.moveToRegisters ; rst          ; clk         ; -0.500       ; 1.141      ; 1.282      ;
; 0.516  ; rst       ; estado.progMemRead     ; rst          ; clk         ; -0.500       ; 1.280      ; 1.448      ;
+--------+-----------+------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                     ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; estado.moveToRegisters     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; estado.progMemRead         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; estado.progMemRead         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Fall       ; estado.resultToW           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Fall       ; estado.resultToW           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.moveToRegisters|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.progMemRead|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; estado.resultToW|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; estado.resultToW|clk       ;
+--------+--------------+----------------+------------------+-------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'rst'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; rst   ; Rise       ; rst                                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; CoBuffer                              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; CoBuffer                              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; CoBuffer|datad                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; CoBuffer|datad                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[10]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[10]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[11]                                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[11]|datad                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[1]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[1]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[2]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[2]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[3]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[3]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[4]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[4]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[5]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[5]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[6]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[6]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[7]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[7]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[8]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[8]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; IR[9]                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; IR[9]|datad                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; Zout$latch                            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout$latch|datac                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0clkctrl|inclk[0]                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0clkctrl|outclk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0|combout                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0|combout                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; Zout~0|dataa                          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; Zout~0|dataa                          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; carryIn                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; carryIn                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn|datac                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn|datac                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0clkctrl|inclk[0]             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0clkctrl|inclk[0]             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0clkctrl|outclk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0clkctrl|outclk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; carryIn~0|datab                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; carryIn~0|datab                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.moveToRegisters_588       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.moveToRegisters_588       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.moveToRegisters_588|datac ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.moveToRegisters_588|datac ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.progMemRead_594           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.progMemRead_594           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.progMemRead_594|dataa     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.progMemRead_594|dataa     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; prox_estado.resultToW_582             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; prox_estado.resultToW_582             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; prox_estado.resultToW_582|dataa       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; prox_estado.resultToW_582|dataa       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[0]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[0]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[0]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[1]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[1]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[1]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[2]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[2]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Rise       ; regAddress[2]|datad                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; rst   ; Fall       ; regAddress[3]                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; rst   ; Rise       ; regAddress[3]|datad                   ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'estado.moveToRegisters'                                                                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                  ; Clock Edge ; Target                                  ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[0]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[0]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[0]|datac                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[1]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[1]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[1]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[2]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[2]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[2]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; PC[3]                                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; PC[3]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; PC[3]|dataa                             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; estado.moveToRegisters~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[2]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[3]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[4]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[5]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[5]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[6]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[6]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regB[7]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regB[7]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[0]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[0]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[1]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[1]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[2]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[2]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regOp[3]                                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regOp[3]|datac                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[1]|datac                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regS[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regS[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regS[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[0]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[0]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[1]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[1]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[2]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[2]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[3]                                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Rise       ; regW[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Rise       ; regW[3]|datad                           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.moveToRegisters ; Fall       ; regW[4]                                 ;
+-------+--------------+----------------+------------------+------------------------+------------+-----------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'estado.resultToW'                                                                           ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock            ; Clock Edge ; Target                            ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; CoBuffer                          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; CoBuffer                          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; CoBuffer|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; CoBuffer|datad                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[0]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[0]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[1]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[1]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[1]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[2]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[2]|datab                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[2]|datab                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[3]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[3]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[4]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[4]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[4]|datad                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[5]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[5]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[6]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[6]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[6]|dataa                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; W[7]                              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; W[7]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; W[7]|datac                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Fall       ; Zout$latch                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout$latch|datac                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0clkctrl|inclk[0]            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0clkctrl|inclk[0]            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0clkctrl|outclk              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0clkctrl|outclk              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0|combout                    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0|combout                    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; Zout~0|datad                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; Zout~0|datad                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; estado.resultToW ; Rise       ; estado.resultToW~clkctrl|outclk   ;
+-------+--------------+----------------+------------------+------------------+------------+-----------------------------------+


+--------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'regOp[1]'                                                             ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; ALU_8:XALU|preR[8]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~0|combout ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~0|combout ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|Mux0~0|datac   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|Mux0~0|datac   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; XALU|preR[8]|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; regOp[1] ; Rise       ; regOp[1]|combout    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; regOp[1] ; Rise       ; regOp[1]|combout    ;
+-------+--------------+----------------+------------------+----------+------------+---------------------+


+-------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                           ;
+------------------+------------------------+-------+-------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise  ; Fall  ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+-------+-------+------------+------------------------+
; currentState[*]  ; clk                    ; 3.330 ; 3.330 ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 3.330 ; 3.330 ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;       ; 2.000 ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;       ; 2.000 ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 2.000 ;       ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 2.000 ;       ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 3.738 ; 3.738 ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 5.113 ; 5.113 ; Fall       ; rst                    ;
+------------------+------------------------+-------+-------+------------+------------------------+


+-------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                   ;
+------------------+------------------------+-------+-------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise  ; Fall  ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+-------+-------+------------+------------------------+
; currentState[*]  ; clk                    ; 3.330 ; 3.330 ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 3.330 ; 3.330 ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;       ; 2.000 ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;       ; 2.000 ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 2.000 ;       ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 2.000 ;       ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 3.738 ; 3.738 ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 5.113 ; 5.113 ; Fall       ; rst                    ;
+------------------+------------------------+-------+-------+------------+------------------------+


+-----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                     ;
+-------------------------+----------+---------+----------+---------+---------------------+
; Clock                   ; Setup    ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+-------------------------+----------+---------+----------+---------+---------------------+
; Worst-case Slack        ; -9.723   ; -3.395  ; -1.000   ; -1.053  ; -1.469              ;
;  clk                    ; -0.448   ; -0.090  ; 0.225    ; -0.011  ; -1.469              ;
;  estado.moveToRegisters ; -4.316   ; -1.814  ; 0.233    ; -1.053  ; 0.500               ;
;  estado.resultToW       ; -9.723   ; -0.690  ; -1.000   ; -0.527  ; 0.500               ;
;  regOp[1]               ; -8.849   ; -0.211  ; N/A      ; N/A     ; 0.500               ;
;  rst                    ; -6.659   ; -3.395  ; N/A      ; N/A     ; -1.469              ;
; Design-wide TNS         ; -189.513 ; -49.621 ; -4.791   ; -6.446  ; -6.604              ;
;  clk                    ; -0.453   ; -0.090  ; 0.000    ; -0.022  ; -5.135              ;
;  estado.moveToRegisters ; -37.052  ; -10.500 ; 0.000    ; -4.062  ; 0.000               ;
;  estado.resultToW       ; -86.792  ; -5.639  ; -4.791   ; -3.523  ; 0.000               ;
;  regOp[1]               ; -8.849   ; -0.211  ; N/A      ; N/A     ; 0.000               ;
;  rst                    ; -56.367  ; -37.926 ; N/A      ; N/A     ; -1.469              ;
+-------------------------+----------+---------+----------+---------+---------------------+


+---------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                             ;
+------------------+------------------------+--------+--------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise   ; Fall   ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+--------+--------+------------+------------------------+
; currentState[*]  ; clk                    ; 6.936  ; 6.936  ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 6.936  ; 6.936  ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;        ; 4.303  ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;        ; 4.303  ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 4.303  ;        ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 4.303  ;        ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 7.527  ; 7.527  ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 10.591 ; 10.591 ; Fall       ; rst                    ;
+------------------+------------------------+--------+--------+------------+------------------------+


+-------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                   ;
+------------------+------------------------+-------+-------+------------+------------------------+
; Data Port        ; Clock Port             ; Rise  ; Fall  ; Clock Edge ; Clock Reference        ;
+------------------+------------------------+-------+-------+------------+------------------------+
; currentState[*]  ; clk                    ; 3.330 ; 3.330 ; Fall       ; clk                    ;
;  currentState[1] ; clk                    ; 3.330 ; 3.330 ; Fall       ; clk                    ;
; currentState[*]  ; estado.moveToRegisters ;       ; 2.000 ; Rise       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ;       ; 2.000 ; Rise       ; estado.moveToRegisters ;
; currentState[*]  ; estado.moveToRegisters ; 2.000 ;       ; Fall       ; estado.moveToRegisters ;
;  currentState[0] ; estado.moveToRegisters ; 2.000 ;       ; Fall       ; estado.moveToRegisters ;
; Zout             ; estado.resultToW       ; 3.738 ; 3.738 ; Fall       ; estado.resultToW       ;
; Zout             ; rst                    ; 5.113 ; 5.113 ; Fall       ; rst                    ;
+------------------+------------------------+-------+-------+------------+------------------------+


+---------------------------------------------------------------------------------------------+
; Setup Transfers                                                                             ;
+------------------------+------------------------+----------+----------+----------+----------+
; From Clock             ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------+------------------------+----------+----------+----------+----------+
; rst                    ; clk                    ; 0        ; 0        ; 0        ; 3        ;
; estado.moveToRegisters ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 4        ;
; estado.resultToW       ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 8        ;
; rst                    ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 25       ;
; estado.moveToRegisters ; estado.resultToW       ; 0        ; 0        ; 0        ; 809      ;
; regOp[1]               ; estado.resultToW       ; 0        ; 0        ; 83       ; 82       ;
; rst                    ; estado.resultToW       ; 0        ; 0        ; 0        ; 845      ;
; estado.moveToRegisters ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; regOp[1]               ; regOp[1]               ; 1        ; 1        ; 0        ; 0        ;
; rst                    ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; clk                    ; rst                    ; 0        ; 0        ; 0        ; 1        ;
; estado.moveToRegisters ; rst                    ; 0        ; 0        ; 1        ; 417      ;
; estado.resultToW       ; rst                    ; 0        ; 0        ; 1        ; 10       ;
; regOp[1]               ; rst                    ; 0        ; 0        ; 43       ; 42       ;
; rst                    ; rst                    ; 0        ; 0        ; 0        ; 486      ;
+------------------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------------------+
; Hold Transfers                                                                              ;
+------------------------+------------------------+----------+----------+----------+----------+
; From Clock             ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------+------------------------+----------+----------+----------+----------+
; rst                    ; clk                    ; 0        ; 0        ; 0        ; 3        ;
; estado.moveToRegisters ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 4        ;
; estado.resultToW       ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 8        ;
; rst                    ; estado.moveToRegisters ; 0        ; 0        ; 0        ; 25       ;
; estado.moveToRegisters ; estado.resultToW       ; 0        ; 0        ; 0        ; 809      ;
; regOp[1]               ; estado.resultToW       ; 0        ; 0        ; 83       ; 82       ;
; rst                    ; estado.resultToW       ; 0        ; 0        ; 0        ; 845      ;
; estado.moveToRegisters ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; regOp[1]               ; regOp[1]               ; 1        ; 1        ; 0        ; 0        ;
; rst                    ; regOp[1]               ; 0        ; 18       ; 0        ; 0        ;
; clk                    ; rst                    ; 0        ; 0        ; 0        ; 1        ;
; estado.moveToRegisters ; rst                    ; 0        ; 0        ; 1        ; 417      ;
; estado.resultToW       ; rst                    ; 0        ; 0        ; 1        ; 10       ;
; regOp[1]               ; rst                    ; 0        ; 0        ; 43       ; 42       ;
; rst                    ; rst                    ; 0        ; 0        ; 0        ; 486      ;
+------------------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------+
; Recovery Transfers                                                              ;
+------------+------------------------+----------+----------+----------+----------+
; From Clock ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+------------------------+----------+----------+----------+----------+
; rst        ; clk                    ; 0        ; 0        ; 3        ; 3        ;
; rst        ; estado.moveToRegisters ; 0        ; 0        ; 4        ; 4        ;
; rst        ; estado.resultToW       ; 0        ; 0        ; 8        ; 8        ;
+------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------+
; Removal Transfers                                                               ;
+------------+------------------------+----------+----------+----------+----------+
; From Clock ; To Clock               ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+------------------------+----------+----------+----------+----------+
; rst        ; clk                    ; 0        ; 0        ; 3        ; 3        ;
; rst        ; estado.moveToRegisters ; 0        ; 0        ; 4        ; 4        ;
; rst        ; estado.resultToW       ; 0        ; 0        ; 8        ; 8        ;
+------------+------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 0     ; 0    ;
; Unconstrained Input Port Paths  ; 0     ; 0    ;
; Unconstrained Output Ports      ; 3     ; 3    ;
; Unconstrained Output Port Paths ; 3     ; 3    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Wed Jun 27 19:34:12 2018
Info: Command: quartus_sta ALU_CTRL -c ALU_CTRL
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 57 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'ALU_CTRL.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name rst rst
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name estado.resultToW estado.resultToW
    Info (332105): create_clock -period 1.000 -name estado.moveToRegisters estado.moveToRegisters
    Info (332105): create_clock -period 1.000 -name regOp[1] regOp[1]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -9.723
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -9.723       -86.792 estado.resultToW 
    Info (332119):    -8.849        -8.849 regOp[1] 
    Info (332119):    -6.659       -56.367 rst 
    Info (332119):    -4.316       -37.052 estado.moveToRegisters 
    Info (332119):    -0.448        -0.453 clk 
Info (332146): Worst-case hold slack is -3.395
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.395       -37.926 rst 
    Info (332119):    -1.814       -10.500 estado.moveToRegisters 
    Info (332119):    -0.378        -0.984 estado.resultToW 
    Info (332119):    -0.211        -0.211 regOp[1] 
    Info (332119):     0.135         0.000 clk 
Info (332146): Worst-case recovery slack is -1.000
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.000        -4.791 estado.resultToW 
    Info (332119):     0.225         0.000 clk 
    Info (332119):     0.233         0.000 estado.moveToRegisters 
Info (332146): Worst-case removal slack is -1.053
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.053        -4.062 estado.moveToRegisters 
    Info (332119):    -0.474        -2.096 estado.resultToW 
    Info (332119):    -0.009        -0.018 clk 
Info (332146): Worst-case minimum pulse width slack is -1.469
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.469        -5.135 clk 
    Info (332119):    -1.469        -1.469 rst 
    Info (332119):     0.500         0.000 estado.moveToRegisters 
    Info (332119):     0.500         0.000 estado.resultToW 
    Info (332119):     0.500         0.000 regOp[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.719
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.719        -3.719 regOp[1] 
    Info (332119):    -3.141       -27.570 estado.resultToW 
    Info (332119):    -1.766        -9.884 rst 
    Info (332119):    -1.716        -7.713 estado.moveToRegisters 
    Info (332119):     0.548         0.000 clk 
Info (332146): Worst-case hold slack is -2.045
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.045       -20.412 rst 
    Info (332119):    -0.767        -4.738 estado.moveToRegisters 
    Info (332119):    -0.690        -5.639 estado.resultToW 
    Info (332119):    -0.090        -0.090 clk 
    Info (332119):    -0.086        -0.086 regOp[1] 
Info (332146): Worst-case recovery slack is 0.338
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.338         0.000 estado.resultToW 
    Info (332119):     0.364         0.000 clk 
    Info (332119):     0.765         0.000 estado.moveToRegisters 
Info (332146): Worst-case removal slack is -0.738
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.738        -2.901 estado.moveToRegisters 
    Info (332119):    -0.527        -3.523 estado.resultToW 
    Info (332119):    -0.011        -0.022 clk 
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222        -4.222 clk 
    Info (332119):    -1.222        -1.222 rst 
    Info (332119):     0.500         0.000 estado.moveToRegisters 
    Info (332119):     0.500         0.000 estado.resultToW 
    Info (332119):     0.500         0.000 regOp[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4567 megabytes
    Info: Processing ended: Wed Jun 27 19:34:14 2018
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


